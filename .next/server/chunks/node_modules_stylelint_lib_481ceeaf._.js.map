{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/eachDeclarationBlock.mjs"],"sourcesContent":["import { isAtRule, isRoot, isRule } from './typeGuards.mjs';\n\n/** @typedef {import('postcss').Root} Root */\n/** @typedef {import('postcss').Root} Document */\n/** @typedef {import('postcss').Node} PostcssNode */\n/** @typedef {import('postcss').Container} PostcssContainerNode */\n/** @typedef {import('postcss').Declaration} Declaration */\n/** @typedef {(callbackFn: (decl: Declaration, index: number, decls: Declaration[]) => void) => void} EachDeclaration */\n\n/**\n * @param {PostcssNode} node\n * @returns {node is PostcssContainerNode}\n */\nfunction isContainerNode(node) {\n\treturn isRule(node) || isAtRule(node) || isRoot(node);\n}\n\n/**\n * In order to accommodate nested blocks (postcss-nested),\n * we need to run a shallow loop (instead of eachDecl() or eachRule(),\n * which loop recursively) and allow each nested block to accumulate\n * its own list of properties -- so that a property in a nested rule\n * does not conflict with the same property in the parent rule\n * executes a provided function once for each declaration block.\n *\n * @param {Root | Document} root - root element of file.\n * @param {(eachDecl: EachDeclaration) => void} callback - Function to execute for each declaration block\n *\n * @returns {void}\n */\nexport default function eachDeclarationBlock(root, callback) {\n\t/**\n\t * @param {PostcssNode} statement\n\t *\n\t * @returns {void}\n\t */\n\tfunction each(statement) {\n\t\tif (!isContainerNode(statement)) return;\n\n\t\tif (statement.nodes && statement.nodes.length) {\n\t\t\t/** @type {Declaration[]} */\n\t\t\tconst decls = [];\n\n\t\t\tfor (const node of statement.nodes) {\n\t\t\t\tif (node.type === 'decl') {\n\t\t\t\t\tdecls.push(node);\n\t\t\t\t}\n\n\t\t\t\teach(node);\n\t\t\t}\n\n\t\t\tif (decls.length) {\n\t\t\t\tcallback(decls.forEach.bind(decls));\n\t\t\t}\n\t\t}\n\t}\n\n\teach(root);\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,2CAA2C,GAC3C,+CAA+C,GAC/C,kDAAkD,GAClD,gEAAgE,GAChE,yDAAyD,GACzD,sHAAsH,GAEtH;;;CAGC,GACD,SAAS,gBAAgB,IAAI;IAC5B,OAAO,CAAA,GAAA,0JAAA,CAAA,SAAM,AAAD,EAAE,SAAS,CAAA,GAAA,0JAAA,CAAA,WAAQ,AAAD,EAAE,SAAS,CAAA,GAAA,0JAAA,CAAA,SAAM,AAAD,EAAE;AACjD;AAee,SAAS,qBAAqB,IAAI,EAAE,QAAQ;IAC1D;;;;EAIC,GACD,SAAS,KAAK,SAAS;QACtB,IAAI,CAAC,gBAAgB,YAAY;QAEjC,IAAI,UAAU,KAAK,IAAI,UAAU,KAAK,CAAC,MAAM,EAAE;YAC9C,0BAA0B,GAC1B,MAAM,QAAQ,EAAE;YAEhB,KAAK,MAAM,QAAQ,UAAU,KAAK,CAAE;gBACnC,IAAI,KAAK,IAAI,KAAK,QAAQ;oBACzB,MAAM,IAAI,CAAC;gBACZ;gBAEA,KAAK;YACN;YAEA,IAAI,MAAM,MAAM,EAAE;gBACjB,SAAS,MAAM,OAAO,CAAC,IAAI,CAAC;YAC7B;QACD;IACD;IAEA,KAAK;AACN","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isCustomProperty.mjs"],"sourcesContent":["/**\n * Check whether a property is a custom one\n * @param {string} property\n * @returns {boolean}\n */\nexport default function isCustomProperty(property) {\n\treturn property.startsWith('--');\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACc,SAAS,iBAAiB,QAAQ;IAChD,OAAO,SAAS,UAAU,CAAC;AAC5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasLessInterpolation.mjs"],"sourcesContent":["const HAS_LESS_INTERPOLATION = /@\\{.+?\\}/;\n\n/**\n * Check whether a string has less interpolation\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has less interpolation\n */\nexport default function hasLessInterpolation(string) {\n\treturn HAS_LESS_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,yBAAyB;AAQhB,SAAS,qBAAqB,MAAM;IAClD,OAAO,uBAAuB,IAAI,CAAC;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasPsvInterpolation.mjs"],"sourcesContent":["const HAS_PSV_INTERPOLATION = /\\$\\(.+?\\)/;\n\n/**\n * Check whether a string has postcss-simple-vars interpolation\n *\n * @param {string} string\n * @returns {boolean}\n */\nexport default function hasPsvInterpolation(string) {\n\treturn HAS_PSV_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,wBAAwB;AAQf,SAAS,oBAAoB,MAAM;IACjD,OAAO,sBAAsB,IAAI,CAAC;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasScssInterpolation.mjs"],"sourcesContent":["const HAS_SCSS_INTERPOLATION = /#\\{.+?\\}/s;\n\n/**\n * Check whether a string has scss interpolation\n *\n * @param {string} string\n * @returns {boolean}\n */\nexport default function hasScssInterpolation(string) {\n\treturn HAS_SCSS_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,yBAAyB;AAQhB,SAAS,qBAAqB,MAAM;IAClD,OAAO,uBAAuB,IAAI,CAAC;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasTplInterpolation.mjs"],"sourcesContent":["const HAS_TPL_INTERPOLATION = /\\{.+?\\}/s;\n\n/**\n * Check whether a string has JS template literal interpolation or HTML-like template\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has template literal interpolation\n */\nexport default function hasTplInterpolation(string) {\n\treturn HAS_TPL_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,wBAAwB;AAQf,SAAS,oBAAoB,MAAM;IACjD,OAAO,sBAAsB,IAAI,CAAC;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasInterpolation.mjs"],"sourcesContent":["import hasLessInterpolation from './hasLessInterpolation.mjs';\nimport hasPsvInterpolation from './hasPsvInterpolation.mjs';\nimport hasScssInterpolation from './hasScssInterpolation.mjs';\nimport hasTplInterpolation from './hasTplInterpolation.mjs';\n\n/**\n * Check whether a string has interpolation\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has interpolation\n */\nexport default function hasInterpolation(string) {\n\t// SCSS or Less interpolation\n\tif (\n\t\thasLessInterpolation(string) ||\n\t\thasScssInterpolation(string) ||\n\t\thasTplInterpolation(string) ||\n\t\thasPsvInterpolation(string)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAQe,SAAS,iBAAiB,MAAM;IAC9C,6BAA6B;IAC7B,IACC,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE,WACrB,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE,WACrB,CAAA,GAAA,mKAAA,CAAA,UAAmB,AAAD,EAAE,WACpB,CAAA,GAAA,mKAAA,CAAA,UAAmB,AAAD,EAAE,SACnB;QACD,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isScssVariable.mjs"],"sourcesContent":["/**\n * Check whether a property is SCSS variable\n *\n * @param {string} property\n * @returns {boolean}\n */\nexport default function isScssVariable(property) {\n\t// SCSS var (e.g. $var: x), list (e.g. $list: (x)) or map (e.g. $map: (key:value))\n\tif (property.startsWith('$')) {\n\t\treturn true;\n\t}\n\n\t// SCSS var within a namespace (e.g. namespace.$var: x)\n\tif (property.includes('.$')) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACc,SAAS,eAAe,QAAQ;IAC9C,kFAAkF;IAClF,IAAI,SAAS,UAAU,CAAC,MAAM;QAC7B,OAAO;IACR;IAEA,uDAAuD;IACvD,IAAI,SAAS,QAAQ,CAAC,OAAO;QAC5B,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isStandardSyntaxProperty.mjs"],"sourcesContent":["import hasInterpolation from './hasInterpolation.mjs';\nimport isScssVariable from './isScssVariable.mjs';\n\n/**\n * Check whether a property is standard\n *\n * @param {string} property\n * @returns {boolean}\n */\nexport default function isStandardSyntaxProperty(property) {\n\t// SCSS var\n\tif (isScssVariable(property)) {\n\t\treturn false;\n\t}\n\n\t// Less var (e.g. @var: x)\n\tif (property.startsWith('@')) {\n\t\treturn false;\n\t}\n\n\t// Less append property value with space (e.g. transform+_: scale(2))\n\tif (property.endsWith('+') || property.endsWith('+_')) {\n\t\treturn false;\n\t}\n\n\t// SCSS or Less interpolation\n\tif (hasInterpolation(property)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAQe,SAAS,yBAAyB,QAAQ;IACxD,WAAW;IACX,IAAI,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE,WAAW;QAC7B,OAAO;IACR;IAEA,0BAA0B;IAC1B,IAAI,SAAS,UAAU,CAAC,MAAM;QAC7B,OAAO;IACR;IAEA,qEAAqE;IACrE,IAAI,SAAS,QAAQ,CAAC,QAAQ,SAAS,QAAQ,CAAC,OAAO;QACtD,OAAO;IACR;IAEA,6BAA6B;IAC7B,IAAI,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,WAAW;QAC/B,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isStandardSyntaxValue.mjs"],"sourcesContent":["import hasInterpolation from './hasInterpolation.mjs';\n\n/**\n * Check whether a value is standard\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport default function isStandardSyntaxValue(value) {\n\tlet normalizedValue = value;\n\n\t// Ignore operators before variables (example -$variable)\n\tif (/^[-+*/]/.test(value.charAt(0))) {\n\t\tnormalizedValue = normalizedValue.slice(1);\n\t}\n\n\t// SCSS variable (example $variable)\n\t// styled component interpolation (example ${foo => foo.bar})\n\tif (normalizedValue.startsWith('$')) {\n\t\treturn false;\n\t}\n\n\t// SCSS namespace (example namespace.$variable)\n\tif (/^.+\\.\\$/.test(value)) {\n\t\treturn false;\n\t}\n\n\t// SCSS namespace (example namespace.function-name())\n\tif (/^.+\\.[-\\w]+\\(/.test(value)) {\n\t\treturn false;\n\t}\n\n\t// Less variable\n\tif (normalizedValue.startsWith('@')) {\n\t\treturn false;\n\t}\n\n\t// SCSS or Less interpolation\n\tif (hasInterpolation(normalizedValue)) {\n\t\treturn false;\n\t}\n\n\t// WebExtension replacement keyword used by Chrome/Firefox\n\t// more information: https://developer.chrome.com/extensions/i18n\n\t// and https://github.com/stylelint/stylelint/issues/4707\n\tif (/__MSG_\\S+__/.test(value)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"],"names":[],"mappings":";;;AAAA;;AAQe,SAAS,sBAAsB,KAAK;IAClD,IAAI,kBAAkB;IAEtB,yDAAyD;IACzD,IAAI,UAAU,IAAI,CAAC,MAAM,MAAM,CAAC,KAAK;QACpC,kBAAkB,gBAAgB,KAAK,CAAC;IACzC;IAEA,oCAAoC;IACpC,6DAA6D;IAC7D,IAAI,gBAAgB,UAAU,CAAC,MAAM;QACpC,OAAO;IACR;IAEA,+CAA+C;IAC/C,IAAI,UAAU,IAAI,CAAC,QAAQ;QAC1B,OAAO;IACR;IAEA,qDAAqD;IACrD,IAAI,gBAAgB,IAAI,CAAC,QAAQ;QAChC,OAAO;IACR;IAEA,gBAAgB;IAChB,IAAI,gBAAgB,UAAU,CAAC,MAAM;QACpC,OAAO;IACR;IAEA,6BAA6B;IAC7B,IAAI,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,kBAAkB;QACtC,OAAO;IACR;IAEA,0DAA0D;IAC1D,iEAAiE;IACjE,yDAAyD;IACzD,IAAI,cAAc,IAAI,CAAC,QAAQ;QAC9B,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/vendor.mjs"],"sourcesContent":["/**\n * Contains helpers for working with vendor prefixes.\n *\n * Copied from https://github.com/postcss/postcss/commit/777c55b5d2a10605313a4972888f4f32005f5ac2\n *\n * @namespace vendor\n */\nexport default {\n\t/**\n\t * Returns the vendor prefix extracted from an input string.\n\t *\n\t * @param {string} prop String with or without vendor prefix.\n\t *\n\t * @returns {string} vendor prefix or empty string\n\t *\n\t * @example\n\t * vendor.prefix('-moz-tab-size') //=> '-moz-'\n\t * vendor.prefix('tab-size')      //=> ''\n\t */\n\tprefix(prop) {\n\t\tconst match = prop.match(/^(-\\w+-)/);\n\n\t\tif (match) {\n\t\t\treturn match[0] || '';\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t * Returns the input string stripped of its vendor prefix.\n\t *\n\t * @param {string} prop String with or without vendor prefix.\n\t *\n\t * @returns {string} String name without vendor prefixes.\n\t *\n\t * @example\n\t * vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n\t */\n\tunprefixed(prop) {\n\t\treturn prop.replace(/^-\\w+-/, '');\n\t},\n};\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;uCACc;IACd;;;;;;;;;;EAUC,GACD,QAAO,IAAI;QACV,MAAM,QAAQ,KAAK,KAAK,CAAC;QAEzB,IAAI,OAAO;YACV,OAAO,KAAK,CAAC,EAAE,IAAI;QACpB;QAEA,OAAO;IACR;IAEA;;;;;;;;;EASC,GACD,YAAW,IAAI;QACd,OAAO,KAAK,OAAO,CAAC,UAAU;IAC/B;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/rules/declaration-block-no-duplicate-properties/index.mjs"],"sourcesContent":["import { List, parse } from 'css-tree';\n\nimport { isRegExp, isString } from '../../utils/validateTypes.mjs';\nimport eachDeclarationBlock from '../../utils/eachDeclarationBlock.mjs';\nimport isCustomProperty from '../../utils/isCustomProperty.mjs';\nimport isStandardSyntaxProperty from '../../utils/isStandardSyntaxProperty.mjs';\nimport isStandardSyntaxValue from '../../utils/isStandardSyntaxValue.mjs';\nimport optionsMatches from '../../utils/optionsMatches.mjs';\nimport report from '../../utils/report.mjs';\nimport ruleMessages from '../../utils/ruleMessages.mjs';\nimport validateOptions from '../../utils/validateOptions.mjs';\nimport vendor from '../../utils/vendor.mjs';\n\nconst ruleName = 'declaration-block-no-duplicate-properties';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property) => `Unexpected duplicate \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-block-no-duplicate-properties',\n\tfixable: true,\n};\n\n/** @typedef {import('css-tree').CssNode} CssNode */\n/** @typedef {import('postcss').Declaration} Declaration */\n\n/** @type {(node: CssNode) => node is CssNode & { children: import('css-tree').List<CssNode> }} */\nconst hasChildren = (node) => 'children' in node && node.children instanceof List;\n\n/** @type {(node1: CssNode[], node2: CssNode[]) => boolean} */\nconst isEqualValueNodes = (nodes1, nodes2) => {\n\t// Different lengths indicate different syntaxes.\n\tif (nodes1.length !== nodes2.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < nodes1.length; i++) {\n\t\tconst node1 = nodes1[i];\n\t\tconst node2 = nodes2[i];\n\n\t\t// Different types indicate different syntaxes.\n\t\tif (typeof node1 === 'undefined' || typeof node2 === 'undefined' || node1.type !== node2.type) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst node1Name = 'name' in node1 ? String(node1.name) : '';\n\t\tconst node2Name = 'name' in node2 ? String(node2.name) : '';\n\n\t\t// Custom properties have unknown value syntaxes but are equal for CSS parsers.\n\t\tif (\n\t\t\tnode1.type === 'Identifier' &&\n\t\t\tisCustomProperty(node1Name) &&\n\t\t\tnode2.type === 'Identifier' &&\n\t\t\tisCustomProperty(node2Name)\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Different ident or function names indicate different syntaxes.\n\t\tif (node1Name.toLowerCase() !== node2Name.toLowerCase()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst node1Unit = 'unit' in node1 ? node1.unit : '';\n\t\tconst node2Unit = 'unit' in node2 ? node2.unit : '';\n\n\t\t// Different units indicate different syntaxes.\n\t\tif (node1Unit !== node2Unit) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst node1Children = hasChildren(node1) ? node1.children.toArray() : null;\n\t\tconst node2Children = hasChildren(node2) ? node2.children.toArray() : null;\n\n\t\tif (Array.isArray(node1Children) && Array.isArray(node2Children)) {\n\t\t\tif (isEqualValueNodes(node1Children, node2Children)) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/** @type {(value1: string, value2: string) => boolean} */\nconst isEqualValueSyntaxes = (value1, value2) => {\n\tif (value1 === value2) {\n\t\treturn true;\n\t}\n\n\tif (!(isStandardSyntaxValue(value1) && isStandardSyntaxValue(value2))) {\n\t\treturn false;\n\t}\n\n\tlet value1Node;\n\tlet value2Node;\n\n\ttry {\n\t\tvalue1Node = parse(value1, { context: 'value' });\n\t\tvalue2Node = parse(value2, { context: 'value' });\n\t} catch {\n\t\treturn false;\n\t}\n\n\tconst node1Children = hasChildren(value1Node) ? value1Node.children.toArray() : [];\n\tconst node2Children = hasChildren(value2Node) ? value2Node.children.toArray() : [];\n\n\treturn isEqualValueNodes(node1Children, node2Children);\n};\n\n/** @type {import('stylelint').CoreRules[ruleName]} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: [\n\t\t\t\t\t\t'consecutive-duplicates',\n\t\t\t\t\t\t'consecutive-duplicates-with-different-values',\n\t\t\t\t\t\t'consecutive-duplicates-with-different-syntaxes',\n\t\t\t\t\t\t'consecutive-duplicates-with-same-prefixless-values',\n\t\t\t\t\t],\n\t\t\t\t\tignoreProperties: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreDuplicates = optionsMatches(secondaryOptions, 'ignore', 'consecutive-duplicates');\n\t\tconst ignoreDiffValues = optionsMatches(\n\t\t\tsecondaryOptions,\n\t\t\t'ignore',\n\t\t\t'consecutive-duplicates-with-different-values',\n\t\t);\n\t\tconst ignoreDiffSyntaxes = optionsMatches(\n\t\t\tsecondaryOptions,\n\t\t\t'ignore',\n\t\t\t'consecutive-duplicates-with-different-syntaxes',\n\t\t);\n\t\tconst ignorePrefixlessSameValues = optionsMatches(\n\t\t\tsecondaryOptions,\n\t\t\t'ignore',\n\t\t\t'consecutive-duplicates-with-same-prefixless-values',\n\t\t);\n\n\t\t/** @param {Declaration} node */\n\t\tconst fixer = (node) => () => {\n\t\t\tnode.remove();\n\t\t};\n\n\t\teachDeclarationBlock(root, (eachDecl) => {\n\t\t\t/** @type {Declaration[]} */\n\t\t\tconst decls = [];\n\n\t\t\teachDecl((decl) => {\n\t\t\t\tconst prop = decl.prop;\n\t\t\t\tconst lowerProp = decl.prop.toLowerCase();\n\t\t\t\tconst value = decl.value;\n\t\t\t\tconst important = decl.important;\n\n\t\t\t\tif (!isStandardSyntaxProperty(prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (isCustomProperty(prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Return early if the property is to be ignored\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreProperties', prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore the src property as commonly duplicated in at-fontface\n\t\t\t\tif (lowerProp === 'src') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst indexDuplicate = decls.findIndex((d) => d.prop.toLowerCase() === lowerProp);\n\n\t\t\t\tif (indexDuplicate === -1) {\n\t\t\t\t\tdecls.push(decl);\n\t\t\t\t}\n\n\t\t\t\tconst duplicateDecl = decls[indexDuplicate];\n\n\t\t\t\tif (!duplicateDecl) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst duplicateValue = duplicateDecl.value || '';\n\t\t\t\tconst duplicateImportant = duplicateDecl.important || false;\n\t\t\t\tconst duplicateIsMoreImportant = !important && duplicateImportant;\n\t\t\t\tconst duplicatesAreConsecutive = indexDuplicate === decls.length - 1;\n\t\t\t\tconst unprefixedDuplicatesAreEqual =\n\t\t\t\t\tvendor.unprefixed(value) === vendor.unprefixed(duplicateValue);\n\n\t\t\t\tconst fixOrReport = () => {\n\t\t\t\t\tconst node = duplicateIsMoreImportant ? decl : duplicateDecl;\n\t\t\t\t\tconst word = duplicateIsMoreImportant ? prop : duplicateDecl.prop;\n\n\t\t\t\t\tif (!duplicateIsMoreImportant) {\n\t\t\t\t\t\t// replace previous \"active\" decl with current one\n\t\t\t\t\t\tdecls[indexDuplicate] = decl;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [word],\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tword,\n\t\t\t\t\t\tfix: {\n\t\t\t\t\t\t\tapply: fixer(node),\n\t\t\t\t\t\t\tnode: node.parent,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tif (ignoreDiffValues || ignoreDiffSyntaxes || ignorePrefixlessSameValues) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!duplicatesAreConsecutive ||\n\t\t\t\t\t\t(ignorePrefixlessSameValues && !unprefixedDuplicatesAreEqual)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfixOrReport();\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ignoreDiffSyntaxes) {\n\t\t\t\t\t\tconst duplicateValueSyntaxesAreEqual = isEqualValueSyntaxes(value, duplicateValue);\n\n\t\t\t\t\t\tif (duplicateValueSyntaxesAreEqual) {\n\t\t\t\t\t\t\tfixOrReport();\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value !== duplicateValue) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn report({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [duplicateDecl.prop],\n\t\t\t\t\t\tnode: duplicateDecl,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tword: duplicateDecl.prop,\n\t\t\t\t\t\tfix: {\n\t\t\t\t\t\t\tapply: fixer(duplicateDecl),\n\t\t\t\t\t\t\tnode: duplicateDecl.parent,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (ignoreDuplicates && duplicatesAreConsecutive) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfixOrReport();\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nexport default rule;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}