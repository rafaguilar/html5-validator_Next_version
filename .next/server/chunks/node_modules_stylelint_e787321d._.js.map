{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/rules/index.mjs"],"sourcesContent":["/** @type {import('stylelint').PublicApi['rules']} */\nconst rules = {\n\tget 'alpha-value-notation'() {\n\t\treturn import('./alpha-value-notation/index.mjs').then((m) => m.default);\n\t},\n\tget 'annotation-no-unknown'() {\n\t\treturn import('./annotation-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'at-rule-allowed-list'() {\n\t\treturn import('./at-rule-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'at-rule-descriptor-no-unknown'() {\n\t\treturn import('./at-rule-descriptor-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'at-rule-descriptor-value-no-unknown'() {\n\t\treturn import('./at-rule-descriptor-value-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'at-rule-disallowed-list'() {\n\t\treturn import('./at-rule-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'at-rule-empty-line-before'() {\n\t\treturn import('./at-rule-empty-line-before/index.mjs').then((m) => m.default);\n\t},\n\tget 'at-rule-no-deprecated'() {\n\t\treturn import('./at-rule-no-deprecated/index.mjs').then((m) => m.default);\n\t},\n\tget 'at-rule-no-unknown'() {\n\t\treturn import('./at-rule-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'at-rule-no-vendor-prefix'() {\n\t\treturn import('./at-rule-no-vendor-prefix/index.mjs').then((m) => m.default);\n\t},\n\tget 'at-rule-prelude-no-invalid'() {\n\t\treturn import('./at-rule-prelude-no-invalid/index.mjs').then((m) => m.default);\n\t},\n\tget 'at-rule-property-required-list'() {\n\t\treturn import('./at-rule-property-required-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'block-no-empty'() {\n\t\treturn import('./block-no-empty/index.mjs').then((m) => m.default);\n\t},\n\tget 'color-function-alias-notation'() {\n\t\treturn import('./color-function-alias-notation/index.mjs').then((m) => m.default);\n\t},\n\tget 'color-function-notation'() {\n\t\treturn import('./color-function-notation/index.mjs').then((m) => m.default);\n\t},\n\tget 'color-hex-alpha'() {\n\t\treturn import('./color-hex-alpha/index.mjs').then((m) => m.default);\n\t},\n\tget 'color-hex-length'() {\n\t\treturn import('./color-hex-length/index.mjs').then((m) => m.default);\n\t},\n\tget 'color-named'() {\n\t\treturn import('./color-named/index.mjs').then((m) => m.default);\n\t},\n\tget 'color-no-hex'() {\n\t\treturn import('./color-no-hex/index.mjs').then((m) => m.default);\n\t},\n\tget 'color-no-invalid-hex'() {\n\t\treturn import('./color-no-invalid-hex/index.mjs').then((m) => m.default);\n\t},\n\tget 'comment-empty-line-before'() {\n\t\treturn import('./comment-empty-line-before/index.mjs').then((m) => m.default);\n\t},\n\tget 'comment-no-empty'() {\n\t\treturn import('./comment-no-empty/index.mjs').then((m) => m.default);\n\t},\n\tget 'comment-pattern'() {\n\t\treturn import('./comment-pattern/index.mjs').then((m) => m.default);\n\t},\n\tget 'comment-whitespace-inside'() {\n\t\treturn import('./comment-whitespace-inside/index.mjs').then((m) => m.default);\n\t},\n\tget 'comment-word-disallowed-list'() {\n\t\treturn import('./comment-word-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'container-name-pattern'() {\n\t\treturn import('./container-name-pattern/index.mjs').then((m) => m.default);\n\t},\n\tget 'custom-media-pattern'() {\n\t\treturn import('./custom-media-pattern/index.mjs').then((m) => m.default);\n\t},\n\tget 'custom-property-empty-line-before'() {\n\t\treturn import('./custom-property-empty-line-before/index.mjs').then((m) => m.default);\n\t},\n\tget 'custom-property-no-missing-var-function'() {\n\t\treturn import('./custom-property-no-missing-var-function/index.mjs').then((m) => m.default);\n\t},\n\tget 'custom-property-pattern'() {\n\t\treturn import('./custom-property-pattern/index.mjs').then((m) => m.default);\n\t},\n\tget 'declaration-block-no-duplicate-custom-properties'() {\n\t\treturn import('./declaration-block-no-duplicate-custom-properties/index.mjs').then(\n\t\t\t(m) => m.default,\n\t\t);\n\t},\n\tget 'declaration-block-no-duplicate-properties'() {\n\t\treturn import('./declaration-block-no-duplicate-properties/index.mjs').then((m) => m.default);\n\t},\n\tget 'declaration-block-no-redundant-longhand-properties'() {\n\t\treturn import('./declaration-block-no-redundant-longhand-properties/index.mjs').then(\n\t\t\t(m) => m.default,\n\t\t);\n\t},\n\tget 'declaration-block-no-shorthand-property-overrides'() {\n\t\treturn import('./declaration-block-no-shorthand-property-overrides/index.mjs').then(\n\t\t\t(m) => m.default,\n\t\t);\n\t},\n\tget 'declaration-block-single-line-max-declarations'() {\n\t\treturn import('./declaration-block-single-line-max-declarations/index.mjs').then(\n\t\t\t(m) => m.default,\n\t\t);\n\t},\n\tget 'declaration-empty-line-before'() {\n\t\treturn import('./declaration-empty-line-before/index.mjs').then((m) => m.default);\n\t},\n\tget 'declaration-no-important'() {\n\t\treturn import('./declaration-no-important/index.mjs').then((m) => m.default);\n\t},\n\tget 'declaration-property-max-values'() {\n\t\treturn import('./declaration-property-max-values/index.mjs').then((m) => m.default);\n\t},\n\tget 'declaration-property-unit-allowed-list'() {\n\t\treturn import('./declaration-property-unit-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'declaration-property-unit-disallowed-list'() {\n\t\treturn import('./declaration-property-unit-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'declaration-property-value-allowed-list'() {\n\t\treturn import('./declaration-property-value-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'declaration-property-value-disallowed-list'() {\n\t\treturn import('./declaration-property-value-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'declaration-property-value-keyword-no-deprecated'() {\n\t\treturn import('./declaration-property-value-keyword-no-deprecated/index.mjs').then(\n\t\t\t(m) => m.default,\n\t\t);\n\t},\n\tget 'declaration-property-value-no-unknown'() {\n\t\treturn import('./declaration-property-value-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'font-family-name-quotes'() {\n\t\treturn import('./font-family-name-quotes/index.mjs').then((m) => m.default);\n\t},\n\tget 'font-family-no-duplicate-names'() {\n\t\treturn import('./font-family-no-duplicate-names/index.mjs').then((m) => m.default);\n\t},\n\tget 'font-family-no-missing-generic-family-keyword'() {\n\t\treturn import('./font-family-no-missing-generic-family-keyword/index.mjs').then(\n\t\t\t(m) => m.default,\n\t\t);\n\t},\n\tget 'font-weight-notation'() {\n\t\treturn import('./font-weight-notation/index.mjs').then((m) => m.default);\n\t},\n\tget 'function-allowed-list'() {\n\t\treturn import('./function-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'function-calc-no-unspaced-operator'() {\n\t\treturn import('./function-calc-no-unspaced-operator/index.mjs').then((m) => m.default);\n\t},\n\tget 'function-disallowed-list'() {\n\t\treturn import('./function-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'function-linear-gradient-no-nonstandard-direction'() {\n\t\treturn import('./function-linear-gradient-no-nonstandard-direction/index.mjs').then(\n\t\t\t(m) => m.default,\n\t\t);\n\t},\n\tget 'function-name-case'() {\n\t\treturn import('./function-name-case/index.mjs').then((m) => m.default);\n\t},\n\tget 'function-no-unknown'() {\n\t\treturn import('./function-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'function-url-no-scheme-relative'() {\n\t\treturn import('./function-url-no-scheme-relative/index.mjs').then((m) => m.default);\n\t},\n\tget 'function-url-quotes'() {\n\t\treturn import('./function-url-quotes/index.mjs').then((m) => m.default);\n\t},\n\tget 'function-url-scheme-allowed-list'() {\n\t\treturn import('./function-url-scheme-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'function-url-scheme-disallowed-list'() {\n\t\treturn import('./function-url-scheme-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'hue-degree-notation'() {\n\t\treturn import('./hue-degree-notation/index.mjs').then((m) => m.default);\n\t},\n\tget 'import-notation'() {\n\t\treturn import('./import-notation/index.mjs').then((m) => m.default);\n\t},\n\tget 'keyframe-block-no-duplicate-selectors'() {\n\t\treturn import('./keyframe-block-no-duplicate-selectors/index.mjs').then((m) => m.default);\n\t},\n\tget 'keyframe-declaration-no-important'() {\n\t\treturn import('./keyframe-declaration-no-important/index.mjs').then((m) => m.default);\n\t},\n\tget 'keyframe-selector-notation'() {\n\t\treturn import('./keyframe-selector-notation/index.mjs').then((m) => m.default);\n\t},\n\tget 'keyframes-name-pattern'() {\n\t\treturn import('./keyframes-name-pattern/index.mjs').then((m) => m.default);\n\t},\n\tget 'layer-name-pattern'() {\n\t\treturn import('./layer-name-pattern/index.mjs').then((m) => m.default);\n\t},\n\tget 'length-zero-no-unit'() {\n\t\treturn import('./length-zero-no-unit/index.mjs').then((m) => m.default);\n\t},\n\tget 'lightness-notation'() {\n\t\treturn import('./lightness-notation/index.mjs').then((m) => m.default);\n\t},\n\tget 'max-nesting-depth'() {\n\t\treturn import('./max-nesting-depth/index.mjs').then((m) => m.default);\n\t},\n\tget 'media-feature-name-allowed-list'() {\n\t\treturn import('./media-feature-name-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'media-feature-name-disallowed-list'() {\n\t\treturn import('./media-feature-name-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'media-feature-name-no-unknown'() {\n\t\treturn import('./media-feature-name-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'media-feature-name-no-vendor-prefix'() {\n\t\treturn import('./media-feature-name-no-vendor-prefix/index.mjs').then((m) => m.default);\n\t},\n\tget 'media-feature-name-unit-allowed-list'() {\n\t\treturn import('./media-feature-name-unit-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'media-feature-name-value-allowed-list'() {\n\t\treturn import('./media-feature-name-value-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'media-feature-name-value-no-unknown'() {\n\t\treturn import('./media-feature-name-value-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'media-feature-range-notation'() {\n\t\treturn import('./media-feature-range-notation/index.mjs').then((m) => m.default);\n\t},\n\tget 'media-query-no-invalid'() {\n\t\treturn import('./media-query-no-invalid/index.mjs').then((m) => m.default);\n\t},\n\tget 'named-grid-areas-no-invalid'() {\n\t\treturn import('./named-grid-areas-no-invalid/index.mjs').then((m) => m.default);\n\t},\n\tget 'no-descending-specificity'() {\n\t\treturn import('./no-descending-specificity/index.mjs').then((m) => m.default);\n\t},\n\tget 'no-duplicate-at-import-rules'() {\n\t\treturn import('./no-duplicate-at-import-rules/index.mjs').then((m) => m.default);\n\t},\n\tget 'no-duplicate-selectors'() {\n\t\treturn import('./no-duplicate-selectors/index.mjs').then((m) => m.default);\n\t},\n\tget 'no-empty-source'() {\n\t\treturn import('./no-empty-source/index.mjs').then((m) => m.default);\n\t},\n\tget 'no-invalid-double-slash-comments'() {\n\t\treturn import('./no-invalid-double-slash-comments/index.mjs').then((m) => m.default);\n\t},\n\tget 'no-invalid-position-at-import-rule'() {\n\t\treturn import('./no-invalid-position-at-import-rule/index.mjs').then((m) => m.default);\n\t},\n\tget 'no-irregular-whitespace'() {\n\t\treturn import('./no-irregular-whitespace/index.mjs').then((m) => m.default);\n\t},\n\tget 'no-unknown-animations'() {\n\t\treturn import('./no-unknown-animations/index.mjs').then((m) => m.default);\n\t},\n\tget 'no-unknown-custom-media'() {\n\t\treturn import('./no-unknown-custom-media/index.mjs').then((m) => m.default);\n\t},\n\tget 'no-unknown-custom-properties'() {\n\t\treturn import('./no-unknown-custom-properties/index.mjs').then((m) => m.default);\n\t},\n\tget 'number-max-precision'() {\n\t\treturn import('./number-max-precision/index.mjs').then((m) => m.default);\n\t},\n\tget 'property-allowed-list'() {\n\t\treturn import('./property-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'property-disallowed-list'() {\n\t\treturn import('./property-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'property-no-unknown'() {\n\t\treturn import('./property-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'property-no-vendor-prefix'() {\n\t\treturn import('./property-no-vendor-prefix/index.mjs').then((m) => m.default);\n\t},\n\tget 'rule-empty-line-before'() {\n\t\treturn import('./rule-empty-line-before/index.mjs').then((m) => m.default);\n\t},\n\tget 'rule-selector-property-disallowed-list'() {\n\t\treturn import('./rule-selector-property-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-anb-no-unmatchable'() {\n\t\treturn import('./selector-anb-no-unmatchable/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-attribute-name-disallowed-list'() {\n\t\treturn import('./selector-attribute-name-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-attribute-operator-allowed-list'() {\n\t\treturn import('./selector-attribute-operator-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-attribute-operator-disallowed-list'() {\n\t\treturn import('./selector-attribute-operator-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-attribute-quotes'() {\n\t\treturn import('./selector-attribute-quotes/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-class-pattern'() {\n\t\treturn import('./selector-class-pattern/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-combinator-allowed-list'() {\n\t\treturn import('./selector-combinator-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-combinator-disallowed-list'() {\n\t\treturn import('./selector-combinator-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-disallowed-list'() {\n\t\treturn import('./selector-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-id-pattern'() {\n\t\treturn import('./selector-id-pattern/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-max-attribute'() {\n\t\treturn import('./selector-max-attribute/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-max-class'() {\n\t\treturn import('./selector-max-class/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-max-combinators'() {\n\t\treturn import('./selector-max-combinators/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-max-compound-selectors'() {\n\t\treturn import('./selector-max-compound-selectors/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-max-id'() {\n\t\treturn import('./selector-max-id/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-max-pseudo-class'() {\n\t\treturn import('./selector-max-pseudo-class/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-max-specificity'() {\n\t\treturn import('./selector-max-specificity/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-max-type'() {\n\t\treturn import('./selector-max-type/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-max-universal'() {\n\t\treturn import('./selector-max-universal/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-nested-pattern'() {\n\t\treturn import('./selector-nested-pattern/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-no-qualifying-type'() {\n\t\treturn import('./selector-no-qualifying-type/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-no-vendor-prefix'() {\n\t\treturn import('./selector-no-vendor-prefix/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-not-notation'() {\n\t\treturn import('./selector-not-notation/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-pseudo-class-allowed-list'() {\n\t\treturn import('./selector-pseudo-class-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-pseudo-class-disallowed-list'() {\n\t\treturn import('./selector-pseudo-class-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-pseudo-class-no-unknown'() {\n\t\treturn import('./selector-pseudo-class-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-pseudo-element-allowed-list'() {\n\t\treturn import('./selector-pseudo-element-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-pseudo-element-colon-notation'() {\n\t\treturn import('./selector-pseudo-element-colon-notation/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-pseudo-element-disallowed-list'() {\n\t\treturn import('./selector-pseudo-element-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-pseudo-element-no-unknown'() {\n\t\treturn import('./selector-pseudo-element-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-type-case'() {\n\t\treturn import('./selector-type-case/index.mjs').then((m) => m.default);\n\t},\n\tget 'selector-type-no-unknown'() {\n\t\treturn import('./selector-type-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'shorthand-property-no-redundant-values'() {\n\t\treturn import('./shorthand-property-no-redundant-values/index.mjs').then((m) => m.default);\n\t},\n\tget 'string-no-newline'() {\n\t\treturn import('./string-no-newline/index.mjs').then((m) => m.default);\n\t},\n\tget 'syntax-string-no-invalid'() {\n\t\treturn import('./syntax-string-no-invalid/index.mjs').then((m) => m.default);\n\t},\n\tget 'time-min-milliseconds'() {\n\t\treturn import('./time-min-milliseconds/index.mjs').then((m) => m.default);\n\t},\n\tget 'unit-allowed-list'() {\n\t\treturn import('./unit-allowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'unit-disallowed-list'() {\n\t\treturn import('./unit-disallowed-list/index.mjs').then((m) => m.default);\n\t},\n\tget 'unit-no-unknown'() {\n\t\treturn import('./unit-no-unknown/index.mjs').then((m) => m.default);\n\t},\n\tget 'value-keyword-case'() {\n\t\treturn import('./value-keyword-case/index.mjs').then((m) => m.default);\n\t},\n\tget 'value-no-vendor-prefix'() {\n\t\treturn import('./value-no-vendor-prefix/index.mjs').then((m) => m.default);\n\t},\n};\n\nexport default rules;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getStylelintRule.mjs"],"sourcesContent":["import rules from '../rules/index.mjs';\n\n/**\n * @param {string} ruleName\n * @param {import('stylelint').Config | undefined} [config]\n * @returns {Promise<import('stylelint').Rule | undefined>}\n */\nexport default function getStylelintRule(ruleName, config) {\n\tif (isBuiltInRule(ruleName)) {\n\t\treturn rules[ruleName];\n\t}\n\n\treturn Promise.resolve(config?.pluginFunctions?.[ruleName]);\n}\n\n/**\n * @param {string} ruleName\n * @returns {ruleName is keyof rules}\n */\nfunction isBuiltInRule(ruleName) {\n\treturn ruleName in rules;\n}\n"],"names":[],"mappings":";;;AAAA;;AAOe,SAAS,iBAAiB,QAAQ,EAAE,MAAM;IACxD,IAAI,cAAc,WAAW;QAC5B,OAAO,qJAAA,CAAA,UAAK,CAAC,SAAS;IACvB;IAEA,OAAO,QAAQ,OAAO,CAAC,QAAQ,iBAAiB,CAAC,SAAS;AAC3D;AAEA;;;CAGC,GACD,SAAS,cAAc,QAAQ;IAC9B,OAAO,YAAY,qJAAA,CAAA,UAAK;AACzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/validateTypes.mjs"],"sourcesContent":["import { isPlainObject as _isPlainObject } from 'is-plain-object';\n\n/** @import { Range, Position } from 'stylelint' */\n\n/**\n * Checks if the value is a boolean or a Boolean object.\n * @param {unknown} value\n * @returns {value is boolean}\n */\nexport function isBoolean(value) {\n\treturn typeof value === 'boolean' || value instanceof Boolean;\n}\n\n/**\n * Checks if the value is a function or a Function object.\n * @param {unknown} value\n * @returns {value is Function}\n */\nexport function isFunction(value) {\n\treturn typeof value === 'function' || value instanceof Function;\n}\n\n/**\n * Checks if the value is *nullish*.\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Nullish\n * @param {unknown} value\n * @returns {value is null | undefined}\n */\nexport function isNullish(value) {\n\treturn value == null;\n}\n\n/**\n * Checks if the value is a number or a Number object.\n * @param {unknown} value\n * @returns {value is number}\n */\nexport function isNumber(value) {\n\treturn typeof value === 'number' || value instanceof Number;\n}\n\n/**\n * Checks if the value is an object.\n * @param {unknown} value\n * @returns {value is object}\n */\nexport function isObject(value) {\n\treturn value !== null && typeof value === 'object';\n}\n\n/**\n * Checks if the value is a regular expression.\n * @param {unknown} value\n * @returns {value is RegExp}\n */\nexport function isRegExp(value) {\n\treturn value instanceof RegExp;\n}\n\n/**\n * Checks if the value is a string or a String object.\n * @param {unknown} value\n * @returns {value is string}\n */\nexport function isString(value) {\n\treturn typeof value === 'string' || value instanceof String;\n}\n\n/**\n * Checks if the value is a plain object.\n * @param {unknown} value\n * @returns {value is Record<string, unknown>}\n */\nexport function isPlainObject(value) {\n\treturn _isPlainObject(value);\n}\n\n/**\n * Assert that the value is truthy.\n * @param {unknown} value\n * @param {string} [message]\n * @returns {asserts value}\n */\nexport function assert(value, message = undefined) {\n\tif (message) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.assert(value, message);\n\t} else {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.assert(value);\n\t}\n}\n\n/**\n * Assert that the value is a function or a Function object.\n * @param {unknown} value\n * @returns {asserts value is Function}\n */\nexport function assertFunction(value) {\n\t// eslint-disable-next-line no-console\n\tconsole.assert(isFunction(value), `\"${value}\" must be a function`);\n}\n\n/**\n * Assert that the value is a number or a Number object.\n * @param {unknown} value\n * @returns {asserts value is number}\n */\nexport function assertNumber(value) {\n\t// eslint-disable-next-line no-console\n\tconsole.assert(isNumber(value), `\"${value}\" must be a number`);\n}\n\n/**\n * Assert that the value is a string or a String object.\n * @param {unknown} value\n * @returns {asserts value is string}\n */\nexport function assertString(value) {\n\t// eslint-disable-next-line no-console\n\tconsole.assert(isString(value), `\"${value}\" must be a string`);\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Position}\n */\nexport function isPosition(value) {\n\tif (!isPlainObject(value)) return false;\n\n\tif (!isNumber(value.line)) return false;\n\n\tif (!isNumber(value.column)) return false;\n\n\treturn true;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Range}\n */\nexport function isRange(value) {\n\tif (!isPlainObject(value)) return false;\n\n\tif (!isPosition(value.start)) return false;\n\n\tif (!isPosition(value.end)) return false;\n\n\treturn true;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;AASO,SAAS,UAAU,KAAK;IAC9B,OAAO,OAAO,UAAU,aAAa,iBAAiB;AACvD;AAOO,SAAS,WAAW,KAAK;IAC/B,OAAO,OAAO,UAAU,cAAc,iBAAiB;AACxD;AAQO,SAAS,UAAU,KAAK;IAC9B,OAAO,SAAS;AACjB;AAOO,SAAS,SAAS,KAAK;IAC7B,OAAO,OAAO,UAAU,YAAY,iBAAiB;AACtD;AAOO,SAAS,SAAS,KAAK;IAC7B,OAAO,UAAU,QAAQ,OAAO,UAAU;AAC3C;AAOO,SAAS,SAAS,KAAK;IAC7B,OAAO,iBAAiB;AACzB;AAOO,SAAS,SAAS,KAAK;IAC7B,OAAO,OAAO,UAAU,YAAY,iBAAiB;AACtD;AAOO,SAAS,cAAc,KAAK;IAClC,OAAO,CAAA,GAAA,yKAAA,CAAA,gBAAc,AAAD,EAAE;AACvB;AAQO,SAAS,OAAO,KAAK,EAAE,UAAU,SAAS;IAChD,IAAI,SAAS;QACZ,sCAAsC;QACtC,QAAQ,MAAM,CAAC,OAAO;IACvB,OAAO;QACN,sCAAsC;QACtC,QAAQ,MAAM,CAAC;IAChB;AACD;AAOO,SAAS,eAAe,KAAK;IACnC,sCAAsC;IACtC,QAAQ,MAAM,CAAC,WAAW,QAAQ,CAAC,CAAC,EAAE,MAAM,oBAAoB,CAAC;AAClE;AAOO,SAAS,aAAa,KAAK;IACjC,sCAAsC;IACtC,QAAQ,MAAM,CAAC,SAAS,QAAQ,CAAC,CAAC,EAAE,MAAM,kBAAkB,CAAC;AAC9D;AAOO,SAAS,aAAa,KAAK;IACjC,sCAAsC;IACtC,QAAQ,MAAM,CAAC,SAAS,QAAQ,CAAC,CAAC,EAAE,MAAM,kBAAkB,CAAC;AAC9D;AAMO,SAAS,WAAW,KAAK;IAC/B,IAAI,CAAC,cAAc,QAAQ,OAAO;IAElC,IAAI,CAAC,SAAS,MAAM,IAAI,GAAG,OAAO;IAElC,IAAI,CAAC,SAAS,MAAM,MAAM,GAAG,OAAO;IAEpC,OAAO;AACR;AAMO,SAAS,QAAQ,KAAK;IAC5B,IAAI,CAAC,cAAc,QAAQ,OAAO;IAElC,IAAI,CAAC,WAAW,MAAM,KAAK,GAAG,OAAO;IAErC,IAAI,CAAC,WAAW,MAAM,GAAG,GAAG,OAAO;IAEnC,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/normalizeRuleSettings.mjs"],"sourcesContent":["import { isPlainObject } from './utils/validateTypes.mjs';\n\n// Rule settings can take a number of forms, e.g.\n// a. \"rule-name\": null\n// b. \"rule-name\": [null, ...]\n// c. \"rule-name\": primaryOption\n// d. \"rule-name\": [primaryOption]\n// e. \"rule-name\": [primaryOption, secondaryOption]\n// Where primaryOption can be anything: primitive, Object, or Array.\n\n/**\n * This function normalizes all the possibilities into the\n * standard form: [primaryOption, secondaryOption]\n * Except in the cases with null, a & b, in which case\n * null is returned\n * @template T\n * @template {object} O\n * @param {import('stylelint').ConfigRuleSettings<T, O>} rawSettings\n * @param {import('stylelint').Rule<T, O>} [rule]\n * @returns {[T] | [T, O] | null}\n */\nexport default function normalizeRuleSettings(rawSettings, rule) {\n\tif (rawSettings === null || rawSettings === undefined) {\n\t\treturn null;\n\t}\n\n\tif (!Array.isArray(rawSettings)) {\n\t\treturn [rawSettings];\n\t}\n\t// Everything below is an array ...\n\n\tconst [primary, secondary] = rawSettings;\n\n\tif (rawSettings.length > 0 && (primary === null || primary === undefined)) {\n\t\treturn null;\n\t}\n\n\tif (rule && !rule.primaryOptionArray) {\n\t\treturn rawSettings;\n\t}\n\t// Everything below is a rule that CAN have an array for a primary option ...\n\t// (they might also have something else, e.g. rule-properties-order can\n\t// have the string \"alphabetical\")\n\n\tif (rawSettings.length === 1 && Array.isArray(primary)) {\n\t\treturn rawSettings;\n\t}\n\n\tif (rawSettings.length === 2 && !isPlainObject(primary) && isPlainObject(secondary)) {\n\t\treturn rawSettings;\n\t}\n\n\t// `T` must be an array type, but TSC thinks it's probably invalid to\n\t// cast `[T]` to `T` so we cast through `any` first.\n\treturn [/** @type {T} */ (/** @type {any} */ (rawSettings))];\n}\n"],"names":[],"mappings":";;;AAAA;;AAqBe,SAAS,sBAAsB,WAAW,EAAE,IAAI;IAC9D,IAAI,gBAAgB,QAAQ,gBAAgB,WAAW;QACtD,OAAO;IACR;IAEA,IAAI,CAAC,MAAM,OAAO,CAAC,cAAc;QAChC,OAAO;YAAC;SAAY;IACrB;IACA,mCAAmC;IAEnC,MAAM,CAAC,SAAS,UAAU,GAAG;IAE7B,IAAI,YAAY,MAAM,GAAG,KAAK,CAAC,YAAY,QAAQ,YAAY,SAAS,GAAG;QAC1E,OAAO;IACR;IAEA,IAAI,QAAQ,CAAC,KAAK,kBAAkB,EAAE;QACrC,OAAO;IACR;IACA,6EAA6E;IAC7E,uEAAuE;IACvE,kCAAkC;IAElC,IAAI,YAAY,MAAM,KAAK,KAAK,MAAM,OAAO,CAAC,UAAU;QACvD,OAAO;IACR;IAEA,IAAI,YAAY,MAAM,KAAK,KAAK,CAAC,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE,YAAY,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE,YAAY;QACpF,OAAO;IACR;IAEA,qEAAqE;IACrE,oDAAoD;IACpD,OAAO;QAAuC;KAAc;AAC7D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/checkAgainstRule.mjs"],"sourcesContent":["import Result from 'postcss/lib/result';\n\nimport getStylelintRule from './getStylelintRule.mjs';\nimport { isPlainObject } from './validateTypes.mjs';\nimport { lexer } from 'css-tree';\nimport normalizeRuleSettings from '../normalizeRuleSettings.mjs';\n\n/**\n * @type {import('stylelint').Utils['checkAgainstRule']}\n */\nexport default async function checkAgainstRule(options, callback) {\n\tif (!isPlainObject(options)) throw new Error('Expected an options object');\n\n\tif (!callback) throw new Error('Expected a callback function');\n\n\tconst { ruleName, ruleSettings, root, result, context = { lexer } } = options;\n\n\tif (!ruleName) throw new Error('Expected a \"ruleName\" option');\n\n\tconst rule = await getStylelintRule(ruleName, result?.stylelint?.config);\n\n\tif (!rule) throw new Error(`Rule \"${ruleName}\" does not exist`);\n\n\tif (!ruleSettings) throw new Error('Expected a \"ruleSettings\" option');\n\n\tif (!root) throw new Error('Expected a \"root\" option');\n\n\tconst settings = normalizeRuleSettings(ruleSettings, rule);\n\n\tif (!settings) {\n\t\treturn;\n\t}\n\n\tconst tmpPostcssResult = new Result(\n\t\t// NOTE: The first argument is unused, so passing `undefined` raises no problems.\n\t\t//       But this PostCSS's behavior may change in the future.\n\t\t// @ts-expect-error -- TS2345: Argument of type 'undefined' is not assignable to parameter of type 'Processor'.\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t);\n\n\t/** @type {import('stylelint').StylelintPostcssResult} */\n\tconst stylelint = result?.stylelint ?? {\n\t\truleSeverities: {},\n\t\tcustomMessages: {},\n\t\tcustomUrls: {},\n\t\truleMetadata: {},\n\t\tfixersData: {},\n\t\trangesOfComputedEditInfos: [],\n\t\tdisabledRanges: {},\n\t};\n\n\t// @ts-expect-error -- TS2339: Property 'stylelint' does not exist on type 'Result<undefined>'.\n\ttmpPostcssResult.stylelint = stylelint;\n\n\tconst [primary, secondary] = settings;\n\tconst ruleFunc = rule(primary, secondary || {}, context);\n\n\tawait ruleFunc(\n\t\troot,\n\n\t\t// NOTE: This temporary PostCSS result doesn't have a property for Stylelint use.\n\t\t//       Problems may occur if some rules use the property.\n\t\t// @ts-expect-error -- TS2345: Argument of type 'Result' is not assignable to parameter of type 'PostcssResult'.\n\t\ttmpPostcssResult,\n\t);\n\n\tfor (const warning of tmpPostcssResult.warnings()) callback(warning);\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AACA;AACA;AAAA;AACA;;;;;;AAKe,eAAe,iBAAiB,OAAO,EAAE,QAAQ;IAC/D,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE,UAAU,MAAM,IAAI,MAAM;IAE7C,IAAI,CAAC,UAAU,MAAM,IAAI,MAAM;IAE/B,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU;QAAE,OAAA,6JAAA,CAAA,QAAK;IAAC,CAAC,EAAE,GAAG;IAEtE,IAAI,CAAC,UAAU,MAAM,IAAI,MAAM;IAE/B,MAAM,OAAO,MAAM,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,UAAU,QAAQ,WAAW;IAEjE,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,SAAS,gBAAgB,CAAC;IAE9D,IAAI,CAAC,cAAc,MAAM,IAAI,MAAM;IAEnC,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;IAE3B,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,UAAqB,AAAD,EAAE,cAAc;IAErD,IAAI,CAAC,UAAU;QACd;IACD;IAEA,MAAM,mBAAmB,IAAI,yIAAA,CAAA,UAAM,CAClC,iFAAiF;IACjF,8DAA8D;IAC9D,+GAA+G;IAC/G,WACA,WACA;IAGD,uDAAuD,GACvD,MAAM,YAAY,QAAQ,aAAa;QACtC,gBAAgB,CAAC;QACjB,gBAAgB,CAAC;QACjB,YAAY,CAAC;QACb,cAAc,CAAC;QACf,YAAY,CAAC;QACb,2BAA2B,EAAE;QAC7B,gBAAgB,CAAC;IAClB;IAEA,+FAA+F;IAC/F,iBAAiB,SAAS,GAAG;IAE7B,MAAM,CAAC,SAAS,UAAU,GAAG;IAC7B,MAAM,WAAW,KAAK,SAAS,aAAa,CAAC,GAAG;IAEhD,MAAM,SACL,MAEA,iFAAiF;IACjF,2DAA2D;IAC3D,gHAAgH;IAChH;IAGD,KAAK,MAAM,WAAW,iBAAiB,QAAQ,GAAI,SAAS;AAC7D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 632, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/createPlugin.mjs"],"sourcesContent":["/**\n * @type {import('stylelint').PublicApi['createPlugin']}\n */\nexport default function createPlugin(ruleName, rule) {\n\treturn {\n\t\truleName,\n\t\trule,\n\t};\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AACc,SAAS,aAAa,QAAQ,EAAE,IAAI;IAClD,OAAO;QACN;QACA;IACD;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/constants.mjs"],"sourcesContent":["export const DEFAULT_CACHE_LOCATION = './.stylelintcache';\nexport const CACHE_STRATEGY_METADATA = 'metadata';\nexport const CACHE_STRATEGY_CONTENT = 'content';\nexport const DEFAULT_CACHE_STRATEGY = CACHE_STRATEGY_METADATA;\n\nexport const DEFAULT_IGNORE_FILENAME = '.stylelintignore';\n\nexport const DEFAULT_FORMATTER = 'string';\n\n// NOTE: Partially based on `sysexits.h`.\nexport const EXIT_CODE_SUCCESS = 0;\nexport const EXIT_CODE_FATAL_ERROR = 1;\nexport const EXIT_CODE_LINT_PROBLEM = 2;\nexport const EXIT_CODE_INVALID_USAGE = 64;\nexport const EXIT_CODE_INVALID_CONFIG = 78;\n\nexport const RULE_NAME_ALL = 'all';\n\nexport const SEVERITY_ERROR = 'error';\nexport const SEVERITY_WARNING = 'warning';\nexport const DEFAULT_SEVERITY = SEVERITY_ERROR;\n\nexport const DEFAULT_FIX_MODE = 'lax';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAO,MAAM,yBAAyB;AAC/B,MAAM,0BAA0B;AAChC,MAAM,yBAAyB;AAC/B,MAAM,yBAAyB;AAE/B,MAAM,0BAA0B;AAEhC,MAAM,oBAAoB;AAG1B,MAAM,oBAAoB;AAC1B,MAAM,wBAAwB;AAC9B,MAAM,yBAAyB;AAC/B,MAAM,0BAA0B;AAChC,MAAM,2BAA2B;AAEjC,MAAM,gBAAgB;AAEtB,MAAM,iBAAiB;AACvB,MAAM,mBAAmB;AACzB,MAAM,mBAAmB;AAEzB,MAAM,mBAAmB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 689, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hash.mjs"],"sourcesContent":["import MurmurHash3 from 'imurmurhash';\n\n/**\n * hash the given string\n * @param {string} str the string to hash\n * @returns {string} the hash\n */\nexport default function hash(str) {\n\treturn MurmurHash3(str).result().toString(36);\n}\n"],"names":[],"mappings":";;;AAAA;;AAOe,SAAS,KAAK,GAAG;IAC/B,OAAO,CAAA,GAAA,4IAAA,CAAA,UAAW,AAAD,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getCacheFile.mjs"],"sourcesContent":["import { join, normalize, resolve, sep } from 'node:path';\nimport { lstatSync } from 'node:fs';\n\nimport hash from './hash.mjs';\n\n/**\n * Return the cacheFile to be used by stylelint, based on whether the provided parameter is\n * a directory or looks like a directory (ends in `path.sep`), in which case the file\n * name will be `cacheFile/.cache_hashOfCWD`.\n *\n * If cacheFile points to a file or looks like a file, then it will just use that file.\n *\n * @param {string} cacheFile - The name of file to be used to store the cache\n * @param {string} cwd - Current working directory. Used for tests\n * @returns {string} Resolved path to the cache file\n */\nexport default function getCacheFile(cacheFile, cwd) {\n\t/*\n\t * Make sure path separators are normalized for environment/os.\n\t * Also, keep trailing path separator if present.\n\t */\n\tcacheFile = normalize(cacheFile);\n\n\tconst resolvedCacheFile = resolve(cwd, cacheFile);\n\t// If the last character passed is a path separator, we assume is a directory.\n\tconst looksLikeADirectory = cacheFile[cacheFile.length - 1] === sep;\n\n\t/**\n\t * Return the default cache file name when provided parameter is a directory.\n\t * @returns {string} - Resolved path to the cacheFile\n\t */\n\tfunction getCacheFileForDirectory() {\n\t\treturn join(resolvedCacheFile, `.stylelintcache_${hash(cwd)}`);\n\t}\n\n\tif (\n\t\tlooksLikeADirectory ||\n\t\tlstatSync(resolvedCacheFile, { throwIfNoEntry: false })?.isDirectory()\n\t) {\n\t\t// Return path to provided directory with generated file name.\n\t\treturn getCacheFileForDirectory();\n\t}\n\n\t// Return normalized path to cache file.\n\treturn resolvedCacheFile;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;;;;AAae,SAAS,aAAa,SAAS,EAAE,GAAG;IAClD;;;EAGC,GACD,YAAY,CAAA,GAAA,iHAAA,CAAA,YAAS,AAAD,EAAE;IAEtB,MAAM,oBAAoB,CAAA,GAAA,iHAAA,CAAA,UAAO,AAAD,EAAE,KAAK;IACvC,8EAA8E;IAC9E,MAAM,sBAAsB,SAAS,CAAC,UAAU,MAAM,GAAG,EAAE,KAAK,iHAAA,CAAA,MAAG;IAEnE;;;EAGC,GACD,SAAS;QACR,OAAO,CAAA,GAAA,iHAAA,CAAA,OAAI,AAAD,EAAE,mBAAmB,CAAC,gBAAgB,EAAE,CAAA,GAAA,oJAAA,CAAA,UAAI,AAAD,EAAE,MAAM;IAC9D;IAEA,IACC,uBACA,CAAA,GAAA,6GAAA,CAAA,YAAS,AAAD,EAAE,mBAAmB;QAAE,gBAAgB;IAAM,IAAI,eACxD;QACD,8DAA8D;QAC9D,OAAO;IACR;IAEA,wCAAwC;IACxC,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 746, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/FileCache.mjs"],"sourcesContent":["import { readFileSync, rmSync } from 'node:fs';\nimport process from 'node:process';\nimport { resolve } from 'node:path';\n\nimport createDebug from 'debug';\nimport fileEntryCache from 'file-entry-cache';\n\nimport {\n\tCACHE_STRATEGY_CONTENT,\n\tCACHE_STRATEGY_METADATA,\n\tDEFAULT_CACHE_LOCATION,\n\tDEFAULT_CACHE_STRATEGY,\n} from '../constants.mjs';\nimport getCacheFile from './getCacheFile.mjs';\nimport hash from './hash.mjs';\n\nconst debug = createDebug('stylelint:file-cache');\n\nconst pkg = JSON.parse(readFileSync(new URL('../../package.json', import.meta.url), 'utf8'));\n\nexport default class FileCache {\n\tconstructor(\n\t\tcacheLocation = DEFAULT_CACHE_LOCATION,\n\t\tcacheStrategy = DEFAULT_CACHE_STRATEGY,\n\t\tcwd = process.cwd(),\n\t) {\n\t\tif (![CACHE_STRATEGY_METADATA, CACHE_STRATEGY_CONTENT].includes(cacheStrategy)) {\n\t\t\tthrow new Error(\n\t\t\t\t`\"${cacheStrategy}\" cache strategy is unsupported. Specify either \"${CACHE_STRATEGY_METADATA}\" or \"${CACHE_STRATEGY_CONTENT}\"`,\n\t\t\t);\n\t\t}\n\n\t\tconst cacheFile = resolve(getCacheFile(cacheLocation, cwd));\n\t\tconst useCheckSum = cacheStrategy === CACHE_STRATEGY_CONTENT;\n\n\t\tdebug(`Cache file is created at ${cacheFile}`);\n\n\t\ttry {\n\t\t\tthis._fileCache = fileEntryCache.createFromFile(cacheFile, useCheckSum, undefined);\n\t\t} catch {\n\t\t\tdebug(`Cache file might be corrupt, attempting to remove and recreate the cache file`);\n\n\t\t\trmSync(cacheFile, { force: true });\n\t\t\tthis._fileCache = fileEntryCache.createFromFile(cacheFile, useCheckSum, undefined);\n\t\t}\n\n\t\tthis._hashOfConfig = '';\n\t\tthis._useCheckSum = useCheckSum;\n\t}\n\n\t/**\n\t * @param {import('stylelint').Config} config\n\t */\n\tcalcHashOfConfig(config) {\n\t\tif (this._hashOfConfig) return;\n\n\t\tconst stylelintVersion = pkg.version;\n\t\tconst configString = JSON.stringify(config || {});\n\n\t\tthis._hashOfConfig = hash(`${stylelintVersion}_${configString}`);\n\t}\n\n\t/**\n\t * @param {string} absoluteFilepath\n\t * @returns {boolean}\n\t */\n\thasFileChanged(absoluteFilepath) {\n\t\t// Get file descriptor compares current metadata against cached\n\t\t// one and stores the result to \"changed\" prop.w\n\n\t\t/** @type {import('file-entry-cache').FileDescriptorMeta | undefined} */\n\t\tconst metaCache = this._fileCache.cache.getKey(this._fileCache.createFileKey(absoluteFilepath));\n\t\tconst descriptor = this._fileCache.getFileDescriptor(absoluteFilepath);\n\n\t\t/** @type {{ hashOfConfig?: string; }} */\n\t\tconst metadata = (descriptor.meta.data ??= {});\n\n\t\tconst configChanged = metadata.hashOfConfig !== this._hashOfConfig;\n\n\t\tlet changed;\n\n\t\tif (this._useCheckSum) {\n\t\t\tchanged = configChanged || !metaCache?.hash || metaCache.hash !== descriptor.meta.hash;\n\t\t} else {\n\t\t\tchanged = configChanged || Boolean(descriptor.changed);\n\t\t}\n\n\t\tif (!changed) {\n\t\t\tdebug(`Skip linting ${absoluteFilepath}. File hasn't changed.`);\n\t\t}\n\n\t\t// Mutate file descriptor object and store config hash to each file.\n\t\t// Running lint with different config should invalidate the cache.\n\t\tif (metadata.hashOfConfig !== this._hashOfConfig) {\n\t\t\tmetadata.hashOfConfig = this._hashOfConfig;\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\treconcile() {\n\t\tthis._fileCache.reconcile();\n\t}\n\n\tdestroy() {\n\t\tthis._fileCache.destroy();\n\t}\n\n\t/**\n\t * @param {string} absoluteFilepath\n\t */\n\tremoveEntry(absoluteFilepath) {\n\t\tthis._fileCache.removeEntry(absoluteFilepath);\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 852, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/configurationError.mjs"],"sourcesContent":["import { EXIT_CODE_INVALID_CONFIG } from '../constants.mjs';\n\n/** @typedef {Error & { code: number }} ConfigurationError */\n\n/**\n * Create configurationError from text and set CLI exit code.\n *\n * @param {string} text\n * @returns {ConfigurationError}\n */\nexport default function configurationError(text) {\n\tconst err = /** @type {ConfigurationError} */ (new Error(text));\n\n\terr.code = EXIT_CODE_INVALID_CONFIG;\n\n\treturn err;\n}\n"],"names":[],"mappings":";;;AAAA;;AAUe,SAAS,mBAAmB,IAAI;IAC9C,MAAM,MAAyC,IAAI,MAAM;IAEzD,IAAI,IAAI,GAAG,gJAAA,CAAA,2BAAwB;IAEnC,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 868, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/dynamicImport.mjs"],"sourcesContent":["import { isAbsolute } from 'node:path';\nimport { pathToFileURL } from 'node:url';\n\n/**\n * Dynamic import wrapper for compatibility with absolute paths on Windows\n *\n * @see https://github.com/stylelint/stylelint/issues/7382\n *\n * @param {string} path\n */\nexport default function dynamicImport(path) {\n\treturn import(isAbsolute(path) ? pathToFileURL(path).toString() : path);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AASe,SAAS,cAAc,IAAI;IACzC;;;;;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 888, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/emitDeprecationWarning.mjs"],"sourcesContent":["import process from 'node:process';\n\n// Each code must be unique.\nconst CODES = {\n\tCOMMONJS_PLUGINS: '001',\n\tCOMMONJS_NODEJS_API: '002',\n\tRESULT_OUTPUT_PROPERTY: '003',\n\tGITHUB_FORMATTER: '004',\n\tCONTEXT_FIX: '005',\n\tRULE: '006', // either removal or renaming\n\tREPORT_AMBIGUOUS_POSITION: '007',\n};\n\nconst emittedWarnings = new Set();\n\n/**\n * Use this function for deprecation warnings, instead of `process.emitWarning()`.\n *\n * @param {string} message\n * @param {keyof CODES} codeKey\n * @param {string} detail\n * @returns {void}\n */\nexport default function emitDeprecationWarning(message, codeKey, detail) {\n\tconst code = CODES[codeKey];\n\n\tconst key = JSON.stringify({\n\t\tmessage,\n\t\toptions: { type: 'DeprecationWarning', code: `stylelint:${code}`, detail },\n\t});\n\n\tif (emittedWarnings.has(key)) return;\n\n\temittedWarnings.add(key);\n\n\tprocess.emitWarning(message, { type: 'DeprecationWarning', code: `stylelint:${code}`, detail });\n}\n\n/**\n * Clear the already emitted deprecation warnings.\n * Only useful in tests.\n *\n * @private\n */\nexport function clearEmittedDeprecationWarnings() {\n\temittedWarnings.clear();\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEA,4BAA4B;AAC5B,MAAM,QAAQ;IACb,kBAAkB;IAClB,qBAAqB;IACrB,wBAAwB;IACxB,kBAAkB;IAClB,aAAa;IACb,MAAM;IACN,2BAA2B;AAC5B;AAEA,MAAM,kBAAkB,IAAI;AAUb,SAAS,uBAAuB,OAAO,EAAE,OAAO,EAAE,MAAM;IACtE,MAAM,OAAO,KAAK,CAAC,QAAQ;IAE3B,MAAM,MAAM,KAAK,SAAS,CAAC;QAC1B;QACA,SAAS;YAAE,MAAM;YAAsB,MAAM,CAAC,UAAU,EAAE,MAAM;YAAE;QAAO;IAC1E;IAEA,IAAI,gBAAgB,GAAG,CAAC,MAAM;IAE9B,gBAAgB,GAAG,CAAC;IAEpB,uHAAA,CAAA,UAAO,CAAC,WAAW,CAAC,SAAS;QAAE,MAAM;QAAsB,MAAM,CAAC,UAAU,EAAE,MAAM;QAAE;IAAO;AAC9F;AAQO,SAAS;IACf,gBAAgB,KAAK;AACtB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 932, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/resolveSilent.mjs"],"sourcesContent":["import fs from 'node:fs';\nimport path from 'node:path';\n\nimport { fileURLToPath, pathToFileURL } from 'node:url';\n\n// TODO: use pure ESM `import-meta-resolve` package in next major version\nimport { resolve } from '@dual-bundle/import-meta-resolve';\nimport resolveFrom from 'resolve-from';\n\n/**\n * TODO: These suffixes are here for commonjs compatibility reason, we should remove these codes after migrating to pure ESM, because in ESM accurate paths are required\n */\n\nconst pathSuffixes = ['', '.js', '.json', `${path.sep}index.js`, `${path.sep}index.json`];\n\nconst specifierSuffixes = ['', '.js', '.json', '/index.js', '/index.json'];\n\n/**\n * Checks whether the given file exists as a file.\n * @param {string} filename The file to check.\n * @returns {boolean} `true` if the file exists and is a file, otherwise `false`.\n */\nfunction existsFile(filename) {\n\treturn fs.statSync(filename, { throwIfNoEntry: false })?.isFile() ?? false;\n}\n\n/**\n * @param {string} parent\n * @param {string} lookup\n * @returns {string | undefined}\n */\nexport default function resolveSilent(parent, lookup) {\n\tif (path.isAbsolute(lookup)) {\n\t\tfor (const suffix of pathSuffixes) {\n\t\t\tconst filename = lookup + suffix;\n\n\t\t\tif (existsFile(filename)) {\n\t\t\t\treturn filename;\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t}\n\n\tconst base = pathToFileURL(path.resolve(parent, 'noop.js')).toString();\n\n\tfor (const suffix of specifierSuffixes) {\n\t\ttry {\n\t\t\tconst resolved = fileURLToPath(resolve(lookup + suffix, base));\n\n\t\t\tif (existsFile(resolved)) {\n\t\t\t\treturn resolved;\n\t\t\t}\n\t\t} catch {\n\t\t\t//\n\t\t}\n\t}\n\n\t/**\n\t * Yarn P'n'P does not support pure ESM well by default, this is only a workaround for it\n\t * @see https://github.com/wooorm/import-meta-resolve/issues/23\n\t *\n\t * TODO: this workaround is still necessary before native `import.meta.resolve` replacement\n\t */\n\treturn resolveFrom.silent(parent, lookup);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AAEA,yEAAyE;AACzE;AACA;;;;;;AAEA;;CAEC,GAED,MAAM,eAAe;IAAC;IAAI;IAAO;IAAS,GAAG,iHAAA,CAAA,UAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;IAAE,GAAG,iHAAA,CAAA,UAAI,CAAC,GAAG,CAAC,UAAU,CAAC;CAAC;AAEzF,MAAM,oBAAoB;IAAC;IAAI;IAAO;IAAS;IAAa;CAAc;AAE1E;;;;CAIC,GACD,SAAS,WAAW,QAAQ;IAC3B,OAAO,6GAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,UAAU;QAAE,gBAAgB;IAAM,IAAI,YAAY;AACtE;AAOe,SAAS,cAAc,MAAM,EAAE,MAAM;IACnD,IAAI,iHAAA,CAAA,UAAI,CAAC,UAAU,CAAC,SAAS;QAC5B,KAAK,MAAM,UAAU,aAAc;YAClC,MAAM,WAAW,SAAS;YAE1B,IAAI,WAAW,WAAW;gBACzB,OAAO;YACR;QACD;QAEA;IACD;IAEA,MAAM,OAAO,CAAA,GAAA,+GAAA,CAAA,gBAAa,AAAD,EAAE,iHAAA,CAAA,UAAI,CAAC,OAAO,CAAC,QAAQ,YAAY,QAAQ;IAEpE,KAAK,MAAM,UAAU,kBAAmB;QACvC,IAAI;YACH,MAAM,WAAW,CAAA,GAAA,+GAAA,CAAA,gBAAa,AAAD,EAAE,CAAA,GAAA,wLAAA,CAAA,UAAO,AAAD,EAAE,SAAS,QAAQ;YAExD,IAAI,WAAW,WAAW;gBACzB,OAAO;YACR;QACD,EAAE,OAAM;QACP,EAAE;QACH;IACD;IAEA;;;;;EAKC,GACD,OAAO,0IAAA,CAAA,UAAW,CAAC,MAAM,CAAC,QAAQ;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1005, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getModulePath.mjs"],"sourcesContent":["import process from 'node:process';\n\nimport globalModules from 'global-modules';\n\nimport configurationError from './configurationError.mjs';\nimport resolveSilent from './resolveSilent.mjs';\n\n/**\n * @param {string} basedir\n * @param {string} lookup\n * @param {string} [cwd]\n * @returns {string}\n */\nexport default function getModulePath(basedir, lookup, cwd = process.cwd()) {\n\t// 1. Try to resolve from the provided directory\n\t// 2. Try to resolve from `cwd` or `process.cwd()`\n\t// 3. Try to resolve from global `node_modules` directory\n\tlet path = resolveSilent(basedir, lookup);\n\n\tif (!path) {\n\t\tpath = resolveSilent(cwd, lookup);\n\t}\n\n\tif (!path) {\n\t\tpath = resolveSilent(globalModules, lookup);\n\t}\n\n\tif (!path) {\n\t\tthrow configurationError(\n\t\t\t`Could not find \"${lookup}\". Do you need to install the package or use the \"configBasedir\" option?`,\n\t\t);\n\t}\n\n\treturn path;\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AAEA;AACA;;;;;AAQe,SAAS,cAAc,OAAO,EAAE,MAAM,EAAE,MAAM,uHAAA,CAAA,UAAO,CAAC,GAAG,EAAE;IACzE,gDAAgD;IAChD,kDAAkD;IAClD,yDAAyD;IACzD,IAAI,OAAO,CAAA,GAAA,6JAAA,CAAA,UAAa,AAAD,EAAE,SAAS;IAElC,IAAI,CAAC,MAAM;QACV,OAAO,CAAA,GAAA,6JAAA,CAAA,UAAa,AAAD,EAAE,KAAK;IAC3B;IAEA,IAAI,CAAC,MAAM;QACV,OAAO,CAAA,GAAA,6JAAA,CAAA,UAAa,AAAD,EAAE,4IAAA,CAAA,UAAa,EAAE;IACrC;IAEA,IAAI,CAAC,MAAM;QACV,MAAM,CAAA,GAAA,kKAAA,CAAA,UAAkB,AAAD,EACtB,CAAC,gBAAgB,EAAE,OAAO,wEAAwE,CAAC;IAErG;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1038, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/normalizeAllRuleSettings.mjs"],"sourcesContent":["import getStylelintRule from './utils/getStylelintRule.mjs';\nimport normalizeRuleSettings from './normalizeRuleSettings.mjs';\n\n/** @import {Config as StylelintConfig} from 'stylelint' */\n\n/**\n * @param {StylelintConfig} config\n * @returns {Promise<StylelintConfig>}\n */\nexport default async function normalizeAllRuleSettings(config) {\n\tif (!config.rules) return config;\n\n\t/** @type {StylelintConfig['rules']} */\n\tconst normalizedRules = {};\n\n\tfor (const [ruleName, rawRuleSettings] of Object.entries(config.rules)) {\n\t\tconst rule = await getStylelintRule(ruleName, config);\n\n\t\tif (rule) {\n\t\t\tnormalizedRules[ruleName] = normalizeRuleSettings(rawRuleSettings, rule);\n\t\t} else {\n\t\t\tnormalizedRules[ruleName] = [];\n\t\t}\n\t}\n\n\tconfig.rules = normalizedRules;\n\n\treturn config;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAQe,eAAe,yBAAyB,MAAM;IAC5D,IAAI,CAAC,OAAO,KAAK,EAAE,OAAO;IAE1B,qCAAqC,GACrC,MAAM,kBAAkB,CAAC;IAEzB,KAAK,MAAM,CAAC,UAAU,gBAAgB,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,EAAG;QACvE,MAAM,OAAO,MAAM,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,UAAU;QAE9C,IAAI,MAAM;YACT,eAAe,CAAC,SAAS,GAAG,CAAA,GAAA,4JAAA,CAAA,UAAqB,AAAD,EAAE,iBAAiB;QACpE,OAAO;YACN,eAAe,CAAC,SAAS,GAAG,EAAE;QAC/B;IACD;IAEA,OAAO,KAAK,GAAG;IAEf,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1065, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/augmentConfig.mjs"],"sourcesContent":["import { dirname, isAbsolute } from 'node:path';\n\nimport globjoin from 'globjoin';\nimport micromatch from 'micromatch';\nimport normalizePath from 'normalize-path';\n\nimport { isFunction, isString } from './utils/validateTypes.mjs';\nimport configurationError from './utils/configurationError.mjs';\nimport dynamicImport from './utils/dynamicImport.mjs';\nimport emitDeprecationWarning from './utils/emitDeprecationWarning.mjs';\nimport getModulePath from './utils/getModulePath.mjs';\nimport normalizeAllRuleSettings from './normalizeAllRuleSettings.mjs';\n\n/** @import {Config as StylelintConfig, CosmiconfigResult as StylelintCosmiconfigResult, InternalApi as StylelintInternalApi} from 'stylelint' */\n\n/**\n * @param {string} glob\n * @param {string} basedir\n * @returns {string}\n */\nfunction absolutizeGlob(glob, basedir) {\n\tconst result = isAbsolute(glob.replace(/^!/, '')) ? glob : globjoin(basedir, glob);\n\n\t// Glob patterns for micromatch should be in POSIX-style\n\treturn normalizePath(result);\n}\n\n/**\n * - Merges config and stylelint options\n * - Makes all paths absolute\n * - Merges extends\n * @param {StylelintInternalApi} stylelint\n * @param {StylelintConfig} config\n * @param {string} configDir\n * @param {boolean} allowOverrides\n * @param {string} rootConfigDir\n * @param {string} [filePath]\n * @returns {Promise<StylelintConfig>}\n */\nasync function augmentConfigBasic(\n\tstylelint,\n\tconfig,\n\tconfigDir,\n\tallowOverrides,\n\trootConfigDir,\n\tfilePath,\n) {\n\tlet augmentedConfig = config;\n\n\tif (allowOverrides) {\n\t\taugmentedConfig = addOptions(stylelint, augmentedConfig);\n\t}\n\n\tif (filePath) {\n\t\taugmentedConfig = applyOverrides(augmentedConfig, rootConfigDir, filePath);\n\t}\n\n\taugmentedConfig = await extendConfig(\n\t\tstylelint,\n\t\taugmentedConfig,\n\t\tconfigDir,\n\t\trootConfigDir,\n\t\tfilePath,\n\t);\n\n\tconst cwd = stylelint._options.cwd;\n\n\treturn absolutizePaths(augmentedConfig, configDir, cwd);\n}\n\n/**\n * Extended configs need to be run through augmentConfigBasic\n * but do not need the full treatment. Things like pluginFunctions\n * will be resolved and added by the parent config.\n * @param {string} cwd\n * @returns {(cosmiconfigResult?: StylelintCosmiconfigResult) => Promise<StylelintCosmiconfigResult>}\n */\nexport function augmentConfigExtended(cwd) {\n\treturn async (cosmiconfigResult) => {\n\t\tif (!cosmiconfigResult) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst configDir = dirname(cosmiconfigResult.filepath || '');\n\t\tconst { config } = cosmiconfigResult;\n\n\t\tconst augmentedConfig = absolutizePaths(config, configDir, cwd);\n\n\t\treturn {\n\t\t\tconfig: augmentedConfig,\n\t\t\tfilepath: cosmiconfigResult.filepath,\n\t\t};\n\t};\n}\n\n/**\n * @param {StylelintInternalApi} stylelint\n * @param {string} [filePath]\n * @param {StylelintCosmiconfigResult} [cosmiconfigResult]\n * @returns {Promise<StylelintCosmiconfigResult>}\n */\nexport async function augmentConfigFull(stylelint, filePath, cosmiconfigResult) {\n\tif (!cosmiconfigResult) {\n\t\treturn null;\n\t}\n\n\tconst config = cosmiconfigResult.config;\n\tconst filepath = cosmiconfigResult.filepath;\n\n\tconst configDir = stylelint._options.configBasedir || dirname(filepath || '');\n\n\tlet augmentedConfig = await augmentConfigBasic(\n\t\tstylelint,\n\t\tconfig,\n\t\tconfigDir,\n\t\ttrue,\n\t\tconfigDir,\n\t\tfilePath,\n\t);\n\n\taugmentedConfig = await addPluginFunctions(augmentedConfig, stylelint._options);\n\taugmentedConfig = await addProcessorFunctions(augmentedConfig);\n\n\tif (!augmentedConfig.rules) {\n\t\tthrow configurationError(\n\t\t\t'No rules found within configuration. Have you provided a \"rules\" property?',\n\t\t);\n\t}\n\n\taugmentedConfig = await normalizeAllRuleSettings(augmentedConfig);\n\n\treturn {\n\t\tconfig: augmentedConfig,\n\t\tfilepath: cosmiconfigResult.filepath,\n\t};\n}\n\n/**\n * Make all paths in the config absolute.\n *\n * @param {StylelintConfig} config\n * @param {string} configDir\n * @param {string} cwd\n * @returns {StylelintConfig}\n */\nfunction absolutizePaths(config, configDir, cwd) {\n\tif (config.ignoreFiles) {\n\t\tconfig.ignoreFiles = [config.ignoreFiles].flat().map((glob) => absolutizeGlob(glob, configDir));\n\t}\n\n\t/** @type {<T>(lookup: T) => (string | T)} */\n\tconst toAbsolutePath = (lookup) => {\n\t\tif (typeof lookup === 'string') {\n\t\t\treturn getModulePath(configDir, lookup, cwd);\n\t\t}\n\n\t\treturn lookup;\n\t};\n\n\tif (config.plugins) {\n\t\tconfig.plugins = [config.plugins].flat().map(toAbsolutePath);\n\t}\n\n\tif (config.processors) {\n\t\tconfig.processors = config.processors.map(toAbsolutePath);\n\t}\n\n\treturn config;\n}\n\n/**\n * @param {StylelintInternalApi} stylelint\n * @param {StylelintConfig} config\n * @param {string} configDir\n * @param {string} rootConfigDir\n * @param {string} [filePath]\n * @returns {Promise<StylelintConfig>}\n */\nasync function extendConfig(stylelint, config, configDir, rootConfigDir, filePath) {\n\tif (config.extends === undefined) {\n\t\treturn config;\n\t}\n\n\tconst { extends: configExtends, ...originalWithoutExtends } = config;\n\tconst normalizedExtends = [configExtends].flat();\n\n\tlet resultConfig = originalWithoutExtends;\n\n\tfor (const extendLookup of normalizedExtends) {\n\t\tlet extendResult;\n\n\t\tif (typeof extendLookup === 'string') {\n\t\t\textendResult = await loadExtendedConfig(stylelint, configDir, extendLookup);\n\t\t} else if (typeof extendLookup === 'object' && extendLookup !== null) {\n\t\t\textendResult = { config: extendLookup };\n\t\t}\n\n\t\tif (extendResult) {\n\t\t\tlet extendResultConfig = extendResult.config;\n\t\t\tconst extendConfigDir = dirname(extendResult.filepath || '');\n\n\t\t\textendResultConfig = await augmentConfigBasic(\n\t\t\t\tstylelint,\n\t\t\t\textendResultConfig,\n\t\t\t\textendConfigDir,\n\t\t\t\tfalse,\n\t\t\t\trootConfigDir,\n\t\t\t\tfilePath,\n\t\t\t);\n\n\t\t\tresultConfig = mergeConfigs(resultConfig, extendResultConfig);\n\t\t}\n\t}\n\n\treturn mergeConfigs(resultConfig, originalWithoutExtends);\n}\n\n/**\n * @param {StylelintInternalApi} stylelint\n * @param {string} configDir\n * @param {string} extendLookup\n * @returns {Promise<StylelintCosmiconfigResult>}\n */\nfunction loadExtendedConfig(stylelint, configDir, extendLookup) {\n\tconst extendPath = getModulePath(configDir, extendLookup, stylelint._options.cwd);\n\n\treturn stylelint._extendExplorer.load(extendPath);\n}\n\n/**\n * When merging configs (via extends)\n * - plugin, extends, overrides arrays are joined\n * - rules are merged via Object.assign, so there is no attempt made to\n *   merge any given rule's settings. If b contains the same rule as a,\n *   b's rule settings will override a's rule settings entirely.\n * - Everything else is merged via Object.assign\n * @param {StylelintConfig} a\n * @param {StylelintConfig} b\n * @returns {StylelintConfig}\n */\nfunction mergeConfigs(a, b) {\n\t/** @type {Pick<StylelintConfig, 'plugins'>} */\n\tconst pluginMerger = {};\n\n\tif (a.plugins || b.plugins) {\n\t\tpluginMerger.plugins = [];\n\n\t\tif (a.plugins) {\n\t\t\tpluginMerger.plugins = pluginMerger.plugins.concat(a.plugins);\n\t\t}\n\n\t\tif (b.plugins) {\n\t\t\tpluginMerger.plugins = [...new Set(pluginMerger.plugins.concat(b.plugins))];\n\t\t}\n\t}\n\n\t/** @type {Pick<StylelintConfig, 'processors'>} */\n\tconst processorMerger = {};\n\n\tif (a.processors || b.processors) {\n\t\tprocessorMerger.processors = [];\n\n\t\tif (a.processors) {\n\t\t\tprocessorMerger.processors = processorMerger.processors.concat(a.processors);\n\t\t}\n\n\t\tif (b.processors) {\n\t\t\tprocessorMerger.processors = [...new Set(processorMerger.processors.concat(b.processors))];\n\t\t}\n\t}\n\n\t/** @type {Pick<StylelintConfig, 'overrides'>} */\n\tconst overridesMerger = {};\n\n\tif (a.overrides || b.overrides) {\n\t\toverridesMerger.overrides = [];\n\n\t\tif (a.overrides) {\n\t\t\toverridesMerger.overrides = overridesMerger.overrides.concat(a.overrides);\n\t\t}\n\n\t\tif (b.overrides) {\n\t\t\toverridesMerger.overrides = [...new Set(overridesMerger.overrides.concat(b.overrides))];\n\t\t}\n\t}\n\n\t/** @type {Pick<StylelintConfig, 'extends'>} */\n\tconst extendsMerger = {};\n\n\tif (a.extends || b.extends) {\n\t\textendsMerger.extends = [];\n\n\t\tif (a.extends) {\n\t\t\textendsMerger.extends = extendsMerger.extends.concat(a.extends);\n\t\t}\n\n\t\tif (b.extends) {\n\t\t\textendsMerger.extends = extendsMerger.extends.concat(b.extends);\n\t\t}\n\n\t\t// Remove duplicates from the array, the last item takes precedence\n\t\textendsMerger.extends = extendsMerger.extends.filter(\n\t\t\t(item, index, arr) => arr.lastIndexOf(item) === index,\n\t\t);\n\t}\n\n\tconst rulesMerger = {};\n\n\tif (a.rules || b.rules) {\n\t\trulesMerger.rules = { ...a.rules, ...b.rules };\n\t}\n\n\tconst result = {\n\t\t...a,\n\t\t...b,\n\t\t...extendsMerger,\n\t\t...pluginMerger,\n\t\t...processorMerger,\n\t\t...overridesMerger,\n\t\t...rulesMerger,\n\t};\n\n\treturn result;\n}\n\n/**\n * @param {StylelintConfig} config\n * @param {import('stylelint').LinterOptions} options\n * @returns {Promise<StylelintConfig>}\n */\nasync function addPluginFunctions(config, { quietDeprecationWarnings }) {\n\tif (!config.plugins) {\n\t\treturn config;\n\t}\n\n\tconst normalizedPlugins = [config.plugins].flat();\n\n\t/** @type {StylelintConfig['pluginFunctions']} */\n\tconst pluginFunctions = {};\n\n\tfor (const pluginLookup of normalizedPlugins) {\n\t\tlet pluginImport;\n\n\t\tif (typeof pluginLookup === 'string') {\n\t\t\tpluginImport = await dynamicImport(pluginLookup);\n\n\t\t\t// NOTE: This '.cjs' check is limited. Some CommonJS plugins may have the '.js' extension.\n\t\t\tif (!quietDeprecationWarnings && pluginLookup.endsWith('.cjs')) {\n\t\t\t\temitDeprecationWarning(\n\t\t\t\t\t`CommonJS plugins are deprecated (\"${pluginLookup}\").`,\n\t\t\t\t\t'COMMONJS_PLUGINS',\n\t\t\t\t\t'See https://stylelint.io/migration-guide/to-16',\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tpluginImport = pluginLookup;\n\t\t}\n\n\t\t// Handle either ES6 or CommonJS modules\n\t\tpluginImport = pluginImport.default || pluginImport;\n\n\t\t// A plugin can export either a single rule definition\n\t\t// or an array of them\n\t\tconst normalizedPluginImport = [pluginImport].flat();\n\n\t\tfor (const pluginRuleDefinition of normalizedPluginImport) {\n\t\t\tif (!pluginRuleDefinition.ruleName) {\n\t\t\t\tthrow configurationError(\n\t\t\t\t\t`stylelint requires plugins to expose a ruleName. The plugin \"${pluginLookup}\" is not doing this, so will not work with stylelint. Please file an issue with the plugin.`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!pluginRuleDefinition.ruleName.includes('/')) {\n\t\t\t\tthrow configurationError(\n\t\t\t\t\t`stylelint requires plugin rules to be namespaced, i.e. only \\`plugin-namespace/plugin-rule-name\\` plugin rule names are supported. The plugin rule \"${pluginRuleDefinition.ruleName}\" does not do this, so will not work. Please file an issue with the plugin.`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpluginFunctions[pluginRuleDefinition.ruleName] = pluginRuleDefinition.rule;\n\t\t}\n\t}\n\n\tconfig.pluginFunctions = pluginFunctions;\n\n\treturn config;\n}\n\n/**\n * @param {StylelintConfig} config\n * @returns {Promise<StylelintConfig>}\n */\nasync function addProcessorFunctions(config) {\n\tif (!config.processors) {\n\t\treturn config;\n\t}\n\n\tconst processorPromises = config.processors.map(async (processorLookup) => {\n\t\tlet processor = await dynamicImport(processorLookup);\n\n\t\tprocessor = processor.default ?? processor;\n\n\t\tif (!isFunction(processor)) {\n\t\t\tthrow configurationError(`The processor \"${processorLookup}\" must be a function`);\n\t\t}\n\n\t\tconst { name, postprocess } = processor();\n\n\t\tif (!isString(name) || !name) {\n\t\t\tthrow configurationError(\n\t\t\t\t`The processor \"${processorLookup}\" must return an object with the \"name\" property`,\n\t\t\t);\n\t\t}\n\n\t\tif (!isFunction(postprocess)) {\n\t\t\tthrow configurationError(\n\t\t\t\t`The processor \"${processorLookup}\" must return an object with the \"postprocess\" property`,\n\t\t\t);\n\t\t}\n\n\t\treturn { name, postprocess };\n\t});\n\n\t/** @type {StylelintConfig['_processorFunctions']} */\n\tconst processorFunctions = new Map();\n\n\t(await Promise.all(processorPromises)).forEach(({ name, postprocess }) => {\n\t\tif (name) {\n\t\t\tprocessorFunctions.set(name, postprocess);\n\t\t}\n\t});\n\n\tconfig._processorFunctions = processorFunctions;\n\n\treturn config;\n}\n\n/**\n * @param {StylelintConfig} fullConfig\n * @param {string} rootConfigDir\n * @param {string} filePath\n * @returns {StylelintConfig}\n */\nexport function applyOverrides(fullConfig, rootConfigDir, filePath) {\n\tlet { overrides, ...config } = fullConfig;\n\n\tif (!overrides) {\n\t\treturn config;\n\t}\n\n\tif (!Array.isArray(overrides)) {\n\t\tthrow new TypeError(\n\t\t\t'The `overrides` configuration property should be an array, e.g. { \"overrides\": [{ \"files\": \"*.css\", \"rules\": {} }] }.',\n\t\t);\n\t}\n\n\t/** @type {(glob: string) => boolean} */\n\tconst nonegateGlob = (glob) => !glob.startsWith('!');\n\n\tfor (const override of overrides) {\n\t\tconst { files, ...configOverrides } = override;\n\n\t\tif (!files) {\n\t\t\tthrow new Error(\n\t\t\t\t'Every object in the `overrides` configuration property should have a `files` property with globs, e.g. { \"overrides\": [{ \"files\": \"*.css\", \"rules\": {} }] }.',\n\t\t\t);\n\t\t}\n\n\t\tconst fileList = [files].flat();\n\t\tconst absoluteGlobs = fileList.map((glob) => absolutizeGlob(glob, rootConfigDir));\n\n\t\tif (\n\t\t\tmicromatch.isMatch(filePath, absoluteGlobs, { dot: true }) ||\n\t\t\t// E.g. `*.css` matches any CSS files in any directories.\n\t\t\tmicromatch.isMatch(filePath, fileList.filter(nonegateGlob), { dot: true, basename: true })\n\t\t) {\n\t\t\tconfig = mergeConfigs(config, configOverrides);\n\t\t}\n\t}\n\n\treturn config;\n}\n\n/**\n * Add options to the config\n *\n * @param {StylelintInternalApi} stylelint\n * @param {StylelintConfig} config\n *\n * @returns {StylelintConfig}\n */\nfunction addOptions(stylelint, config) {\n\tconst augmentedConfig = {\n\t\t...config,\n\t};\n\n\tconst subset = /** @type {const} */ ([\n\t\t'customSyntax',\n\t\t'fix',\n\t\t'computeEditInfo',\n\t\t'ignoreDisables',\n\t\t'quiet',\n\t\t'reportDescriptionlessDisables',\n\t\t'reportInvalidScopeDisables',\n\t\t'reportNeedlessDisables',\n\t\t'reportUnscopedDisables',\n\t\t'validate',\n\t]);\n\n\t/** @type {Partial<StylelintConfig>} */\n\tconst options = {\n\t\t...stylelint._options,\n\t\t// Override fix to match Config type.\n\t\tfix: stylelint._options.fix ? Boolean(stylelint._options.fix) : undefined,\n\t};\n\n\t/**\n\t * @template T\n\t * @param {T extends typeof subset[number] ? T : never} key\n\t */\n\tconst addOption = (key) => {\n\t\tconst value = options[key];\n\n\t\tif (value) {\n\t\t\taugmentedConfig[key] = value;\n\t\t}\n\t};\n\n\tsubset.forEach((key) => addOption(key));\n\n\treturn augmentedConfig;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1457, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/createStylelint.mjs"],"sourcesContent":["import process from 'node:process';\n\nimport { cosmiconfig } from 'cosmiconfig';\n\nimport FileCache from './utils/FileCache.mjs';\nimport { augmentConfigExtended } from './augmentConfig.mjs';\n\nconst IS_TEST = process.env.NODE_ENV === 'test';\nconst STOP_DIR = IS_TEST ? process.cwd() : undefined;\n\n/**\n * @type {import('stylelint').PublicApi['_createLinter']}\n */\nexport default function createStylelint(options = {}) {\n\t// [INSERT HERE] CommonJS deprecation code\n\tconst cwd = options.cwd || process.cwd();\n\n\treturn {\n\t\t_options: { ...options, cwd },\n\n\t\t_extendExplorer: cosmiconfig('', {\n\t\t\ttransform: augmentConfigExtended(cwd),\n\t\t\tstopDir: STOP_DIR,\n\t\t\tsearchStrategy: 'global', // for backward compatibility\n\t\t}),\n\n\t\t_specifiedConfigCache: new Map(),\n\t\t_postcssResultCache: new Map(),\n\t\t_fileCache: new FileCache(options.cacheLocation, options.cacheStrategy, cwd),\n\t};\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AAEA;AACA;;;;;;;;;AAEA,MAAM,UAAU,uHAAA,CAAA,UAAO,CAAC,GAAG,CAAC,QAAQ,KAAK;AACzC,MAAM,WAAW,UAAU,uHAAA,CAAA,UAAO,CAAC,GAAG,KAAK;AAK5B,SAAS,gBAAgB,UAAU,CAAC,CAAC;IACnD,0CAA0C;IAC1C,MAAM,MAAM,QAAQ,GAAG,IAAI,uHAAA,CAAA,UAAO,CAAC,GAAG;IAEtC,OAAO;QACN,UAAU;YAAE,GAAG,OAAO;YAAE;QAAI;QAE5B,iBAAiB,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD,EAAE,IAAI;YAChC,WAAW,CAAA,GAAA,oJAAA,CAAA,wBAAqB,AAAD,EAAE;YACjC,SAAS;YACT,gBAAgB;QACjB;QAEA,uBAAuB,IAAI;QAC3B,qBAAqB,IAAI;QACzB,YAAY,IAAI,yJAAA,CAAA,UAAS,CAAC,QAAQ,aAAa,EAAE,QAAQ,aAAa,EAAE;IACzE;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1499, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/formatters/index.mjs"],"sourcesContent":["/** @type {import('stylelint').PublicApi['formatters']} */\nconst formatters = {\n\tget compact() {\n\t\treturn import('./compactFormatter.mjs').then((m) => m.default);\n\t},\n\tget github() {\n\t\treturn import('./githubFormatter.mjs').then((m) => m.default);\n\t},\n\tget json() {\n\t\treturn import('./jsonFormatter.mjs').then((m) => m.default);\n\t},\n\tget string() {\n\t\treturn import('./stringFormatter.mjs').then((m) => m.default);\n\t},\n\tget tap() {\n\t\treturn import('./tapFormatter.mjs').then((m) => m.default);\n\t},\n\tget unix() {\n\t\treturn import('./unixFormatter.mjs').then((m) => m.default);\n\t},\n\tget verbose() {\n\t\treturn import('./verboseFormatter.mjs').then((m) => m.default);\n\t},\n};\n\nexport default formatters;\n"],"names":[],"mappings":"AAAA,wDAAwD;;;AACxD,MAAM,aAAa;IAClB,IAAI,WAAU;QACb,OAAO,gKAAiC,IAAI,CAAC,CAAC,IAAM,EAAE,OAAO;IAC9D;IACA,IAAI,UAAS;QACZ,OAAO,+JAAgC,IAAI,CAAC,CAAC,IAAM,EAAE,OAAO;IAC7D;IACA,IAAI,QAAO;QACV,OAAO,6JAA8B,IAAI,CAAC,CAAC,IAAM,EAAE,OAAO;IAC3D;IACA,IAAI,UAAS;QACZ,OAAO,+JAAgC,IAAI,CAAC,CAAC,IAAM,EAAE,OAAO;IAC7D;IACA,IAAI,OAAM;QACT,OAAO,4JAA6B,IAAI,CAAC,CAAC,IAAM,EAAE,OAAO;IAC1D;IACA,IAAI,QAAO;QACV,OAAO,6JAA8B,IAAI,CAAC,CAAC,IAAM,EAAE,OAAO;IAC3D;IACA,IAAI,WAAU;QACb,OAAO,gKAAiC,IAAI,CAAC,CAAC,IAAM,EAAE,OAAO;IAC9D;AACD;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1532, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/reference/properties.mjs"],"sourcesContent":["/** @type {ReadonlySet<string>} */\nexport const acceptCustomIdentsProperties = new Set([\n\t'animation',\n\t'animation-name',\n\t'font',\n\t'font-family',\n\t'counter-increment',\n\t'grid-row',\n\t'grid-column',\n\t'grid-area',\n\t'list-style',\n\t'list-style-type',\n]);\n\n/** @type {ReadonlyMap<string, ReadonlySet<string>>} */\nexport const shorthandToResetToInitialProperty = new Map([\n\t[\n\t\t'border',\n\t\tnew Set([\n\t\t\t'border-image',\n\t\t\t'border-image-outset',\n\t\t\t'border-image-repeat',\n\t\t\t'border-image-slice',\n\t\t\t'border-image-source',\n\t\t\t'border-image-width',\n\t\t]),\n\t],\n\t[\n\t\t/** @see https://www.w3.org/TR/css-fonts-4/#font-prop */\n\t\t'font',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'font-feature-settings',\n\t\t\t'font-kerning',\n\t\t\t'font-language-override',\n\t\t\t'font-optical-sizing',\n\t\t\t'font-size-adjust',\n\t\t\t'font-variant-alternates',\n\t\t\t'font-variant-caps',\n\t\t\t'font-variant-east-asian',\n\t\t\t'font-variant-emoji',\n\t\t\t'font-variant-ligatures',\n\t\t\t'font-variant-numeric',\n\t\t\t'font-variant-position',\n\t\t\t'font-variation-settings',\n\t\t]),\n\t],\n]);\n\n/** @type {import('stylelint').LonghandSubPropertiesOfShorthandProperties} */\nexport const longhandSubPropertiesOfShorthandProperties = new Map([\n\t// Sort alphabetically\n\t[\n\t\t'animation',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'animation-name',\n\t\t\t'animation-duration',\n\t\t\t'animation-timing-function',\n\t\t\t'animation-delay',\n\t\t\t'animation-iteration-count',\n\t\t\t'animation-direction',\n\t\t\t'animation-fill-mode',\n\t\t\t'animation-play-state',\n\t\t]),\n\t],\n\t[\n\t\t'background',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'background-image',\n\t\t\t'background-size',\n\t\t\t'background-position',\n\t\t\t'background-repeat',\n\t\t\t'background-origin',\n\t\t\t'background-clip',\n\t\t\t'background-attachment',\n\t\t\t'background-color',\n\t\t]),\n\t],\n\t[\n\t\t'border',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-width',\n\t\t\t'border-right-width',\n\t\t\t'border-bottom-width',\n\t\t\t'border-left-width',\n\t\t\t'border-top-style',\n\t\t\t'border-right-style',\n\t\t\t'border-bottom-style',\n\t\t\t'border-left-style',\n\t\t\t'border-top-color',\n\t\t\t'border-right-color',\n\t\t\t'border-bottom-color',\n\t\t\t'border-left-color',\n\t\t\t'border-width',\n\t\t\t'border-style',\n\t\t\t'border-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-block',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-block-width',\n\t\t\t'border-block-style',\n\t\t\t'border-block-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-block-end',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-block-end-width',\n\t\t\t'border-block-end-style',\n\t\t\t'border-block-end-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-block-start',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-block-start-width',\n\t\t\t'border-block-start-style',\n\t\t\t'border-block-start-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-bottom',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-bottom-width',\n\t\t\t'border-bottom-style',\n\t\t\t'border-bottom-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-color',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-color',\n\t\t\t'border-right-color',\n\t\t\t'border-bottom-color',\n\t\t\t'border-left-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-image',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-image-source',\n\t\t\t'border-image-slice',\n\t\t\t'border-image-width',\n\t\t\t'border-image-outset',\n\t\t\t'border-image-repeat',\n\t\t]),\n\t],\n\t[\n\t\t'border-inline',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-inline-width',\n\t\t\t'border-inline-style',\n\t\t\t'border-inline-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-inline-end',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-inline-end-width',\n\t\t\t'border-inline-end-style',\n\t\t\t'border-inline-end-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-inline-start',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-inline-start-width',\n\t\t\t'border-inline-start-style',\n\t\t\t'border-inline-start-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-left',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-left-width',\n\t\t\t'border-left-style',\n\t\t\t'border-left-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-radius',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-left-radius',\n\t\t\t'border-top-right-radius',\n\t\t\t'border-bottom-right-radius',\n\t\t\t'border-bottom-left-radius',\n\t\t]),\n\t],\n\t[\n\t\t'border-right',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-right-width',\n\t\t\t'border-right-style',\n\t\t\t'border-right-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-style',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-style',\n\t\t\t'border-right-style',\n\t\t\t'border-bottom-style',\n\t\t\t'border-left-style',\n\t\t]),\n\t],\n\t[\n\t\t'border-top',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-width',\n\t\t\t'border-top-style',\n\t\t\t'border-top-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-width',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-width',\n\t\t\t'border-right-width',\n\t\t\t'border-bottom-width',\n\t\t\t'border-left-width',\n\t\t]),\n\t],\n\t[\n\t\t'column-rule',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'column-rule-width',\n\t\t\t'column-rule-style',\n\t\t\t'column-rule-color',\n\t\t]),\n\t],\n\t[\n\t\t'columns',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'column-width',\n\t\t\t'column-count',\n\t\t]),\n\t],\n\t[\n\t\t'flex',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'flex-grow',\n\t\t\t'flex-shrink',\n\t\t\t'flex-basis',\n\t\t]),\n\t],\n\t[\n\t\t'flex-flow',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'flex-direction',\n\t\t\t'flex-wrap',\n\t\t]),\n\t],\n\t[\n\t\t'font',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'font-style',\n\t\t\t/**\n\t\t\t * reset explicitly: normal | small-caps\n\t\t\t * reset implicitly: all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps\n\t\t\t * i.e. either way it will be reset\n\t\t\t * {@link https://www.w3.org/TR/css-fonts-4/#font-variant-prop World Wide Web Consortium}\n\t\t\t */\n\t\t\t'font-variant',\n\t\t\t'font-weight',\n\t\t\t'font-stretch',\n\t\t\t'font-size',\n\t\t\t'line-height',\n\t\t\t'font-family',\n\t\t]),\n\t],\n\t[\n\t\t'font-synthesis',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'font-synthesis-weight',\n\t\t\t'font-synthesis-style',\n\t\t\t'font-synthesis-small-caps',\n\t\t]),\n\t],\n\t[\n\t\t'font-variant',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'font-variant-ligatures',\n\t\t\t'font-variant-position',\n\t\t\t'font-variant-caps',\n\t\t\t'font-variant-numeric',\n\t\t\t'font-variant-alternates',\n\t\t\t'font-variant-east-asian',\n\t\t\t'font-variant-emoji',\n\t\t]),\n\t],\n\t[\n\t\t'gap',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'row-gap',\n\t\t\t'column-gap',\n\t\t]),\n\t],\n\t[\n\t\t'grid',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-template-rows',\n\t\t\t'grid-template-columns',\n\t\t\t'grid-template-areas',\n\t\t\t'grid-auto-rows',\n\t\t\t'grid-auto-columns',\n\t\t\t'grid-auto-flow',\n\t\t\t'grid-column-gap',\n\t\t\t'grid-row-gap',\n\t\t]),\n\t],\n\t[\n\t\t'grid-area',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-row-start',\n\t\t\t'grid-column-start',\n\t\t\t'grid-row-end',\n\t\t\t'grid-column-end',\n\t\t]),\n\t],\n\t[\n\t\t'grid-column',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-column-start',\n\t\t\t'grid-column-end',\n\t\t]),\n\t],\n\t[\n\t\t'grid-gap',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-row-gap',\n\t\t\t'grid-column-gap',\n\t\t]),\n\t],\n\t[\n\t\t'grid-row',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-row-start',\n\t\t\t'grid-row-end',\n\t\t]),\n\t],\n\t[\n\t\t'grid-template',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-template-columns',\n\t\t\t'grid-template-rows',\n\t\t\t'grid-template-areas',\n\t\t]),\n\t],\n\t[\n\t\t'inset',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'top',\n\t\t\t'right',\n\t\t\t'bottom',\n\t\t\t'left',\n\t\t]),\n\t],\n\t[\n\t\t'inset-block',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'inset-block-start',\n\t\t\t'inset-block-end',\n\t\t]),\n\t],\n\t[\n\t\t'inset-inline',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'inset-inline-start',\n\t\t\t'inset-inline-end',\n\t\t]),\n\t],\n\t[\n\t\t'list-style',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'list-style-type',\n\t\t\t'list-style-position',\n\t\t\t'list-style-image',\n\t\t]),\n\t],\n\t[\n\t\t'margin',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'margin-top',\n\t\t\t'margin-right',\n\t\t\t'margin-bottom',\n\t\t\t'margin-left',\n\t\t]),\n\t],\n\t[\n\t\t'margin-block',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'margin-block-start',\n\t\t\t'margin-block-end',\n\t\t]),\n\t],\n\t[\n\t\t'margin-inline',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'margin-inline-start',\n\t\t\t'margin-inline-end',\n\t\t]),\n\t],\n\t[\n\t\t'mask',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'mask-image',\n\t\t\t'mask-mode',\n\t\t\t'mask-position',\n\t\t\t'mask-size',\n\t\t\t'mask-repeat',\n\t\t\t'mask-origin',\n\t\t\t'mask-clip',\n\t\t\t'mask-composite',\n\t\t]),\n\t],\n\t[\n\t\t'outline',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'outline-color',\n\t\t\t'outline-style',\n\t\t\t'outline-width',\n\t\t]),\n\t],\n\t[\n\t\t'overflow',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'overflow-x',\n\t\t\t'overflow-y',\n\t\t]),\n\t],\n\t[\n\t\t'overscroll-behavior',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'overscroll-behavior-x',\n\t\t\t'overscroll-behavior-y',\n\t\t]),\n\t],\n\t[\n\t\t'padding',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'padding-top',\n\t\t\t'padding-right',\n\t\t\t'padding-bottom',\n\t\t\t'padding-left',\n\t\t]),\n\t],\n\t[\n\t\t'padding-block',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'padding-block-start',\n\t\t\t'padding-block-end',\n\t\t]),\n\t],\n\t[\n\t\t'padding-inline',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'padding-inline-start',\n\t\t\t'padding-inline-end',\n\t\t]),\n\t],\n\t[\n\t\t'place-content',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'align-content',\n\t\t\t'justify-content',\n\t\t]),\n\t],\n\t[\n\t\t'place-items',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'align-items',\n\t\t\t'justify-items',\n\t\t]),\n\t],\n\t[\n\t\t'place-self',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'align-self',\n\t\t\t'justify-self',\n\t\t]),\n\t],\n\t[\n\t\t'scroll-margin',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'scroll-margin-top',\n\t\t\t'scroll-margin-right',\n\t\t\t'scroll-margin-bottom',\n\t\t\t'scroll-margin-left',\n\t\t]),\n\t],\n\t[\n\t\t'scroll-margin-block',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'scroll-margin-block-start',\n\t\t\t'scroll-margin-block-end',\n\t\t]),\n\t],\n\t[\n\t\t'scroll-margin-inline',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'scroll-margin-inline-start',\n\t\t\t'scroll-margin-inline-end',\n\t\t]),\n\t],\n\t[\n\t\t'scroll-padding',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'scroll-padding-top',\n\t\t\t'scroll-padding-right',\n\t\t\t'scroll-padding-bottom',\n\t\t\t'scroll-padding-left',\n\t\t]),\n\t],\n\t[\n\t\t'scroll-padding-block',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'scroll-padding-block-start',\n\t\t\t'scroll-padding-block-end',\n\t\t]),\n\t],\n\t[\n\t\t'scroll-padding-inline',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'scroll-padding-inline-start',\n\t\t\t'scroll-padding-inline-end',\n\t\t]),\n\t],\n\t[\n\t\t'text-decoration',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'text-decoration-line',\n\t\t\t'text-decoration-style',\n\t\t\t'text-decoration-color',\n\t\t\t'text-decoration-thickness',\n\t\t]),\n\t],\n\t[\n\t\t'text-emphasis',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'text-emphasis-style',\n\t\t\t'text-emphasis-color',\n\t\t]),\n\t],\n\t[\n\t\t'transition',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'transition-property',\n\t\t\t'transition-duration',\n\t\t\t'transition-timing-function',\n\t\t\t'transition-delay',\n\t\t]),\n\t],\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const singleValueColorProperties = new Set([\n\t'accent-color',\n\t'background-color',\n\t'border-block-color',\n\t'border-block-end-color',\n\t'border-block-start-color',\n\t'border-bottom-color',\n\t'border-inline-color',\n\t'border-inline-end-color',\n\t'border-inline-start-color',\n\t'border-left-color',\n\t'border-right-color',\n\t'border-top-color',\n\t'caret-color',\n\t'color',\n\t'column-rule-color',\n\t'outline-color',\n\t'text-decoration-color',\n\t'text-emphasis-color',\n\t// SVG\n\t'flood-color',\n\t'lighting-color',\n\t'stop-color',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const longhandTimeProperties = new Set([\n\t'transition-duration',\n\t'transition-delay',\n\t'animation-duration',\n\t'animation-delay',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const shorthandTimeProperties = new Set(['transition', 'animation']);\n\n/** @type {ReadonlySet<string>} */\nexport const pageContextProperties = new Set([\n\t'direction',\n\t'background-color',\n\t'background-image',\n\t'background-repeat',\n\t'background-attachment',\n\t'background-position',\n\t'background',\n\t'border-top-width',\n\t'border-right-width',\n\t'border-bottom-width',\n\t'border-left-width',\n\t'border-width',\n\t'border-top-color',\n\t'border-right-color',\n\t'border-bottom-color',\n\t'border-left-color',\n\t'border-color',\n\t'border-top-style',\n\t'border-right-style',\n\t'border-bottom-style',\n\t'border-left-style',\n\t'border-style',\n\t'border-top',\n\t'border-right',\n\t'border-bottom',\n\t'border-left',\n\t'border',\n\t'counter-reset',\n\t'counter-increment',\n\t'color',\n\t'font-family',\n\t'font-size',\n\t'font-style',\n\t'font-variant',\n\t'font-weight',\n\t'font',\n\t'height',\n\t'min-height',\n\t'max-height',\n\t'line-height',\n\t'margin-top',\n\t'margin-right',\n\t'margin-bottom',\n\t'margin-left',\n\t'margin',\n\t'outline-width',\n\t'outline-style',\n\t'outline-color',\n\t'outline',\n\t'padding-top',\n\t'padding-right',\n\t'padding-bottom',\n\t'padding-left',\n\t'padding',\n\t'quotes',\n\t'letter-spacing',\n\t'text-align',\n\t'text-decoration',\n\t'text-indent',\n\t'text-transform',\n\t'white-space',\n\t'word-spacing',\n\t'visibility',\n\t'width',\n\t'min-width',\n\t'max-width',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const marginContextProperties = new Set([\n\t'direction',\n\t'unicode-bidi',\n\t'background-color',\n\t'background-image',\n\t'background-repeat',\n\t'background-attachment',\n\t'background-position',\n\t'background',\n\t'border-top-width',\n\t'border-right-width',\n\t'border-bottom-width',\n\t'border-left-width',\n\t'border-width',\n\t'border-top-color',\n\t'border-right-color',\n\t'border-bottom-color',\n\t'border-left-color',\n\t'border-color',\n\t'border-top-style',\n\t'border-right-style',\n\t'border-bottom-style',\n\t'border-left-style',\n\t'border-style',\n\t'border-top',\n\t'border-right',\n\t'border-bottom',\n\t'border-left',\n\t'border',\n\t'counter-reset',\n\t'counter-increment',\n\t'content',\n\t'color',\n\t'font-family',\n\t'font-size',\n\t'font-style',\n\t'font-variant',\n\t'font-weight',\n\t'font',\n\t'height',\n\t'min-height',\n\t'max-height',\n\t'line-height',\n\t'margin-top',\n\t'margin-right',\n\t'margin-bottom',\n\t'margin-left',\n\t'margin',\n\t'outline-width',\n\t'outline-style',\n\t'outline-color',\n\t'outline',\n\t'overflow',\n\t'padding-top',\n\t'padding-right',\n\t'padding-bottom',\n\t'padding-left',\n\t'padding',\n\t'quotes',\n\t'letter-spacing',\n\t'text-align',\n\t'text-decoration',\n\t'text-indent',\n\t'text-transform',\n\t'white-space',\n\t'word-spacing',\n\t'vertical-align',\n\t'visibility',\n\t'width',\n\t'min-width',\n\t'max-width',\n\t'z-index',\n]);\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;;;;;;;AACzB,MAAM,+BAA+B,IAAI,IAAI;IACnD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAGM,MAAM,oCAAoC,IAAI,IAAI;IACxD;QACC;QACA,IAAI,IAAI;YACP;YACA;YACA;YACA;YACA;YACA;SACA;KACD;IACD;QACC,sDAAsD,GACtD;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACA;KACD;CACD;AAGM,MAAM,6CAA6C,IAAI,IAAI;IACjE,sBAAsB;IACtB;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;;;;;IAKC,GACD;YACA;YACA;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;SACA;KACD;IACD;QACC;QACA,IAAI,IAAI;YACP,kBAAkB;YAClB;YACA;YACA;YACA;SACA;KACD;CACD;AAGM,MAAM,6BAA6B,IAAI,IAAI;IACjD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM;IACN;IACA;IACA;CACA;AAGM,MAAM,yBAAyB,IAAI,IAAI;IAC7C;IACA;IACA;IACA;CACA;AAGM,MAAM,0BAA0B,IAAI,IAAI;IAAC;IAAc;CAAY;AAGnE,MAAM,wBAAwB,IAAI,IAAI;IAC5C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAGM,MAAM,0BAA0B,IAAI,IAAI;IAC9C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2329, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/matchesStringOrRegExp.mjs"],"sourcesContent":["/**\n * Compares a string to a second value that, if it fits a certain convention,\n * is converted to a regular expression before the comparison.\n * If it doesn't fit the convention, then two strings are compared.\n *\n * Any strings starting and ending with `/` are interpreted\n * as regular expressions.\n *\n * @typedef {{match: string, pattern: (string | RegExp), substring: string} | false} MatchResult\n *\n * @param {string | Array<string>} input\n * @param {string | RegExp | Array<string | RegExp>} comparison\n * @returns {MatchResult}\n */\nexport default function matchesStringOrRegExp(input, comparison) {\n\tif (!Array.isArray(input)) {\n\t\treturn testAgainstStringOrRegExpOrArray(input, comparison);\n\t}\n\n\tfor (const inputItem of input) {\n\t\tconst testResult = testAgainstStringOrRegExpOrArray(inputItem, comparison);\n\n\t\tif (testResult) {\n\t\t\treturn testResult;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {string} value\n * @param {string | RegExp | Array<string | RegExp>} comparison\n * @returns {MatchResult}\n */\nfunction testAgainstStringOrRegExpOrArray(value, comparison) {\n\tif (!Array.isArray(comparison)) {\n\t\treturn testAgainstStringOrRegExp(value, comparison);\n\t}\n\n\tfor (const comparisonItem of comparison) {\n\t\tconst testResult = testAgainstStringOrRegExp(value, comparisonItem);\n\n\t\tif (testResult) {\n\t\t\treturn testResult;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @returns {MatchResult}\n */\nfunction matchValue(value, pattern) {\n\tconst match = value.match(pattern);\n\n\treturn match ? { match: value, pattern, substring: match[0] ?? '' } : false;\n}\n\n/**\n * @param {string} value\n * @param {string | RegExp} comparison\n * @returns {MatchResult}\n */\nfunction testAgainstStringOrRegExp(value, comparison) {\n\t// If it's a RegExp, test directly\n\tif (comparison instanceof RegExp) {\n\t\treturn matchValue(value, comparison);\n\t}\n\n\t// Check if it's RegExp in a string\n\tconst regexFlag = 'i';\n\tconst comparisonIsRegex =\n\t\tcomparison.startsWith('/') &&\n\t\t(comparison.endsWith('/') || comparison.endsWith(`/${regexFlag}`));\n\n\t// If so, create a new RegExp from it\n\tif (comparisonIsRegex) {\n\t\tconst pattern = comparison.endsWith(regexFlag)\n\t\t\t? new RegExp(comparison.slice(1, -2), regexFlag)\n\t\t\t: new RegExp(comparison.slice(1, -1));\n\n\t\tconst result = matchValue(value, pattern);\n\n\t\tif (result) {\n\t\t\tresult.pattern = comparison;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// Otherwise, it's a string. Do a strict comparison\n\treturn value === comparison ? { match: value, pattern: comparison, substring: value } : false;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;CAaC;;;AACc,SAAS,sBAAsB,KAAK,EAAE,UAAU;IAC9D,IAAI,CAAC,MAAM,OAAO,CAAC,QAAQ;QAC1B,OAAO,iCAAiC,OAAO;IAChD;IAEA,KAAK,MAAM,aAAa,MAAO;QAC9B,MAAM,aAAa,iCAAiC,WAAW;QAE/D,IAAI,YAAY;YACf,OAAO;QACR;IACD;IAEA,OAAO;AACR;AAEA;;;;CAIC,GACD,SAAS,iCAAiC,KAAK,EAAE,UAAU;IAC1D,IAAI,CAAC,MAAM,OAAO,CAAC,aAAa;QAC/B,OAAO,0BAA0B,OAAO;IACzC;IAEA,KAAK,MAAM,kBAAkB,WAAY;QACxC,MAAM,aAAa,0BAA0B,OAAO;QAEpD,IAAI,YAAY;YACf,OAAO;QACR;IACD;IAEA,OAAO;AACR;AAEA;;;;CAIC,GACD,SAAS,WAAW,KAAK,EAAE,OAAO;IACjC,MAAM,QAAQ,MAAM,KAAK,CAAC;IAE1B,OAAO,QAAQ;QAAE,OAAO;QAAO;QAAS,WAAW,KAAK,CAAC,EAAE,IAAI;IAAG,IAAI;AACvE;AAEA;;;;CAIC,GACD,SAAS,0BAA0B,KAAK,EAAE,UAAU;IACnD,kCAAkC;IAClC,IAAI,sBAAsB,QAAQ;QACjC,OAAO,WAAW,OAAO;IAC1B;IAEA,mCAAmC;IACnC,MAAM,YAAY;IAClB,MAAM,oBACL,WAAW,UAAU,CAAC,QACtB,CAAC,WAAW,QAAQ,CAAC,QAAQ,WAAW,QAAQ,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC;IAElE,qCAAqC;IACrC,IAAI,mBAAmB;QACtB,MAAM,UAAU,WAAW,QAAQ,CAAC,aACjC,IAAI,OAAO,WAAW,KAAK,CAAC,GAAG,CAAC,IAAI,aACpC,IAAI,OAAO,WAAW,KAAK,CAAC,GAAG,CAAC;QAEnC,MAAM,SAAS,WAAW,OAAO;QAEjC,IAAI,QAAQ;YACX,OAAO,OAAO,GAAG;QAClB;QAEA,OAAO;IACR;IAEA,mDAAmD;IACnD,OAAO,UAAU,aAAa;QAAE,OAAO;QAAO,SAAS;QAAY,WAAW;IAAM,IAAI;AACzF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2419, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/optionsMatches.mjs"],"sourcesContent":["import matchesStringOrRegExp from './matchesStringOrRegExp.mjs';\n\n/**\n * Check if an options object's propertyName contains a user-defined string or\n * regex that matches the passed in input.\n *\n * @param {{ [x: string]: any; }} options\n * @param {string} propertyName\n * @param {unknown} input\n *\n * @returns {boolean}\n */\nexport default function optionsMatches(options, propertyName, input) {\n\treturn Boolean(\n\t\toptions &&\n\t\t\toptions[propertyName] &&\n\t\t\ttypeof input === 'string' &&\n\t\t\tmatchesStringOrRegExp(input, options[propertyName]),\n\t);\n}\n"],"names":[],"mappings":";;;AAAA;;AAYe,SAAS,eAAe,OAAO,EAAE,YAAY,EAAE,KAAK;IAClE,OAAO,QACN,WACC,OAAO,CAAC,aAAa,IACrB,OAAO,UAAU,YACjB,CAAA,GAAA,qKAAA,CAAA,UAAqB,AAAD,EAAE,OAAO,OAAO,CAAC,aAAa;AAErD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2433, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/reportCommentProblem.mjs"],"sourcesContent":["import { SEVERITY_ERROR, SEVERITY_WARNING } from '../constants.mjs';\n\n/**\n * @param {{\n *   rule: string;\n *   message: string;\n *   severity: import('stylelint').Severity;\n *   node: import('postcss').Node;\n *   postcssResult: import('stylelint').PostcssResult;\n * }} args\n * @returns {void}\n */\nexport default function reportCommentProblem({ rule, message, severity, node, postcssResult }) {\n\tconst { source } = node;\n\n\t// If the comment doesn't have a location, we can't report a useful error.\n\t// In practice we expect all comments to have locations, though.\n\tif (!source?.start) return;\n\n\tpostcssResult.warn(message, {\n\t\trule,\n\t\tseverity,\n\t\tnode,\n\t\tstart: source.start,\n\t\tend: source.end,\n\t});\n\n\tswitch (severity) {\n\t\tcase SEVERITY_ERROR:\n\t\t\tpostcssResult.stylelint.stylelintError = true;\n\t\t\tbreak;\n\t\tcase SEVERITY_WARNING:\n\t\t\tpostcssResult.stylelint.stylelintWarning = true;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// no-op\n\t\t\tbreak;\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;;AAYe,SAAS,qBAAqB,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAa,EAAE;IAC5F,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,0EAA0E;IAC1E,gEAAgE;IAChE,IAAI,CAAC,QAAQ,OAAO;IAEpB,cAAc,IAAI,CAAC,SAAS;QAC3B;QACA;QACA;QACA,OAAO,OAAO,KAAK;QACnB,KAAK,OAAO,GAAG;IAChB;IAEA,OAAQ;QACP,KAAK,gJAAA,CAAA,iBAAc;YAClB,cAAc,SAAS,CAAC,cAAc,GAAG;YACzC;QACD,KAAK,gJAAA,CAAA,mBAAgB;YACpB,cAAc,SAAS,CAAC,gBAAgB,GAAG;YAC3C;QACD;YAEC;IACF;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2467, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/arrayEqual.mjs"],"sourcesContent":["/**\n * Tests if two arrays are equal.\n *\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport default function arrayEqual(a, b) {\n\tif (!Array.isArray(a) || !Array.isArray(b)) return false;\n\n\tif (a.length !== b.length) return false;\n\n\treturn a.every((elem, index) => elem === b[index]);\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACc,SAAS,WAAW,CAAC,EAAE,CAAC;IACtC,IAAI,CAAC,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,OAAO,CAAC,IAAI,OAAO;IAEnD,IAAI,EAAE,MAAM,KAAK,EAAE,MAAM,EAAE,OAAO;IAElC,OAAO,EAAE,KAAK,CAAC,CAAC,MAAM,QAAU,SAAS,CAAC,CAAC,MAAM;AAClD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2487, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/validateOptions.mjs"],"sourcesContent":["import arrayEqual from './arrayEqual.mjs';\nimport { isPlainObject } from './validateTypes.mjs';\n\nconst IGNORED_OPTIONS = new Set(['severity', 'message', 'url', 'reportDisables', 'disableFix']);\nconst REPORT_OPTIONS = new Set([\n\t'reportDescriptionlessDisables',\n\t'reportInvalidScopeDisables',\n\t'reportNeedlessDisables',\n\t'reportUnscopedDisables',\n]);\n\n/** @typedef {import('stylelint').RuleOptions} RuleOptions */\n/** @typedef {import('stylelint').RuleOptionsPossible} RuleOptionsPossible */\n\n/**\n * @type {import('stylelint').Utils['validateOptions']}\n */\nexport default function validateOptions(result, ruleName, ...optionDescriptions) {\n\tconst mustValidate = result.stylelint.config?.validate;\n\n\tif (!mustValidate) return true;\n\n\tlet noErrors = true;\n\n\tfor (const optionDescription of optionDescriptions) {\n\t\tvalidate(optionDescription, ruleName, complain);\n\t}\n\n\t/**\n\t * @param {string} message\n\t */\n\tfunction complain(message) {\n\t\tnoErrors = false;\n\t\tresult.warn(message, {\n\t\t\tstylelintType: 'invalidOption',\n\t\t});\n\t\tresult.stylelint.stylelintError = true;\n\t}\n\n\treturn noErrors;\n}\n\n/**\n * @param {RuleOptions} opts\n * @param {string} ruleName\n * @param {(message: string) => void} complain\n */\nfunction validate({ possible, actual, optional }, ruleName, complain) {\n\tif (actual === false && !REPORT_OPTIONS.has(ruleName)) {\n\t\treturn complain(\n\t\t\t`Invalid option value \"false\" for rule \"${ruleName}\". Are you trying to disable this rule? If so use \"null\" instead`,\n\t\t);\n\t}\n\n\t// `null` means to turn off a rule.\n\tif (actual === null || arrayEqual(actual, [null])) {\n\t\treturn;\n\t}\n\n\tconst nothingPossible =\n\t\tpossible === undefined ||\n\t\tpossible === null ||\n\t\t(Array.isArray(possible) && possible.length === 0) ||\n\t\t(isPlainObject(possible) && Object.keys(possible).length === 0);\n\n\tif (nothingPossible && actual === true) {\n\t\treturn;\n\t}\n\n\tif (actual === undefined) {\n\t\tif (nothingPossible || optional) {\n\t\t\treturn;\n\t\t}\n\n\t\tcomplain(`Expected option value for rule \"${ruleName}\"`);\n\n\t\treturn;\n\t}\n\n\tif (nothingPossible) {\n\t\tif (optional) {\n\t\t\tcomplain(\n\t\t\t\t`Incorrect configuration for rule \"${ruleName}\". Rule should have \"possible\" values for options validation`,\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\tcomplain(`Unexpected option value ${stringify(actual)} for rule \"${ruleName}\"`);\n\n\t\treturn;\n\t}\n\n\tif (typeof possible === 'function') {\n\t\tif (!possible(actual)) {\n\t\t\tcomplain(`Invalid option ${stringify(actual)} for rule \"${ruleName}\"`);\n\t\t}\n\n\t\treturn;\n\t}\n\n\t// If `possible` is an array instead of an object ...\n\tif (Array.isArray(possible)) {\n\t\tfor (const a of [actual].flat()) {\n\t\t\tif (isValid(possible, a)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcomplain(`Invalid option value ${stringify(a)} for rule \"${ruleName}\"`);\n\t\t}\n\n\t\treturn;\n\t}\n\n\t// If actual is NOT an object ...\n\tif (!isPlainObject(actual) || typeof actual !== 'object' || actual === null) {\n\t\tcomplain(\n\t\t\t`Invalid option value ${stringify(actual)} for rule \"${ruleName}\": should be an object`,\n\t\t);\n\n\t\treturn;\n\t}\n\n\tfor (const [optionName, optionValue] of Object.entries(actual)) {\n\t\tif (IGNORED_OPTIONS.has(optionName)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst possibleValue = possible && possible[optionName];\n\n\t\tif (!possibleValue) {\n\t\t\tcomplain(`Invalid option name \"${optionName}\" for rule \"${ruleName}\"`);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const a of [optionValue].flat()) {\n\t\t\tif (isValid(possibleValue, a)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcomplain(`Invalid value ${stringify(a)} for option \"${optionName}\" of rule \"${ruleName}\"`);\n\t\t}\n\t}\n}\n\n/**\n * @param {RuleOptionsPossible | RuleOptionsPossible[]} possible\n * @param {unknown} actual\n * @returns {boolean}\n */\nfunction isValid(possible, actual) {\n\tfor (const possibility of [possible].flat()) {\n\t\tif (typeof possibility === 'function' && possibility(actual)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (actual === possibility) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} value\n * @returns {string}\n */\nfunction stringify(value) {\n\tif (typeof value === 'string') {\n\t\treturn `\"${value}\"`;\n\t}\n\n\treturn `\"${JSON.stringify(value)}\"`;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2632, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/validateDisableSettings.mjs"],"sourcesContent":["import { isRegExp, isString } from './utils/validateTypes.mjs';\nimport { DEFAULT_SEVERITY } from './constants.mjs';\nimport validateOptions from './utils/validateOptions.mjs';\n\n/** @import {DisablePropertyName, DisableOptions, PostcssResult} from 'stylelint' */\n\n/**\n * Validates that the stylelint config for `result` has a valid disable field\n * named `field`, and returns the result in normalized form.\n *\n * Returns `[]` if no disables should be reported, and automatically reports\n * an invalid configuration.\n *\n * @param {PostcssResult} result\n * @param {DisablePropertyName} field\n * @returns {[boolean, Required<DisableOptions>] | []}\n */\nexport default function validateDisableSettings(result, field) {\n\tconst stylelintResult = result.stylelint;\n\n\t// Files with linting errors may not have configs associated with them.\n\tif (!stylelintResult.config) return [];\n\n\tconst rawSettings = stylelintResult.config[field];\n\n\t/** @type {boolean} */\n\tlet enabled;\n\t/** @type {DisableOptions} */\n\tlet options;\n\n\tif (Array.isArray(rawSettings)) {\n\t\tenabled = rawSettings[0];\n\t\toptions = rawSettings[1] || {};\n\t} else {\n\t\tenabled = rawSettings || false;\n\t\toptions = {};\n\t}\n\n\tconst validOptions = validateOptions(\n\t\tresult,\n\t\tfield,\n\t\t{\n\t\t\tactual: enabled,\n\t\t\tpossible: [true, false],\n\t\t},\n\t\t{\n\t\t\tactual: options,\n\t\t\tpossible: {\n\t\t\t\texcept: [isString, isRegExp],\n\t\t\t},\n\t\t},\n\t);\n\n\tif (!validOptions) return [];\n\n\t// If the check is disabled with no exceptions, there's no reason to run\n\t// it at all.\n\tif (!enabled && !options.except) return [];\n\n\treturn [\n\t\tenabled,\n\t\t{\n\t\t\texcept: options.except || [],\n\t\t\tseverity: options.severity || stylelintResult.config.defaultSeverity || DEFAULT_SEVERITY,\n\t\t},\n\t];\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAee,SAAS,wBAAwB,MAAM,EAAE,KAAK;IAC5D,MAAM,kBAAkB,OAAO,SAAS;IAExC,uEAAuE;IACvE,IAAI,CAAC,gBAAgB,MAAM,EAAE,OAAO,EAAE;IAEtC,MAAM,cAAc,gBAAgB,MAAM,CAAC,MAAM;IAEjD,oBAAoB,GACpB,IAAI;IACJ,2BAA2B,GAC3B,IAAI;IAEJ,IAAI,MAAM,OAAO,CAAC,cAAc;QAC/B,UAAU,WAAW,CAAC,EAAE;QACxB,UAAU,WAAW,CAAC,EAAE,IAAI,CAAC;IAC9B,OAAO;QACN,UAAU,eAAe;QACzB,UAAU,CAAC;IACZ;IAEA,MAAM,eAAe,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAClC,QACA,OACA;QACC,QAAQ;QACR,UAAU;YAAC;YAAM;SAAM;IACxB,GACA;QACC,QAAQ;QACR,UAAU;YACT,QAAQ;gBAAC,6JAAA,CAAA,WAAQ;gBAAE,6JAAA,CAAA,WAAQ;aAAC;QAC7B;IACD;IAGD,IAAI,CAAC,cAAc,OAAO,EAAE;IAE5B,wEAAwE;IACxE,aAAa;IACb,IAAI,CAAC,WAAW,CAAC,QAAQ,MAAM,EAAE,OAAO,EAAE;IAE1C,OAAO;QACN;QACA;YACC,QAAQ,QAAQ,MAAM,IAAI,EAAE;YAC5B,UAAU,QAAQ,QAAQ,IAAI,gBAAgB,MAAM,CAAC,eAAe,IAAI,gJAAA,CAAA,mBAAgB;QACzF;KACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2688, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/descriptionlessDisables.mjs"],"sourcesContent":["import { RULE_NAME_ALL } from './constants.mjs';\n\nimport optionsMatches from './utils/optionsMatches.mjs';\nimport reportCommentProblem from './utils/reportCommentProblem.mjs';\nimport validateDisableSettings from './validateDisableSettings.mjs';\n\n/**\n * @param {import('stylelint').PostcssResult} postcssResult\n * @returns {void}\n */\nexport default function descriptionlessDisables(postcssResult) {\n\tconst [enabled, options] = validateDisableSettings(\n\t\tpostcssResult,\n\t\t'reportDescriptionlessDisables',\n\t);\n\n\tif (!options) return;\n\n\t/** @type {Set<import('postcss').Node>} */\n\tconst alreadyReported = new Set();\n\n\tfor (const [rule, ruleRanges] of Object.entries(postcssResult.stylelint.disabledRanges)) {\n\t\tfor (const range of ruleRanges) {\n\t\t\tif (range.description) continue;\n\n\t\t\tconst node = range.node;\n\n\t\t\tif (alreadyReported.has(node)) continue;\n\n\t\t\tif (enabled === optionsMatches(options, 'except', rule)) {\n\t\t\t\t// An 'all' rule will get copied for each individual rule. If the\n\t\t\t\t// configuration is `[false, {except: ['specific-rule']}]`, we\n\t\t\t\t// don't want to report the copies that match except, so we record\n\t\t\t\t// the comment as already reported.\n\t\t\t\tif (!enabled && rule === RULE_NAME_ALL) alreadyReported.add(node);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talreadyReported.add(node);\n\n\t\t\treportCommentProblem({\n\t\t\t\trule: '--report-descriptionless-disables',\n\t\t\t\tmessage: `Disable for \"${rule}\" is missing a description`,\n\t\t\t\tseverity: options.severity,\n\t\t\t\tnode,\n\t\t\t\tpostcssResult,\n\t\t\t});\n\t\t}\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AACA;AACA;;;;;AAMe,SAAS,wBAAwB,aAAa;IAC5D,MAAM,CAAC,SAAS,QAAQ,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAuB,AAAD,EAChD,eACA;IAGD,IAAI,CAAC,SAAS;IAEd,wCAAwC,GACxC,MAAM,kBAAkB,IAAI;IAE5B,KAAK,MAAM,CAAC,MAAM,WAAW,IAAI,OAAO,OAAO,CAAC,cAAc,SAAS,CAAC,cAAc,EAAG;QACxF,KAAK,MAAM,SAAS,WAAY;YAC/B,IAAI,MAAM,WAAW,EAAE;YAEvB,MAAM,OAAO,MAAM,IAAI;YAEvB,IAAI,gBAAgB,GAAG,CAAC,OAAO;YAE/B,IAAI,YAAY,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE,SAAS,UAAU,OAAO;gBACxD,iEAAiE;gBACjE,8DAA8D;gBAC9D,kEAAkE;gBAClE,mCAAmC;gBACnC,IAAI,CAAC,WAAW,SAAS,gJAAA,CAAA,gBAAa,EAAE,gBAAgB,GAAG,CAAC;gBAE5D;YACD;YAEA,gBAAgB,GAAG,CAAC;YAEpB,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE;gBACpB,MAAM;gBACN,SAAS,CAAC,aAAa,EAAE,KAAK,0BAA0B,CAAC;gBACzD,UAAU,QAAQ,QAAQ;gBAC1B;gBACA;YACD;QACD;IACD;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2733, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/getConfigForFile.mjs"],"sourcesContent":["import { join } from 'node:path';\nimport process from 'node:process';\n\nimport { cosmiconfig } from 'cosmiconfig';\n\nimport { augmentConfigFull } from './augmentConfig.mjs';\nimport configurationError from './utils/configurationError.mjs';\n\nconst IS_TEST = process.env.NODE_ENV === 'test';\nconst STOP_DIR = IS_TEST ? process.cwd() : undefined;\n\n/** @import {Config as StylelintConfig, CosmiconfigResult as StylelintCosmiconfigResult, InternalApi as StylelintInternalApi} from 'stylelint' */\n\n/**\n * @param {StylelintInternalApi} stylelint\n * @param {string} [searchPath]\n * @param {string} [filePath]\n * @returns {Promise<StylelintCosmiconfigResult>}\n */\nexport default async function getConfigForFile(\n\tstylelint,\n\tsearchPath = stylelint._options.cwd,\n\tfilePath,\n) {\n\tconst optionsConfig = stylelint._options.config;\n\tconst cwd = stylelint._options.cwd;\n\n\tif (optionsConfig) {\n\t\tconst filePathAsCacheKey = filePath ?? '';\n\t\t/** @type {Map<string, StylelintCosmiconfigResult>} */\n\t\tconst cachedForFiles = stylelint._specifiedConfigCache.get(optionsConfig) ?? new Map();\n\t\tconst cached = cachedForFiles.get(filePathAsCacheKey);\n\n\t\tif (cached) {\n\t\t\treturn cached;\n\t\t}\n\n\t\tconst augmentedResult = await augmentConfigFull(stylelint, filePath, {\n\t\t\tconfig: optionsConfig,\n\t\t\t// Add the extra path part so that we can get the directory without being\n\t\t\t// confused\n\t\t\tfilepath: join(cwd, 'argument-config'),\n\t\t});\n\n\t\tcachedForFiles.set(filePathAsCacheKey, augmentedResult);\n\t\tstylelint._specifiedConfigCache.set(optionsConfig, cachedForFiles);\n\n\t\treturn augmentedResult;\n\t}\n\n\tconst configExplorer = cosmiconfig('stylelint', {\n\t\ttransform: (cosmiconfigResult) => augmentConfigFull(stylelint, filePath, cosmiconfigResult),\n\t\tstopDir: STOP_DIR,\n\t\tsearchStrategy: 'global', // for backward compatibility\n\t});\n\n\tlet config = stylelint._options.configFile\n\t\t? await configExplorer.load(stylelint._options.configFile)\n\t\t: await configExplorer.search(searchPath);\n\n\tif (!config) {\n\t\tconfig = await configExplorer.search(cwd);\n\t}\n\n\tif (!config) {\n\t\treturn Promise.reject(\n\t\t\tconfigurationError(`No configuration provided${searchPath ? ` for ${searchPath}` : ''}`),\n\t\t);\n\t}\n\n\treturn config;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AAEA;AACA;;;;;;AAEA,MAAM,UAAU,uHAAA,CAAA,UAAO,CAAC,GAAG,CAAC,QAAQ,KAAK;AACzC,MAAM,WAAW,UAAU,uHAAA,CAAA,UAAO,CAAC,GAAG,KAAK;AAU5B,eAAe,iBAC7B,SAAS,EACT,aAAa,UAAU,QAAQ,CAAC,GAAG,EACnC,QAAQ;IAER,MAAM,gBAAgB,UAAU,QAAQ,CAAC,MAAM;IAC/C,MAAM,MAAM,UAAU,QAAQ,CAAC,GAAG;IAElC,IAAI,eAAe;QAClB,MAAM,qBAAqB,YAAY;QACvC,oDAAoD,GACpD,MAAM,iBAAiB,UAAU,qBAAqB,CAAC,GAAG,CAAC,kBAAkB,IAAI;QACjF,MAAM,SAAS,eAAe,GAAG,CAAC;QAElC,IAAI,QAAQ;YACX,OAAO;QACR;QAEA,MAAM,kBAAkB,MAAM,CAAA,GAAA,oJAAA,CAAA,oBAAiB,AAAD,EAAE,WAAW,UAAU;YACpE,QAAQ;YACR,yEAAyE;YACzE,WAAW;YACX,UAAU,CAAA,GAAA,iHAAA,CAAA,OAAI,AAAD,EAAE,KAAK;QACrB;QAEA,eAAe,GAAG,CAAC,oBAAoB;QACvC,UAAU,qBAAqB,CAAC,GAAG,CAAC,eAAe;QAEnD,OAAO;IACR;IAEA,MAAM,iBAAiB,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD,EAAE,aAAa;QAC/C,WAAW,CAAC,oBAAsB,CAAA,GAAA,oJAAA,CAAA,oBAAiB,AAAD,EAAE,WAAW,UAAU;QACzE,SAAS;QACT,gBAAgB;IACjB;IAEA,IAAI,SAAS,UAAU,QAAQ,CAAC,UAAU,GACvC,MAAM,eAAe,IAAI,CAAC,UAAU,QAAQ,CAAC,UAAU,IACvD,MAAM,eAAe,MAAM,CAAC;IAE/B,IAAI,CAAC,QAAQ;QACZ,SAAS,MAAM,eAAe,MAAM,CAAC;IACtC;IAEA,IAAI,CAAC,QAAQ;QACZ,OAAO,QAAQ,MAAM,CACpB,CAAA,GAAA,kKAAA,CAAA,UAAkB,AAAD,EAAE,CAAC,yBAAyB,EAAE,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAEzF;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2788, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/normalizeFixMode.mjs"],"sourcesContent":["import { DEFAULT_FIX_MODE } from '../constants.mjs';\n\n/** @import { FixMode } from 'stylelint' */\n\n/**\n * Normalize the fix mode based on options and configuration.\n * If the input is unknown, this returns `undefined`.\n *\n * @param {unknown} fix\n * @returns {FixMode | undefined}\n */\nexport default function normalizeFixMode(fix) {\n\tif (fix === true || fix === 'true' || fix === '' || fix === DEFAULT_FIX_MODE) {\n\t\treturn DEFAULT_FIX_MODE;\n\t}\n\n\tif (fix === 'strict') {\n\t\treturn 'strict';\n\t}\n\n\treturn undefined;\n}\n"],"names":[],"mappings":";;;AAAA;;AAWe,SAAS,iBAAiB,GAAG;IAC3C,IAAI,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,MAAM,QAAQ,gJAAA,CAAA,mBAAgB,EAAE;QAC7E,OAAO,gJAAA,CAAA,mBAAgB;IACxB;IAEA,IAAI,QAAQ,UAAU;QACrB,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2808, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/getPostcssResult.mjs"],"sourcesContent":["import { readFile } from 'node:fs/promises';\n\nimport postcss from 'postcss';\n\nimport dynamicImport from './utils/dynamicImport.mjs';\nimport getModulePath from './utils/getModulePath.mjs';\nimport normalizeFixMode from './utils/normalizeFixMode.mjs';\n\n/** @import {Result, Syntax} from 'postcss' */\n/** @import {CustomSyntax, GetPostcssOptions, InternalApi as StylelintInternalApi} from 'stylelint' */\n\nconst postcssProcessor = postcss();\n\n/**\n * @param {StylelintInternalApi} stylelint\n * @param {GetPostcssOptions} options\n *\n * @returns {Promise<Result>}\n */\nexport default async function getPostcssResult(stylelint, { customSyntax, filePath, code } = {}) {\n\tconst cached = filePath ? stylelint._postcssResultCache.get(filePath) : undefined;\n\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tconst fix = normalizeFixMode(stylelint._options.fix);\n\tconst syntax = await (customSyntax\n\t\t? getCustomSyntax(customSyntax, stylelint._options.configBasedir)\n\t\t: cssSyntax(fix === 'lax'));\n\n\tconst postcssOptions = {\n\t\tfrom: filePath,\n\t\tsyntax,\n\t};\n\n\t/** @type {string | undefined} */\n\tlet getCode;\n\n\tif (code !== undefined) {\n\t\tgetCode = code;\n\t} else if (filePath) {\n\t\tgetCode = await readFile(filePath, 'utf8');\n\t}\n\n\tif (getCode === undefined) {\n\t\tthrow new Error('code or filePath required');\n\t}\n\n\tconst postcssResult = await postcssProcessor.process(getCode, postcssOptions).async();\n\n\tif (filePath) {\n\t\tstylelint._postcssResultCache.set(filePath, postcssResult);\n\t}\n\n\treturn postcssResult;\n}\n\n/**\n * @param {CustomSyntax} customSyntax\n * @param {string | undefined} basedir\n * @returns {Promise<Syntax>}\n */\nasync function getCustomSyntax(customSyntax, basedir) {\n\tif (typeof customSyntax === 'string') {\n\t\tconst customSyntaxLookup = basedir ? getModulePath(basedir, customSyntax) : customSyntax;\n\n\t\tlet resolved;\n\n\t\ttry {\n\t\t\tresolved = await dynamicImport(customSyntaxLookup);\n\t\t\tresolved = resolved.default ?? resolved;\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\terror &&\n\t\t\t\ttypeof error === 'object' &&\n\t\t\t\t'code' in error &&\n\t\t\t\t// TODO: Remove 'MODULE_NOT_FOUND' when we drop the CommonJS support.\n\t\t\t\t// See https://nodejs.org/api/errors.html#module_not_found\n\t\t\t\t(error.code === 'MODULE_NOT_FOUND' || error.code === 'ERR_MODULE_NOT_FOUND') &&\n\t\t\t\t'message' in error &&\n\t\t\t\ttypeof error.message === 'string' &&\n\t\t\t\terror.message.includes(customSyntax)\n\t\t\t) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Cannot resolve custom syntax module \"${customSyntax}\". Check that module \"${customSyntax}\" is available and spelled correctly.\\n\\nCaused by: ${error}`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\n\t\t/*\n\t\t * PostCSS allows for syntaxes that only contain a parser, however,\n\t\t * it then expects the syntax to be set as the `parse` option.\n\t\t */\n\t\tif (!resolved.parse) {\n\t\t\tresolved = {\n\t\t\t\tparse: resolved,\n\t\t\t\tstringify: postcss.stringify,\n\t\t\t};\n\t\t}\n\n\t\treturn resolved;\n\t}\n\n\tif (typeof customSyntax === 'object') {\n\t\tif (typeof customSyntax.parse === 'function') {\n\t\t\treturn { ...customSyntax };\n\t\t}\n\n\t\tthrow new TypeError(\n\t\t\t'An object provided to the \"customSyntax\" option must have a \"parse\" property. Ensure the \"parse\" property exists and its value is a function.',\n\t\t);\n\t}\n\n\tthrow new Error('Custom syntax must be a string or a Syntax object');\n}\n\n/**\n * @param {boolean} fix\n * @returns {Promise<Syntax>}\n */\nasync function cssSyntax(fix) {\n\tconst parse = await (fix ? import('postcss-safe-parser').then((m) => m.default) : postcss.parse);\n\n\treturn { parse, stringify: postcss.stringify };\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AAEA;AACA;AACA;;;;;;;;;;AAEA,4CAA4C,GAC5C,oGAAoG,GAEpG,MAAM,mBAAmB,CAAA,GAAA,8GAAA,CAAA,UAAO,AAAD;AAQhB,eAAe,iBAAiB,SAAS,EAAE,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IAC9F,MAAM,SAAS,WAAW,UAAU,mBAAmB,CAAC,GAAG,CAAC,YAAY;IAExE,IAAI,QAAQ;QACX,OAAO;IACR;IAEA,MAAM,MAAM,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,UAAU,QAAQ,CAAC,GAAG;IACnD,MAAM,SAAS,MAAM,CAAC,eACnB,gBAAgB,cAAc,UAAU,QAAQ,CAAC,aAAa,IAC9D,UAAU,QAAQ,MAAM;IAE3B,MAAM,iBAAiB;QACtB,MAAM;QACN;IACD;IAEA,+BAA+B,GAC/B,IAAI;IAEJ,IAAI,SAAS,WAAW;QACvB,UAAU;IACX,OAAO,IAAI,UAAU;QACpB,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,WAAQ,AAAD,EAAE,UAAU;IACpC;IAEA,IAAI,YAAY,WAAW;QAC1B,MAAM,IAAI,MAAM;IACjB;IAEA,MAAM,gBAAgB,MAAM,iBAAiB,OAAO,CAAC,SAAS,gBAAgB,KAAK;IAEnF,IAAI,UAAU;QACb,UAAU,mBAAmB,CAAC,GAAG,CAAC,UAAU;IAC7C;IAEA,OAAO;AACR;AAEA;;;;CAIC,GACD,eAAe,gBAAgB,YAAY,EAAE,OAAO;IACnD,IAAI,OAAO,iBAAiB,UAAU;QACrC,MAAM,qBAAqB,UAAU,CAAA,GAAA,6JAAA,CAAA,UAAa,AAAD,EAAE,SAAS,gBAAgB;QAE5E,IAAI;QAEJ,IAAI;YACH,WAAW,MAAM,CAAA,GAAA,6JAAA,CAAA,UAAa,AAAD,EAAE;YAC/B,WAAW,SAAS,OAAO,IAAI;QAChC,EAAE,OAAO,OAAO;YACf,IACC,SACA,OAAO,UAAU,YACjB,UAAU,SACV,qEAAqE;YACrE,0DAA0D;YAC1D,CAAC,MAAM,IAAI,KAAK,sBAAsB,MAAM,IAAI,KAAK,sBAAsB,KAC3E,aAAa,SACb,OAAO,MAAM,OAAO,KAAK,YACzB,MAAM,OAAO,CAAC,QAAQ,CAAC,eACtB;gBACD,MAAM,IAAI,MACT,CAAC,qCAAqC,EAAE,aAAa,sBAAsB,EAAE,aAAa,oDAAoD,EAAE,OAAO;YAEzJ;YAEA,MAAM;QACP;QAEA;;;GAGC,GACD,IAAI,CAAC,SAAS,KAAK,EAAE;YACpB,WAAW;gBACV,OAAO;gBACP,WAAW,8GAAA,CAAA,UAAO,CAAC,SAAS;YAC7B;QACD;QAEA,OAAO;IACR;IAEA,IAAI,OAAO,iBAAiB,UAAU;QACrC,IAAI,OAAO,aAAa,KAAK,KAAK,YAAY;YAC7C,OAAO;gBAAE,GAAG,YAAY;YAAC;QAC1B;QAEA,MAAM,IAAI,UACT;IAEF;IAEA,MAAM,IAAI,MAAM;AACjB;AAEA;;;CAGC,GACD,eAAe,UAAU,GAAG;IAC3B,MAAM,QAAQ,MAAM,CAAC,MAAM,wJAA8B,IAAI,CAAC,CAAC,IAAM,EAAE,OAAO,IAAI,8GAAA,CAAA,UAAO,CAAC,KAAK;IAE/F,OAAO;QAAE;QAAO,WAAW,8GAAA,CAAA,UAAO,CAAC,SAAS;IAAC;AAC9C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2909, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/invalidScopeDisables.mjs"],"sourcesContent":["import { RULE_NAME_ALL } from './constants.mjs';\n\nimport optionsMatches from './utils/optionsMatches.mjs';\nimport reportCommentProblem from './utils/reportCommentProblem.mjs';\nimport validateDisableSettings from './validateDisableSettings.mjs';\n\n/**\n * @param {import('stylelint').PostcssResult} postcssResult\n * @returns {void}\n */\nexport default function invalidScopeDisables(postcssResult) {\n\tconst [enabled, options] = validateDisableSettings(postcssResult, 'reportInvalidScopeDisables');\n\n\tif (!options) return;\n\n\tconst configRules = postcssResult.stylelint.config?.rules;\n\n\tif (!configRules) return;\n\n\tconst usedRules = new Set(Object.keys(configRules));\n\n\tusedRules.add(RULE_NAME_ALL);\n\n\tfor (const [rule, ruleRanges] of Object.entries(postcssResult.stylelint.disabledRanges)) {\n\t\tif (usedRules.has(rule)) continue;\n\n\t\tif (enabled === optionsMatches(options, 'except', rule)) continue;\n\n\t\tfor (const range of ruleRanges) {\n\t\t\tif (!range.strictStart && !range.strictEnd) continue;\n\n\t\t\treportCommentProblem({\n\t\t\t\trule: '--report-invalid-scope-disables',\n\t\t\t\tmessage: `Rule \"${rule}\" isn't enabled`,\n\t\t\t\tseverity: options.severity,\n\t\t\t\tnode: range.node,\n\t\t\t\tpostcssResult,\n\t\t\t});\n\t\t}\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AACA;AACA;;;;;AAMe,SAAS,qBAAqB,aAAa;IACzD,MAAM,CAAC,SAAS,QAAQ,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAuB,AAAD,EAAE,eAAe;IAElE,IAAI,CAAC,SAAS;IAEd,MAAM,cAAc,cAAc,SAAS,CAAC,MAAM,EAAE;IAEpD,IAAI,CAAC,aAAa;IAElB,MAAM,YAAY,IAAI,IAAI,OAAO,IAAI,CAAC;IAEtC,UAAU,GAAG,CAAC,gJAAA,CAAA,gBAAa;IAE3B,KAAK,MAAM,CAAC,MAAM,WAAW,IAAI,OAAO,OAAO,CAAC,cAAc,SAAS,CAAC,cAAc,EAAG;QACxF,IAAI,UAAU,GAAG,CAAC,OAAO;QAEzB,IAAI,YAAY,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE,SAAS,UAAU,OAAO;QAEzD,KAAK,MAAM,SAAS,WAAY;YAC/B,IAAI,CAAC,MAAM,WAAW,IAAI,CAAC,MAAM,SAAS,EAAE;YAE5C,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE;gBACpB,MAAM;gBACN,SAAS,CAAC,MAAM,EAAE,KAAK,eAAe,CAAC;gBACvC,UAAU,QAAQ,QAAQ;gBAC1B,MAAM,MAAM,IAAI;gBAChB;YACD;QACD;IACD;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2948, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/filterFilePaths.mjs"],"sourcesContent":["import ignore from 'ignore';\n\n/**\n * @param {import('ignore').Ignore} ignorer\n * @param {string[]} filePaths\n * @returns {string[]}\n */\nexport default function filterFilePaths(ignorer, filePaths) {\n\tconst validForIgnore = filePaths.filter(ignore.isPathValid);\n\t// Paths which starts with `..` are not valid for `ignore`, e. g. `../style.css`\n\tconst notValidForIgnore = new Set(filePaths.filter((p) => !validForIgnore.includes(p)));\n\n\tconst filteredByIgnore = new Set(ignorer.filter(validForIgnore));\n\n\t// Preserving files order, while removing paths which were filtered by `ignore`\n\treturn filePaths.filter((p) => notValidForIgnore.has(p) || filteredByIgnore.has(p));\n}\n"],"names":[],"mappings":";;;AAAA;;AAOe,SAAS,gBAAgB,OAAO,EAAE,SAAS;IACzD,MAAM,iBAAiB,UAAU,MAAM,CAAC,iIAAA,CAAA,UAAM,CAAC,WAAW;IAC1D,gFAAgF;IAChF,MAAM,oBAAoB,IAAI,IAAI,UAAU,MAAM,CAAC,CAAC,IAAM,CAAC,eAAe,QAAQ,CAAC;IAEnF,MAAM,mBAAmB,IAAI,IAAI,QAAQ,MAAM,CAAC;IAEhD,+EAA+E;IAC/E,OAAO,UAAU,MAAM,CAAC,CAAC,IAAM,kBAAkB,GAAG,CAAC,MAAM,iBAAiB,GAAG,CAAC;AACjF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2967, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getFileIgnorer.mjs"],"sourcesContent":["import { existsSync, readFileSync } from 'node:fs';\nimport { isAbsolute, resolve } from 'node:path';\nimport ignore from 'ignore';\n\nimport { DEFAULT_IGNORE_FILENAME } from '../constants.mjs';\n\n/**\n * @typedef {import('stylelint').LinterOptions} LinterOptions\n *\n * @param {Pick<LinterOptions, 'ignorePath' | 'ignorePattern'> & { cwd: string }} options\n * @returns {import('ignore').Ignore}\n */\nexport default function getFileIgnorer({ ignorePath, ignorePattern, cwd }) {\n\tconst ignorer = ignore();\n\tconst ignorePaths = [ignorePath || []].flat();\n\n\tif (ignorePaths.length === 0) {\n\t\tignorePaths.push(DEFAULT_IGNORE_FILENAME);\n\t}\n\n\tfor (const ignoreFilePath of ignorePaths) {\n\t\tconst absoluteIgnoreFilePath = isAbsolute(ignoreFilePath)\n\t\t\t? ignoreFilePath\n\t\t\t: resolve(cwd, ignoreFilePath);\n\n\t\tif (!existsSync(absoluteIgnoreFilePath)) continue;\n\n\t\tconst ignoreText = readFileSync(absoluteIgnoreFilePath, {\n\t\t\t// utf must remain lowercased to hit the fast path\n\t\t\t// see nodejs/node#49888\n\t\t\tencoding: 'utf8',\n\t\t\tflag: 'r',\n\t\t});\n\n\t\tignorer.add(ignoreText);\n\t}\n\n\tif (ignorePattern) ignorer.add(ignorePattern);\n\n\treturn ignorer;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAEA;;;;;AAQe,SAAS,eAAe,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,EAAE;IACxE,MAAM,UAAU,CAAA,GAAA,iIAAA,CAAA,UAAM,AAAD;IACrB,MAAM,cAAc;QAAC,cAAc,EAAE;KAAC,CAAC,IAAI;IAE3C,IAAI,YAAY,MAAM,KAAK,GAAG;QAC7B,YAAY,IAAI,CAAC,gJAAA,CAAA,0BAAuB;IACzC;IAEA,KAAK,MAAM,kBAAkB,YAAa;QACzC,MAAM,yBAAyB,CAAA,GAAA,iHAAA,CAAA,aAAU,AAAD,EAAE,kBACvC,iBACA,CAAA,GAAA,iHAAA,CAAA,UAAO,AAAD,EAAE,KAAK;QAEhB,IAAI,CAAC,CAAA,GAAA,6GAAA,CAAA,aAAU,AAAD,EAAE,yBAAyB;QAEzC,MAAM,aAAa,CAAA,GAAA,6GAAA,CAAA,eAAY,AAAD,EAAE,wBAAwB;YACvD,kDAAkD;YAClD,wBAAwB;YACxB,UAAU;YACV,MAAM;QACP;QAEA,QAAQ,GAAG,CAAC;IACb;IAEA,IAAI,eAAe,QAAQ,GAAG,CAAC;IAE/B,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3006, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/isPathIgnored.mjs"],"sourcesContent":["import { isAbsolute, relative, resolve } from 'path';\n\nimport micromatch from 'micromatch';\n\nimport filterFilePaths from './utils/filterFilePaths.mjs';\nimport getConfigForFile from './getConfigForFile.mjs';\nimport getFileIgnorer from './utils/getFileIgnorer.mjs';\n\n/**\n * To find out if a path is ignored, we need to load the config,\n * which may have an ignoreFiles property. We then check the path\n * against these.\n * @param {import('stylelint').InternalApi} stylelint\n * @param {string} [filePath]\n * @returns {Promise<boolean>}\n */\nexport default async function isPathIgnored(stylelint, filePath) {\n\tif (!filePath) {\n\t\treturn false;\n\t}\n\n\tconst cwd = stylelint._options.cwd;\n\tconst result = await getConfigForFile(stylelint, filePath, filePath);\n\n\tif (!result) {\n\t\treturn true;\n\t}\n\n\tconst ignoreFiles = result.config.ignoreFiles || [];\n\tconst absoluteFilePath = isAbsolute(filePath) ? filePath : resolve(cwd, filePath);\n\n\tif (micromatch([absoluteFilePath], ignoreFiles).length > 0) {\n\t\treturn true;\n\t}\n\n\tconst ignorer = getFileIgnorer(stylelint._options);\n\n\tif (filterFilePaths(ignorer, [relative(cwd, absoluteFilePath)]).length === 0) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AAEA;AACA;AACA;;;;;;AAUe,eAAe,cAAc,SAAS,EAAE,QAAQ;IAC9D,IAAI,CAAC,UAAU;QACd,OAAO;IACR;IAEA,MAAM,MAAM,UAAU,QAAQ,CAAC,GAAG;IAClC,MAAM,SAAS,MAAM,CAAA,GAAA,uJAAA,CAAA,UAAgB,AAAD,EAAE,WAAW,UAAU;IAE3D,IAAI,CAAC,QAAQ;QACZ,OAAO;IACR;IAEA,MAAM,cAAc,OAAO,MAAM,CAAC,WAAW,IAAI,EAAE;IACnD,MAAM,mBAAmB,CAAA,GAAA,iGAAA,CAAA,aAAU,AAAD,EAAE,YAAY,WAAW,CAAA,GAAA,iGAAA,CAAA,UAAO,AAAD,EAAE,KAAK;IAExE,IAAI,CAAA,GAAA,qIAAA,CAAA,UAAU,AAAD,EAAE;QAAC;KAAiB,EAAE,aAAa,MAAM,GAAG,GAAG;QAC3D,OAAO;IACR;IAEA,MAAM,UAAU,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE,UAAU,QAAQ;IAEjD,IAAI,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAAE,SAAS;QAAC,CAAA,GAAA,iGAAA,CAAA,WAAQ,AAAD,EAAE,KAAK;KAAkB,EAAE,MAAM,KAAK,GAAG;QAC7E,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3049, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isPathNotFoundError.mjs"],"sourcesContent":["import { types } from 'node:util';\n\n/**\n * @param {unknown} error\n * @returns {error is NodeJS.ErrnoException}\n */\nexport default function isPathNotFoundError(error) {\n\treturn types.isNativeError(error) && 'code' in error && error.code === 'ENOENT';\n}\n"],"names":[],"mappings":";;;AAAA;;AAMe,SAAS,oBAAoB,KAAK;IAChD,OAAO,iHAAA,CAAA,QAAK,CAAC,aAAa,CAAC,UAAU,UAAU,SAAS,MAAM,IAAI,KAAK;AACxE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3063, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/typeGuards.mjs"],"sourcesContent":["/** @typedef {import('postcss').Node} Node */\n/** @typedef {import('postcss').Source} NodeSource */\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Root}\n */\nexport function isRoot(node) {\n\treturn node.type === 'root';\n}\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Rule}\n */\nexport function isRule(node) {\n\treturn node.type === 'rule';\n}\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').AtRule}\n */\nexport function isAtRule(node) {\n\treturn node.type === 'atrule';\n}\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Comment}\n */\nexport function isComment(node) {\n\treturn node.type === 'comment';\n}\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Declaration}\n */\nexport function isDeclaration(node) {\n\treturn node.type === 'decl';\n}\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Document}\n */\nexport function isDocument(node) {\n\treturn node.type === 'document';\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n * @returns {node is import('postcss-value-parser').DivNode}\n */\nexport function isValueDiv(node) {\n\treturn node.type === 'div';\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n * @returns {node is import('postcss-value-parser').FunctionNode}\n */\nexport function isValueFunction(node) {\n\treturn node.type === 'function';\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n * @returns {node is import('postcss-value-parser').SpaceNode}\n */\nexport function isValueSpace(node) {\n\treturn node.type === 'space';\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n * @returns {node is import('postcss-value-parser').WordNode}\n */\nexport function isValueWord({ type }) {\n\treturn type === 'word';\n}\n\n/**\n * @param {Node} node\n * @returns {node is (Node & {source: NodeSource})}\n */\nexport function hasSource(node) {\n\treturn Boolean(node.source);\n}\n"],"names":[],"mappings":"AAAA,2CAA2C,GAC3C,mDAAmD,GAEnD;;;CAGC;;;;;;;;;;;;;AACM,SAAS,OAAO,IAAI;IAC1B,OAAO,KAAK,IAAI,KAAK;AACtB;AAMO,SAAS,OAAO,IAAI;IAC1B,OAAO,KAAK,IAAI,KAAK;AACtB;AAMO,SAAS,SAAS,IAAI;IAC5B,OAAO,KAAK,IAAI,KAAK;AACtB;AAMO,SAAS,UAAU,IAAI;IAC7B,OAAO,KAAK,IAAI,KAAK;AACtB;AAMO,SAAS,cAAc,IAAI;IACjC,OAAO,KAAK,IAAI,KAAK;AACtB;AAMO,SAAS,WAAW,IAAI;IAC9B,OAAO,KAAK,IAAI,KAAK;AACtB;AAMO,SAAS,WAAW,IAAI;IAC9B,OAAO,KAAK,IAAI,KAAK;AACtB;AAMO,SAAS,gBAAgB,IAAI;IACnC,OAAO,KAAK,IAAI,KAAK;AACtB;AAMO,SAAS,aAAa,IAAI;IAChC,OAAO,KAAK,IAAI,KAAK;AACtB;AAMO,SAAS,YAAY,EAAE,IAAI,EAAE;IACnC,OAAO,SAAS;AACjB;AAMO,SAAS,UAAU,IAAI;IAC7B,OAAO,QAAQ,KAAK,MAAM;AAC3B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3118, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/configurationComment.mjs"],"sourcesContent":["import { assertString, isString } from './validateTypes.mjs';\nimport { isComment } from './typeGuards.mjs';\n\nexport const DISABLE_COMMAND = '-disable';\nexport const DISABLE_LINE_COMMAND = '-disable-line';\nexport const DISABLE_NEXT_LINE_COMMAND = '-disable-next-line';\nexport const ENABLE_COMMAND = '-enable';\n\nconst ALL_COMMANDS = new Set([\n\tDISABLE_COMMAND,\n\tDISABLE_LINE_COMMAND,\n\tDISABLE_NEXT_LINE_COMMAND,\n\tENABLE_COMMAND,\n]);\n\nexport const DEFAULT_CONFIGURATION_COMMENT = 'stylelint';\n\n/**\n * Extract a command from a given comment.\n *\n * @param {string} commentText\n * @param {string} [configurationComment]\n * @returns {string}\n */\nexport function extractConfigurationComment(\n\tcommentText,\n\tconfigurationComment = DEFAULT_CONFIGURATION_COMMENT,\n) {\n\tif (!commentText) return commentText;\n\n\tconst [command] = commentText.split(/\\s/, 1);\n\n\tassertString(command);\n\n\treturn command.replace(configurationComment, '');\n}\n\n/**\n * Tests if the given comment is a Stylelint command.\n *\n * @param {string | import('postcss').Node} textOrNode\n * @param {string} [configurationComment]\n * @returns {boolean}\n */\nexport function isConfigurationComment(\n\ttextOrNode,\n\tconfigurationComment = DEFAULT_CONFIGURATION_COMMENT,\n) {\n\tconst commentText = isString(textOrNode)\n\t\t? textOrNode\n\t\t: isComment(textOrNode)\n\t\t\t? textOrNode.text\n\t\t\t: undefined;\n\n\tif (!commentText) return false;\n\n\tconst command = extractConfigurationComment(commentText, configurationComment);\n\n\treturn command !== undefined && ALL_COMMANDS.has(command);\n}\n\n/**\n * Get full stylelint command\n *\n * @param {string} command\n * @param {string} [configurationComment]\n * @returns {string}\n */\nexport function getConfigurationComment(\n\tcommand,\n\tconfigurationComment = DEFAULT_CONFIGURATION_COMMENT,\n) {\n\treturn `${configurationComment}${command}`;\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEO,MAAM,kBAAkB;AACxB,MAAM,uBAAuB;AAC7B,MAAM,4BAA4B;AAClC,MAAM,iBAAiB;AAE9B,MAAM,eAAe,IAAI,IAAI;IAC5B;IACA;IACA;IACA;CACA;AAEM,MAAM,gCAAgC;AAStC,SAAS,4BACf,WAAW,EACX,uBAAuB,6BAA6B;IAEpD,IAAI,CAAC,aAAa,OAAO;IAEzB,MAAM,CAAC,QAAQ,GAAG,YAAY,KAAK,CAAC,MAAM;IAE1C,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAD,EAAE;IAEb,OAAO,QAAQ,OAAO,CAAC,sBAAsB;AAC9C;AASO,SAAS,uBACf,UAAU,EACV,uBAAuB,6BAA6B;IAEpD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,cAC1B,aACA,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,cACT,WAAW,IAAI,GACf;IAEJ,IAAI,CAAC,aAAa,OAAO;IAEzB,MAAM,UAAU,4BAA4B,aAAa;IAEzD,OAAO,YAAY,aAAa,aAAa,GAAG,CAAC;AAClD;AASO,SAAS,wBACf,OAAO,EACP,uBAAuB,6BAA6B;IAEpD,OAAO,GAAG,uBAAuB,SAAS;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3164, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isStandardSyntaxComment.mjs"],"sourcesContent":["/**\n * @param {import('postcss').Comment} comment\n * @returns {boolean}\n */\nexport default function isStandardSyntaxComment(comment) {\n\t// We check both here because the Sass parser uses `raws.inline` to indicate\n\t// inline comments, while the Less parser uses `inline`.\n\tif ('inline' in comment) return false;\n\n\tif ('inline' in comment.raws) return false;\n\n\treturn true;\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACc,SAAS,wBAAwB,OAAO;IACtD,4EAA4E;IAC5E,wDAAwD;IACxD,IAAI,YAAY,SAAS,OAAO;IAEhC,IAAI,YAAY,QAAQ,IAAI,EAAE,OAAO;IAErC,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3183, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/assignDisabledRanges.mjs"],"sourcesContent":["import { RULE_NAME_ALL } from './constants.mjs';\n\nimport {\n\tDISABLE_COMMAND,\n\tDISABLE_LINE_COMMAND,\n\tDISABLE_NEXT_LINE_COMMAND,\n\tENABLE_COMMAND,\n\textractConfigurationComment,\n\tgetConfigurationComment,\n\tisConfigurationComment,\n} from './utils/configurationComment.mjs';\nimport { assert, assertNumber, assertString } from './utils/validateTypes.mjs';\nimport { isAtRule, isComment, isDeclaration, isRule } from './utils/typeGuards.mjs';\nimport isStandardSyntaxComment from './utils/isStandardSyntaxComment.mjs';\n\nimport { isTokenComment, tokenize } from '@csstools/css-tokenizer';\n\n/** @import {Node as PostcssNode, Comment as PostcssComment, Document as PostcssDocument, Root as PostcssRoot, Source as PostcssSource} from 'postcss' */\n/** @import {DisabledRange, DisabledRangeObject, PostcssResult} from 'stylelint' */\n/** @typedef {Pick<PostcssSource, 'start' | 'end'>} Source */\n\n/**\n * @param {PostcssNode} node\n * @param {number} start\n * @param {boolean} strictStart\n * @param {string|undefined} description\n * @param {number} [end]\n * @param {boolean} [strictEnd]\n * @returns {DisabledRange}\n */\nfunction createDisableRange(node, start, strictStart, description, end, strictEnd) {\n\treturn {\n\t\tnode,\n\t\tstart,\n\t\tend: end || undefined,\n\t\tstrictStart,\n\t\tstrictEnd: typeof strictEnd === 'boolean' ? strictEnd : undefined,\n\t\tdescription,\n\t};\n}\n\n/**\n * Run it like a PostCSS plugin\n * @param {PostcssRoot | PostcssDocument} root\n * @param {PostcssResult} result\n * @returns {PostcssResult}\n */\nexport default function assignDisabledRanges(root, result) {\n\t/**\n\t * Most of the functions below work via side effects mutating this object\n\t * @type {DisabledRangeObject}\n\t */\n\tconst disabledRanges = result.stylelint.disabledRanges;\n\n\t/** @type {DisabledRange[]} */\n\tconst disabledRangesAll = [];\n\n\tdisabledRanges[RULE_NAME_ALL] = disabledRangesAll;\n\n\t// Work around postcss/postcss-scss#109 by merging adjacent `//` comments\n\t// into a single node before passing to `checkComment`.\n\n\t/** @type {PostcssComment?} */\n\tlet inlineEnd;\n\n\tconst configurationComment = result.stylelint.config?.configurationComment;\n\n\troot.walk((node) => {\n\t\tif (isComment(node)) {\n\t\t\tif (inlineEnd) {\n\t\t\t\t// Ignore comments already processed by grouping with a previous one.\n\t\t\t\tif (inlineEnd === node) inlineEnd = null;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextComment = node.next();\n\n\t\t\t// If any of these conditions are not met, do not merge comments.\n\t\t\tif (\n\t\t\t\t!(\n\t\t\t\t\t!isStandardSyntaxComment(node) &&\n\t\t\t\t\tisConfigurationComment(node.text, configurationComment) &&\n\t\t\t\t\tnextComment &&\n\t\t\t\t\tisComment(nextComment) &&\n\t\t\t\t\t(node.text.includes('--') || nextComment.text.startsWith('--'))\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tcheckComment(node, node.source, node.text);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet lastLine = node.source?.end?.line ?? 0;\n\t\t\tconst fullComment = node.clone();\n\n\t\t\tlet current = nextComment;\n\n\t\t\twhile (\n\t\t\t\t!isStandardSyntaxComment(current) &&\n\t\t\t\t!isConfigurationComment(current.text, configurationComment)\n\t\t\t) {\n\t\t\t\tconst currentLine = current.source?.end?.line ?? 0;\n\n\t\t\t\tif (lastLine + 1 !== currentLine) break;\n\n\t\t\t\tfullComment.text += `\\n${current.text}`;\n\n\t\t\t\tif (fullComment.source && current.source) {\n\t\t\t\t\tfullComment.source.end = current.source.end;\n\t\t\t\t}\n\n\t\t\t\tinlineEnd = current;\n\t\t\t\tconst next = current.next();\n\n\t\t\t\tif (!next || !isComment(next)) break;\n\n\t\t\t\tcurrent = next;\n\t\t\t\tlastLine = currentLine;\n\t\t\t}\n\n\t\t\tcheckComment(fullComment, fullComment.source, fullComment.text);\n\t\t}\n\n\t\tif (isRule(node)) {\n\t\t\tlet offset = 0;\n\t\t\tconst selector = node.raws?.selector?.raw;\n\n\t\t\tcheckCommentsInNode(node, selector, offset);\n\n\t\t\toffset += selector?.length ?? node.selector.length;\n\t\t\tconst between = node.raws?.between;\n\n\t\t\tcheckCommentsInNode(node, between, offset);\n\t\t}\n\n\t\tif (isAtRule(node)) {\n\t\t\tlet offset = node.name.length + 1; // `@` + name\n\t\t\tconst afterName = node.raws?.afterName;\n\n\t\t\tcheckCommentsInNode(node, afterName, offset);\n\n\t\t\toffset += afterName?.length ?? 0;\n\t\t\tconst params = node.raws?.params?.raw;\n\n\t\t\tcheckCommentsInNode(node, params, offset);\n\n\t\t\toffset += params?.length ?? node.params.length;\n\t\t\tconst between = node.raws?.between;\n\n\t\t\tcheckCommentsInNode(node, between, offset);\n\t\t}\n\n\t\tif (isDeclaration(node)) {\n\t\t\tlet offset = node.prop.length;\n\t\t\tconst between = node.raws?.between;\n\n\t\t\tcheckCommentsInNode(node, between, offset);\n\n\t\t\toffset += between?.length ?? 0;\n\t\t\tconst value = node.raws?.value?.raw;\n\n\t\t\tcheckCommentsInNode(node, value, offset);\n\t\t}\n\t});\n\n\treturn result;\n\n\t/**\n\t * @param {PostcssNode} node\n\t * @param {Source} source\n\t * @param {string} text\n\t */\n\tfunction processDisableLineCommand(node, source, text) {\n\t\tif (source.start) {\n\t\t\tconst line = source.start.line;\n\t\t\tconst description = getDescription(text);\n\n\t\t\tfor (const ruleName of getCommandRules(DISABLE_LINE_COMMAND, text)) {\n\t\t\t\tdisableLine(node, line, ruleName, description);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {PostcssNode} node\n\t * @param {Source} source\n\t * @param {string} text\n\t */\n\tfunction processDisableNextLineCommand(node, source, text) {\n\t\tif (source.end) {\n\t\t\tconst line = source.end.line;\n\t\t\tconst description = getDescription(text);\n\n\t\t\tfor (const ruleName of getCommandRules(DISABLE_NEXT_LINE_COMMAND, text)) {\n\t\t\t\tdisableLine(node, line + 1, ruleName, description);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {PostcssNode} node\n\t * @param {number} line\n\t * @param {string} ruleName\n\t * @param {string|undefined} description\n\t */\n\tfunction disableLine(node, line, ruleName, description) {\n\t\tif (ruleIsDisabled(RULE_NAME_ALL)) {\n\t\t\tthrow node.error('All rules have already been disabled', {\n\t\t\t\tplugin: 'stylelint',\n\t\t\t});\n\t\t}\n\n\t\tif (ruleName === RULE_NAME_ALL) {\n\t\t\tfor (const disabledRuleName of Object.keys(disabledRanges)) {\n\t\t\t\tif (ruleIsDisabled(disabledRuleName)) continue;\n\n\t\t\t\tconst strict = disabledRuleName === RULE_NAME_ALL;\n\n\t\t\t\tstartDisabledRange(node, line, disabledRuleName, strict, description);\n\t\t\t\tendDisabledRange(line, disabledRuleName, strict);\n\t\t\t}\n\t\t} else {\n\t\t\tif (ruleIsDisabled(ruleName)) {\n\t\t\t\tthrow node.error(`\"${ruleName}\" has already been disabled`, {\n\t\t\t\t\tplugin: 'stylelint',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tstartDisabledRange(node, line, ruleName, true, description);\n\t\t\tendDisabledRange(line, ruleName, true);\n\t\t}\n\t}\n\n\t/**\n\t * @param {PostcssNode} node\n\t * @param {Source} source\n\t * @param {string} text\n\t */\n\tfunction processDisableCommand(node, source, text) {\n\t\tconst description = getDescription(text);\n\n\t\tfor (const ruleToDisable of getCommandRules(DISABLE_COMMAND, text)) {\n\t\t\tconst isAllRules = ruleToDisable === RULE_NAME_ALL;\n\n\t\t\tif (ruleIsDisabled(ruleToDisable)) {\n\t\t\t\tthrow node.error(\n\t\t\t\t\tisAllRules\n\t\t\t\t\t\t? 'All rules have already been disabled'\n\t\t\t\t\t\t: `\"${ruleToDisable}\" has already been disabled`,\n\t\t\t\t\t{\n\t\t\t\t\t\tplugin: 'stylelint',\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (source.start) {\n\t\t\t\tconst line = source.start.line;\n\n\t\t\t\tif (isAllRules) {\n\t\t\t\t\tfor (const ruleName of Object.keys(disabledRanges)) {\n\t\t\t\t\t\tstartDisabledRange(node, line, ruleName, ruleName === RULE_NAME_ALL, description);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstartDisabledRange(node, line, ruleToDisable, true, description);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {PostcssNode} node\n\t * @param {Source} source\n\t * @param {string} text\n\t */\n\tfunction processEnableCommand(node, source, text) {\n\t\tfor (const ruleToEnable of getCommandRules(ENABLE_COMMAND, text)) {\n\t\t\t// need fallback if endLine will be undefined\n\t\t\tconst endLine = source.end?.line;\n\n\t\t\tassertNumber(endLine);\n\n\t\t\tif (ruleToEnable === RULE_NAME_ALL) {\n\t\t\t\tif (\n\t\t\t\t\tObject.values(disabledRanges).every((ranges) => {\n\t\t\t\t\t\tif (ranges.length === 0) return true;\n\n\t\t\t\t\t\tconst lastRange = ranges[ranges.length - 1];\n\n\t\t\t\t\t\treturn lastRange && typeof lastRange.end === 'number';\n\t\t\t\t\t})\n\t\t\t\t) {\n\t\t\t\t\tthrow node.error('No rules have been disabled', {\n\t\t\t\t\t\tplugin: 'stylelint',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfor (const [ruleName, ranges] of Object.entries(disabledRanges)) {\n\t\t\t\t\tconst lastRange = ranges[ranges.length - 1];\n\n\t\t\t\t\tif (!lastRange || !lastRange.end) {\n\t\t\t\t\t\tendDisabledRange(endLine, ruleName, ruleName === RULE_NAME_ALL);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (ruleIsDisabled(RULE_NAME_ALL) && disabledRanges[ruleToEnable] === undefined) {\n\t\t\t\t// Get a starting point from the where all rules were disabled\n\t\t\t\tdisabledRanges[ruleToEnable] = disabledRangesAll.map(({ start, end, description }) =>\n\t\t\t\t\tcreateDisableRange(node, start, false, description, end, false),\n\t\t\t\t);\n\n\t\t\t\tendDisabledRange(endLine, ruleToEnable, true);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (ruleIsDisabled(ruleToEnable)) {\n\t\t\t\tendDisabledRange(endLine, ruleToEnable, true);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthrow node.error(`\"${ruleToEnable}\" has not been disabled`, {\n\t\t\t\tplugin: 'stylelint',\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @param {PostcssNode} node\n\t * @param {string | undefined} part\n\t * @param {number} offset\n\t */\n\tfunction checkCommentsInNode(node, part, offset) {\n\t\tif (!(part && part.includes('/*') && part.includes('*/'))) return;\n\n\t\ttokenize({ css: part }).forEach((token) => {\n\t\t\tif (!isTokenComment(token)) return;\n\n\t\t\tconst [, text, start, end] = token;\n\n\t\t\tconst source = node.rangeBy({\n\t\t\t\tindex: start + offset,\n\t\t\t\tendIndex: end + 1 + offset,\n\t\t\t});\n\n\t\t\tcheckComment(node, source, text.slice(2, -2).trim());\n\t\t});\n\t}\n\n\t/**\n\t * @param {PostcssNode} node\n\t * @param {Source | undefined} source\n\t * @param {string} text\n\t */\n\tfunction checkComment(node, source, text) {\n\t\tif (!source) return;\n\n\t\t// Ignore comments that are not relevant commands\n\t\tif (!isConfigurationComment(text, configurationComment)) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (extractConfigurationComment(text, configurationComment)) {\n\t\t\tcase DISABLE_LINE_COMMAND:\n\t\t\t\tprocessDisableLineCommand(node, source, text);\n\t\t\t\tbreak;\n\t\t\tcase DISABLE_NEXT_LINE_COMMAND:\n\t\t\t\tprocessDisableNextLineCommand(node, source, text);\n\t\t\t\tbreak;\n\t\t\tcase DISABLE_COMMAND:\n\t\t\t\tprocessDisableCommand(node, source, text);\n\t\t\t\tbreak;\n\t\t\tcase ENABLE_COMMAND:\n\t\t\t\tprocessEnableCommand(node, source, text);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} command\n\t * @param {string} fullText\n\t * @returns {string[]}\n\t */\n\tfunction getCommandRules(command, fullText) {\n\t\t// Allow for description (f.e. /* stylelint-disable a, b -- Description */).\n\t\tconst fullCommand = getConfigurationComment(command, configurationComment);\n\t\tconst rulesText = fullText.slice(fullCommand.length).split(/\\s-{2,}\\s/u)[0];\n\n\t\tassertString(rulesText);\n\t\tconst rules = rulesText\n\t\t\t.trim()\n\t\t\t.split(',')\n\t\t\t.filter(Boolean)\n\t\t\t.map((r) => r.trim());\n\n\t\tif (rules.length === 0) {\n\t\t\treturn [RULE_NAME_ALL];\n\t\t}\n\n\t\treturn rules;\n\t}\n\n\t/**\n\t * @param {string} fullText\n\t * @returns {string|undefined}\n\t */\n\tfunction getDescription(fullText) {\n\t\tconst descriptionStart = fullText.indexOf('--');\n\n\t\tif (descriptionStart === -1) return;\n\n\t\treturn fullText.slice(descriptionStart + 2).trim();\n\t}\n\n\t/**\n\t * @param {PostcssNode} node\n\t * @param {number} line\n\t * @param {string} ruleName\n\t * @param {boolean} strict\n\t * @param {string|undefined} description\n\t */\n\tfunction startDisabledRange(node, line, ruleName, strict, description) {\n\t\tconst rangeObj = createDisableRange(node, line, strict, description);\n\n\t\tensureRuleRanges(ruleName);\n\n\t\tconst range = disabledRanges[ruleName];\n\n\t\tassert(range);\n\t\trange.push(rangeObj);\n\t}\n\n\t/**\n\t * @param {number} line\n\t * @param {string} ruleName\n\t * @param {boolean} strict\n\t */\n\tfunction endDisabledRange(line, ruleName, strict) {\n\t\tconst ranges = disabledRanges[ruleName];\n\t\tconst lastRangeForRule = ranges ? ranges[ranges.length - 1] : null;\n\n\t\tif (!lastRangeForRule) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Add an `end` prop to the last range of that rule\n\t\tlastRangeForRule.end = line;\n\t\tlastRangeForRule.strictEnd = strict;\n\t}\n\n\t/**\n\t * @param {string} ruleName\n\t */\n\tfunction ensureRuleRanges(ruleName) {\n\t\tif (!disabledRanges[ruleName]) {\n\t\t\tdisabledRanges[ruleName] = disabledRangesAll.map(({ node, start, end, description }) =>\n\t\t\t\tcreateDisableRange(node, start, false, description, end, false),\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} ruleName\n\t * @returns {boolean}\n\t */\n\tfunction ruleIsDisabled(ruleName) {\n\t\tconst ranges = disabledRanges[ruleName];\n\n\t\tif (!ranges) return false;\n\n\t\tconst lastRange = ranges[ranges.length - 1];\n\n\t\tif (!lastRange) return false;\n\n\t\tif (!lastRange.end) return true;\n\n\t\treturn false;\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3529, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/reportUnknownRuleNames.mjs"],"sourcesContent":["import { distance } from 'fastest-levenshtein';\n\nimport { SEVERITY_ERROR } from './constants.mjs';\nimport rules from './rules/index.mjs';\n\nconst MAX_LEVENSHTEIN_DISTANCE = 6;\nconst MAX_SUGGESTIONS_COUNT = 3;\n\n/**\n * @param {string} ruleName\n * @returns {string[]}\n */\nfunction extractSuggestions(ruleName) {\n\tconst suggestions = Array.from({ length: MAX_LEVENSHTEIN_DISTANCE });\n\n\tfor (let i = 0; i < suggestions.length; i++) {\n\t\tsuggestions[i] = [];\n\t}\n\n\tfor (const existRuleName of Object.keys(rules)) {\n\t\tconst dist = distance(existRuleName, ruleName);\n\n\t\tif (dist <= MAX_LEVENSHTEIN_DISTANCE) {\n\t\t\tsuggestions[dist - 1].push(existRuleName);\n\t\t}\n\t}\n\n\t/** @type {string[]} */\n\tlet result = [];\n\n\tfor (const [i, suggestion] of suggestions.entries()) {\n\t\tif (suggestion.length > 0) {\n\t\t\tif (i < 3) {\n\t\t\t\treturn suggestion.slice(0, MAX_SUGGESTIONS_COUNT);\n\t\t\t}\n\n\t\t\tresult = result.concat(suggestion);\n\t\t}\n\t}\n\n\treturn result.slice(0, MAX_SUGGESTIONS_COUNT);\n}\n\n/**\n * @param {string} ruleName\n * @param {string[]} [suggestions]\n * @returns {string}\n */\nfunction rejectMessage(ruleName, suggestions = []) {\n\treturn `Unknown rule ${ruleName}.${\n\t\tsuggestions.length > 0 ? ` Did you mean ${suggestions.join(', ')}?` : ''\n\t}`;\n}\n\n/** @type {Map<string, string[]>} */\nconst cache = new Map();\n\n/**\n * @param {string} unknownRuleName\n * @param {import('postcss').Root} postcssRoot\n * @param {import('stylelint').PostcssResult} postcssResult\n * @returns {void}\n */\nexport default function reportUnknownRuleNames(unknownRuleName, postcssRoot, postcssResult) {\n\tconst suggestions = cache.has(unknownRuleName)\n\t\t? /** @type {string[]} */ (cache.get(unknownRuleName))\n\t\t: extractSuggestions(unknownRuleName);\n\n\tcache.set(unknownRuleName, suggestions);\n\tpostcssResult.warn(rejectMessage(unknownRuleName, suggestions), {\n\t\tseverity: SEVERITY_ERROR,\n\t\trule: unknownRuleName,\n\t\tnode: postcssRoot,\n\t\tindex: 0,\n\t});\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AACA;;;;AAEA,MAAM,2BAA2B;AACjC,MAAM,wBAAwB;AAE9B;;;CAGC,GACD,SAAS,mBAAmB,QAAQ;IACnC,MAAM,cAAc,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAyB;IAElE,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,MAAM,EAAE,IAAK;QAC5C,WAAW,CAAC,EAAE,GAAG,EAAE;IACpB;IAEA,KAAK,MAAM,iBAAiB,OAAO,IAAI,CAAC,qJAAA,CAAA,UAAK,EAAG;QAC/C,MAAM,OAAO,CAAA,GAAA,sJAAA,CAAA,WAAQ,AAAD,EAAE,eAAe;QAErC,IAAI,QAAQ,0BAA0B;YACrC,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;QAC5B;IACD;IAEA,qBAAqB,GACrB,IAAI,SAAS,EAAE;IAEf,KAAK,MAAM,CAAC,GAAG,WAAW,IAAI,YAAY,OAAO,GAAI;QACpD,IAAI,WAAW,MAAM,GAAG,GAAG;YAC1B,IAAI,IAAI,GAAG;gBACV,OAAO,WAAW,KAAK,CAAC,GAAG;YAC5B;YAEA,SAAS,OAAO,MAAM,CAAC;QACxB;IACD;IAEA,OAAO,OAAO,KAAK,CAAC,GAAG;AACxB;AAEA;;;;CAIC,GACD,SAAS,cAAc,QAAQ,EAAE,cAAc,EAAE;IAChD,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,EAChC,YAAY,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,YAAY,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IACrE;AACH;AAEA,kCAAkC,GAClC,MAAM,QAAQ,IAAI;AAQH,SAAS,uBAAuB,eAAe,EAAE,WAAW,EAAE,aAAa;IACzF,MAAM,cAAc,MAAM,GAAG,CAAC,mBACF,MAAM,GAAG,CAAC,mBACnC,mBAAmB;IAEtB,MAAM,GAAG,CAAC,iBAAiB;IAC3B,cAAc,IAAI,CAAC,cAAc,iBAAiB,cAAc;QAC/D,UAAU,gJAAA,CAAA,iBAAc;QACxB,MAAM;QACN,MAAM;QACN,OAAO;IACR;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3591, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/timing.mjs"],"sourcesContent":["import process from 'node:process';\nimport { table } from 'table';\n\n// Inspired by ESLint's timing.js\n// https://github.com/eslint/eslint/blob/09bc2a88c00aa9a93c7de505795fc4e85b2e6357/lib/linter/timing.js\n\n/**\n * Start time measurement.\n * @returns {bigint} Variable for tracking time in nanoseconds.\n */\nfunction startTime() {\n\treturn process.hrtime.bigint();\n}\n\n/**\n * End time measurement.\n * @param {bigint} start Variable for tracking time in nanoseconds.\n * @returns {number} The measured time in milliseconds.\n */\nfunction endTime(start) {\n\tconst diff = process.hrtime.bigint() - start;\n\n\treturn Number(diff) / 1e6;\n}\n\nconst HEADERS = ['#', 'Rule', 'Time (ms)', 'Relative'];\n\n/**\n * Decide how many rules to show in the output list.\n * @returns {number} The number of rules to show.\n */\nfunction getListSize() {\n\tconst TIMING = process.env.TIMING;\n\n\tif (typeof TIMING === 'undefined') {\n\t\treturn 0;\n\t}\n\n\tif (TIMING.toLowerCase() === 'all') {\n\t\treturn Number.POSITIVE_INFINITY;\n\t}\n\n\tconst parsed = Number.parseInt(TIMING, 10);\n\n\tif (!Number.isNaN(parsed) && parsed >= 1) {\n\t\treturn parsed;\n\t}\n\n\treturn 0;\n}\n\nconst listSize = getListSize();\nconst enabled = listSize !== 0;\n\n/** @type {import('table').TableUserConfig}  */\nconst tableConfig = {\n\tcolumns: [\n\t\t{ alignment: 'right' },\n\t\t{ alignment: 'left' },\n\t\t{ alignment: 'right' },\n\t\t{ alignment: 'right' },\n\t],\n};\n\n/**\n * Display the timing data.\n * @param {{ [key: string]: number }} data Data object to be displayed.\n * @returns {void}\n * @private\n */\nfunction display(data) {\n\tlet total = 0;\n\n\t/** @type {Array<[string, number]>} */\n\tconst rows = Object.keys(data).map((key) => {\n\t\tconst t = data[key] ?? 0;\n\n\t\ttotal += t;\n\n\t\treturn [key, t];\n\t});\n\n\trows.sort((a, b) => b[1] - a[1]);\n\tconst limitedRows = rows.slice(0, listSize);\n\n\t// Format rows with percentages\n\tconst formattedRows = limitedRows.map((row, index) => {\n\t\tconst percentage = total > 0 ? `${((row[1] * 100) / total).toFixed(1)}%` : '0.0%';\n\t\tconst timeStr = row[1].toFixed(3);\n\n\t\treturn [index + 1, row[0], timeStr, percentage];\n\t});\n\n\tformattedRows.unshift(HEADERS);\n\n\t// eslint-disable-next-line no-console\n\tconsole.log(table(formattedRows, tableConfig));\n}\n\n/** @type {{ [key: string]: number }} */\nconst data = Object.create(null);\n\n/**\n * Time the execution of a function.\n * @param {string} key Key from the data object.\n * @param {Function} fn Function to be called.\n * @returns {Function} Function to be executed.\n * @private\n */\nfunction time(key, fn) {\n\treturn function timedFunction(/** @type {any} */ ...args) {\n\t\tconst t = startTime();\n\t\tconst result = fn(...args);\n\t\tconst timeDiff = endTime(t);\n\n\t\tdata[key] = (data[key] ?? 0) + timeDiff;\n\n\t\treturn result;\n\t};\n}\n\nif (enabled) {\n\tprocess.on('exit', () => {\n\t\tdisplay(data);\n\t});\n}\n\nexport default {\n\tdisplay,\n\tenabled,\n\tgetListSize,\n\ttableConfig,\n\ttime,\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,iCAAiC;AACjC,sGAAsG;AAEtG;;;CAGC,GACD,SAAS;IACR,OAAO,uHAAA,CAAA,UAAO,CAAC,MAAM,CAAC,MAAM;AAC7B;AAEA;;;;CAIC,GACD,SAAS,QAAQ,KAAK;IACrB,MAAM,OAAO,uHAAA,CAAA,UAAO,CAAC,MAAM,CAAC,MAAM,KAAK;IAEvC,OAAO,OAAO,QAAQ;AACvB;AAEA,MAAM,UAAU;IAAC;IAAK;IAAQ;IAAa;CAAW;AAEtD;;;CAGC,GACD,SAAS;IACR,MAAM,SAAS,uHAAA,CAAA,UAAO,CAAC,GAAG,CAAC,MAAM;IAEjC,IAAI,OAAO,WAAW,aAAa;QAClC,OAAO;IACR;IAEA,IAAI,OAAO,WAAW,OAAO,OAAO;QACnC,OAAO,OAAO,iBAAiB;IAChC;IAEA,MAAM,SAAS,OAAO,QAAQ,CAAC,QAAQ;IAEvC,IAAI,CAAC,OAAO,KAAK,CAAC,WAAW,UAAU,GAAG;QACzC,OAAO;IACR;IAEA,OAAO;AACR;AAEA,MAAM,WAAW;AACjB,MAAM,UAAU,aAAa;AAE7B,6CAA6C,GAC7C,MAAM,cAAc;IACnB,SAAS;QACR;YAAE,WAAW;QAAQ;QACrB;YAAE,WAAW;QAAO;QACpB;YAAE,WAAW;QAAQ;QACrB;YAAE,WAAW;QAAQ;KACrB;AACF;AAEA;;;;;CAKC,GACD,SAAS,QAAQ,IAAI;IACpB,IAAI,QAAQ;IAEZ,oCAAoC,GACpC,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACnC,MAAM,IAAI,IAAI,CAAC,IAAI,IAAI;QAEvB,SAAS;QAET,OAAO;YAAC;YAAK;SAAE;IAChB;IAEA,KAAK,IAAI,CAAC,CAAC,GAAG,IAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IAC/B,MAAM,cAAc,KAAK,KAAK,CAAC,GAAG;IAElC,+BAA+B;IAC/B,MAAM,gBAAgB,YAAY,GAAG,CAAC,CAAC,KAAK;QAC3C,MAAM,aAAa,QAAQ,IAAI,GAAG,CAAC,AAAC,GAAG,CAAC,EAAE,GAAG,MAAO,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG;QAC3E,MAAM,UAAU,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;QAE/B,OAAO;YAAC,QAAQ;YAAG,GAAG,CAAC,EAAE;YAAE;YAAS;SAAW;IAChD;IAEA,cAAc,OAAO,CAAC;IAEtB,sCAAsC;IACtC,QAAQ,GAAG,CAAC,CAAA,GAAA,+IAAA,CAAA,QAAK,AAAD,EAAE,eAAe;AAClC;AAEA,sCAAsC,GACtC,MAAM,OAAO,OAAO,MAAM,CAAC;AAE3B;;;;;;CAMC,GACD,SAAS,KAAK,GAAG,EAAE,EAAE;IACpB,OAAO,SAAS,cAAc,gBAAgB,GAAG,GAAG,IAAI;QACvD,MAAM,IAAI;QACV,MAAM,SAAS,MAAM;QACrB,MAAM,WAAW,QAAQ;QAEzB,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI;QAE/B,OAAO;IACR;AACD;AAEA,IAAI,SAAS;IACZ,uHAAA,CAAA,UAAO,CAAC,EAAE,CAAC,QAAQ;QAClB,QAAQ;IACT;AACD;uCAEe;IACd;IACA;IACA;IACA;IACA;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3721, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/lintPostcssResult.mjs"],"sourcesContent":["import { EOL } from 'node:os';\n\nimport { DEFAULT_SEVERITY, RULE_NAME_ALL } from './constants.mjs';\nimport { DEFAULT_CONFIGURATION_COMMENT } from './utils/configurationComment.mjs';\nimport assignDisabledRanges from './assignDisabledRanges.mjs';\nimport emitDeprecationWarning from './utils/emitDeprecationWarning.mjs';\nimport { fork } from 'css-tree';\nimport getStylelintRule from './utils/getStylelintRule.mjs';\nimport reportUnknownRuleNames from './reportUnknownRuleNames.mjs';\nimport rules from './rules/index.mjs';\nimport timing from './timing.mjs';\n\n/** @import {Config, LinterOptions, PostcssResult} from 'stylelint' */\n\n/**\n * @param {LinterOptions} stylelintOptions\n * @param {PostcssResult} postcssResult\n * @param {Config} config\n * @returns {Promise<any>}\n */\nexport default async function lintPostcssResult(stylelintOptions, postcssResult, config) {\n\tpostcssResult.stylelint.stylelintError = false;\n\tpostcssResult.stylelint.stylelintWarning = false;\n\tpostcssResult.stylelint.quiet = config.quiet;\n\tpostcssResult.stylelint.quietDeprecationWarnings = stylelintOptions.quietDeprecationWarnings;\n\tpostcssResult.stylelint.config = config;\n\n\tconst postcssDoc = postcssResult.root;\n\n\tif (!('type' in postcssDoc)) {\n\t\tthrow new Error('Unexpected Postcss root object!');\n\t}\n\n\tconst newlineMatch = postcssDoc.source?.input.css.match(/\\r?\\n/);\n\tconst newline = newlineMatch ? newlineMatch[0] : EOL;\n\tconst configurationComment = config.configurationComment || DEFAULT_CONFIGURATION_COMMENT;\n\tconst ctx = { configurationComment, newline };\n\n\tassignDisabledRanges(postcssDoc, postcssResult);\n\n\tconst postcssRoots = /** @type {import('postcss').Root[]} */ (\n\t\tpostcssDoc && postcssDoc.constructor.name === 'Document' ? postcssDoc.nodes : [postcssDoc]\n\t);\n\n\t// Promises for the rules. Although the rule code runs synchronously now,\n\t// the use of Promises makes it compatible with the possibility of async\n\t// rules down the line.\n\t/** @type {Array<Promise<any>>} */\n\tconst performRules = [];\n\n\tconst rulesOrder = Object.keys(rules);\n\tconst ruleNames = config.rules\n\t\t? Object.keys(config.rules).sort((a, b) => rulesOrder.indexOf(a) - rulesOrder.indexOf(b))\n\t\t: [];\n\n\tfor (const ruleName of ruleNames) {\n\t\tconst ruleFunction = await getStylelintRule(ruleName, config);\n\n\t\tif (ruleFunction === undefined) {\n\t\t\tperformRules.push(\n\t\t\t\tPromise.all(\n\t\t\t\t\tpostcssRoots.map((postcssRoot) =>\n\t\t\t\t\t\treportUnknownRuleNames(ruleName, postcssRoot, postcssResult),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst ruleSettings = config.rules?.[ruleName];\n\n\t\tif (ruleSettings === null || ruleSettings[0] === null) continue;\n\n\t\tif (ruleFunction.meta?.deprecated && !stylelintOptions.quietDeprecationWarnings) {\n\t\t\twarnDeprecatedRule(postcssResult, ruleName);\n\t\t}\n\n\t\tconst primaryOption = ruleSettings[0];\n\t\tconst secondaryOptions = ruleSettings[1];\n\n\t\t// Log the rule's severity in the PostCSS result\n\t\tconst defaultSeverity = config.defaultSeverity || DEFAULT_SEVERITY;\n\n\t\tpostcssResult.stylelint.ruleSeverities[ruleName] =\n\t\t\t(secondaryOptions && secondaryOptions.severity) || defaultSeverity;\n\t\tpostcssResult.stylelint.customMessages[ruleName] = secondaryOptions && secondaryOptions.message;\n\t\tpostcssResult.stylelint.customUrls[ruleName] = secondaryOptions && secondaryOptions.url;\n\t\tpostcssResult.stylelint.ruleMetadata[ruleName] = ruleFunction.meta || {};\n\n\t\tconst shouldWarn = ruleFunction.meta?.fixable && !stylelintOptions.quietDeprecationWarnings;\n\t\tconst disableFix = secondaryOptions?.disableFix === true;\n\t\tconst fix = !disableFix && config.fix && isFixCompatible(postcssResult, ruleName);\n\t\tconst lexer = getCachedLexer(config);\n\t\tconst context = {\n\t\t\t...ctx,\n\t\t\tlexer,\n\t\t\t// context.fix is unlikely to be removed in the foreseeable future\n\t\t\t// due to the sheer number of rules in the wild that rely on it\n\t\t\tget fix() {\n\t\t\t\tif (shouldWarn) {\n\t\t\t\t\temitDeprecationWarning(\n\t\t\t\t\t\t'`context.fix` is being deprecated.',\n\t\t\t\t\t\t'CONTEXT_FIX',\n\t\t\t\t\t\t`Please pass a \\`fix\\` callback to the \\`report\\` utility of \"${ruleName}\" instead.`,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn fix;\n\t\t\t},\n\t\t};\n\n\t\tconst ruleFn = ruleFunction(primaryOption, secondaryOptions, context);\n\n\t\t/**\n\t\t * @param {import('postcss').Root} postcssRoot\n\t\t */\n\t\tasync function runRule(postcssRoot) {\n\t\t\tif (timing.enabled) {\n\t\t\t\treturn timing.time(ruleName, () => ruleFn(postcssRoot, postcssResult))();\n\t\t\t}\n\n\t\t\treturn ruleFn(postcssRoot, postcssResult);\n\t\t}\n\n\t\tperformRules.push(Promise.all(postcssRoots.map(runRule)));\n\t}\n\n\treturn Promise.all(performRules);\n}\n\n/**\n * using context.fix instead of the fix callback has the drawback\n * of not honouring the configuration comments in subtle ways\n * @see file://./../docs/user-guide/options.md#fix for details\n * @param {PostcssResult} postcssResult\n * @param {string} name\n * @returns {boolean}\n */\nfunction isFixCompatible({ stylelint: { disabledRanges } }, name) {\n\treturn !disabledRanges[RULE_NAME_ALL]?.length && !disabledRanges[name];\n}\n\n/**\n * @param {PostcssResult} result\n * @param {string} ruleName\n * @returns {void}\n */\nfunction warnDeprecatedRule(result, ruleName) {\n\tconst message = `The \"${ruleName}\" rule is deprecated.`;\n\n\temitDeprecationWarning(\n\t\tmessage,\n\t\t'RULE',\n\t\t`Please be aware that the \"${ruleName}\" rule will soon be either removed or renamed.`,\n\t);\n\n\tresult.warn(message, { stylelintType: 'deprecation' });\n}\n\nconst lexerCache = new Map();\n\n/**\n * @param {Config} config\n * @returns {import('css-tree').Lexer}\n * */\nfunction getCachedLexer(config) {\n\tconst cacheKey = JSON.stringify(config.languageOptions?.syntax || {});\n\n\tif (lexerCache.has(cacheKey)) {\n\t\treturn lexerCache.get(cacheKey);\n\t}\n\n\tconst newLexer = fork({\n\t\tatrules: config.languageOptions?.syntax?.atRules || {},\n\t\tproperties: config.languageOptions?.syntax?.properties || {},\n\t\ttypes: config.languageOptions?.syntax?.types || {},\n\t\tcssWideKeywords: config.languageOptions?.syntax?.cssWideKeywords || [],\n\t}).lexer;\n\n\tlexerCache.set(cacheKey, newLexer);\n\n\treturn newLexer;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3865, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/putIfAbsent.mjs"],"sourcesContent":["/**\n * If `map` already has the given `key`, returns its value. Otherwise, calls\n * `callback`, adds the result to `map` at `key`, and then returns it.\n *\n * @template K\n * @template V\n * @param {Map<K, V>} map\n * @param {K} key\n * @param {() => V} callback\n * @returns {V}\n */\nexport default function putIfAbsent(map, key, callback) {\n\tif (map.has(key)) return /** @type {V} */ (map.get(key));\n\n\tconst value = callback();\n\n\tmap.set(key, value);\n\n\treturn value;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;;;AACc,SAAS,YAAY,GAAG,EAAE,GAAG,EAAE,QAAQ;IACrD,IAAI,IAAI,GAAG,CAAC,MAAM,OAAyB,IAAI,GAAG,CAAC;IAEnD,MAAM,QAAQ;IAEd,IAAI,GAAG,CAAC,KAAK;IAEb,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3890, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/needlessDisables.mjs"],"sourcesContent":["import { RULE_NAME_ALL } from './constants.mjs';\n\nimport optionsMatches from './utils/optionsMatches.mjs';\nimport putIfAbsent from './utils/putIfAbsent.mjs';\nimport reportCommentProblem from './utils/reportCommentProblem.mjs';\nimport validateDisableSettings from './validateDisableSettings.mjs';\n\n/**\n * @param {import('stylelint').PostcssResult} postcssResult\n * @returns {void}\n */\nexport default function needlessDisables(postcssResult) {\n\tconst [enabled, options] = validateDisableSettings(postcssResult, 'reportNeedlessDisables');\n\n\tif (!options) return;\n\n\tconst {\n\t\tdisabledRanges,\n\t\tdisabledRanges: { [RULE_NAME_ALL]: disabledRangesAll = [] },\n\t\tdisabledWarnings = [],\n\t} = postcssResult.stylelint;\n\n\t// A map from `stylelint-disable` comments to the set of rules that\n\t// are usefully disabled by each comment. We track this\n\t// comment-by-comment rather than range-by-range because ranges that\n\t// disable *all* rules are duplicated for each rule they apply to in\n\t// practice.\n\t/** @type {Map<import('postcss').Node, Set<string>>}} */\n\tconst usefulDisables = new Map();\n\n\tfor (const warning of disabledWarnings) {\n\t\tconst rule = warning.rule;\n\t\tconst ruleRanges = disabledRanges[rule];\n\n\t\tif (ruleRanges) {\n\t\t\tfor (const range of ruleRanges) {\n\t\t\t\tif (isWarningInRange(warning, range)) {\n\t\t\t\t\tputIfAbsent(usefulDisables, range.node, () => new Set()).add(rule);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const range of disabledRangesAll) {\n\t\t\tif (isWarningInRange(warning, range)) {\n\t\t\t\tputIfAbsent(usefulDisables, range.node, () => new Set()).add(rule);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst allRangeNodes = new Set(disabledRangesAll.map((range) => range.node));\n\n\tfor (const [rule, ranges] of Object.entries(disabledRanges)) {\n\t\tfor (const range of ranges) {\n\t\t\tconst node = range.node;\n\n\t\t\tif (rule !== RULE_NAME_ALL && allRangeNodes.has(node)) continue;\n\n\t\t\tif (enabled === optionsMatches(options, 'except', rule)) continue;\n\n\t\t\tconst useful = usefulDisables.get(node) || new Set();\n\n\t\t\t// Only emit a warning if this range's comment isn't useful for this rule.\n\t\t\t// For the special rule \"all\", only emit a warning if it's not useful for\n\t\t\t// *any* rules, because it covers all of them.\n\t\t\tif (rule === RULE_NAME_ALL ? useful.size !== 0 : useful.has(rule)) continue;\n\n\t\t\treportCommentProblem({\n\t\t\t\trule: '--report-needless-disables',\n\t\t\t\tmessage: `Needless disable for \"${rule}\"`,\n\t\t\t\tseverity: options.severity,\n\t\t\t\tnode,\n\t\t\t\tpostcssResult,\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @param {import('stylelint').DisabledWarning} warning\n * @param {import('stylelint').DisabledRange} range\n * @returns {boolean}\n */\nfunction isWarningInRange(warning, range) {\n\tconst line = warning.line;\n\n\t// Need to check if range.end exist, because line number type cannot be compared to undefined\n\treturn (\n\t\trange.start <= line &&\n\t\t((range.end !== undefined && range.end >= line) || range.end === undefined)\n\t);\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;;;;;;AAMe,SAAS,iBAAiB,aAAa;IACrD,MAAM,CAAC,SAAS,QAAQ,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAuB,AAAD,EAAE,eAAe;IAElE,IAAI,CAAC,SAAS;IAEd,MAAM,EACL,cAAc,EACd,gBAAgB,EAAE,CAAC,gJAAA,CAAA,gBAAa,CAAC,EAAE,oBAAoB,EAAE,EAAE,EAC3D,mBAAmB,EAAE,EACrB,GAAG,cAAc,SAAS;IAE3B,mEAAmE;IACnE,uDAAuD;IACvD,oEAAoE;IACpE,oEAAoE;IACpE,YAAY;IACZ,sDAAsD,GACtD,MAAM,iBAAiB,IAAI;IAE3B,KAAK,MAAM,WAAW,iBAAkB;QACvC,MAAM,OAAO,QAAQ,IAAI;QACzB,MAAM,aAAa,cAAc,CAAC,KAAK;QAEvC,IAAI,YAAY;YACf,KAAK,MAAM,SAAS,WAAY;gBAC/B,IAAI,iBAAiB,SAAS,QAAQ;oBACrC,CAAA,GAAA,2JAAA,CAAA,UAAW,AAAD,EAAE,gBAAgB,MAAM,IAAI,EAAE,IAAM,IAAI,OAAO,GAAG,CAAC;gBAC9D;YACD;QACD;QAEA,KAAK,MAAM,SAAS,kBAAmB;YACtC,IAAI,iBAAiB,SAAS,QAAQ;gBACrC,CAAA,GAAA,2JAAA,CAAA,UAAW,AAAD,EAAE,gBAAgB,MAAM,IAAI,EAAE,IAAM,IAAI,OAAO,GAAG,CAAC;YAC9D;QACD;IACD;IAEA,MAAM,gBAAgB,IAAI,IAAI,kBAAkB,GAAG,CAAC,CAAC,QAAU,MAAM,IAAI;IAEzE,KAAK,MAAM,CAAC,MAAM,OAAO,IAAI,OAAO,OAAO,CAAC,gBAAiB;QAC5D,KAAK,MAAM,SAAS,OAAQ;YAC3B,MAAM,OAAO,MAAM,IAAI;YAEvB,IAAI,SAAS,gJAAA,CAAA,gBAAa,IAAI,cAAc,GAAG,CAAC,OAAO;YAEvD,IAAI,YAAY,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE,SAAS,UAAU,OAAO;YAEzD,MAAM,SAAS,eAAe,GAAG,CAAC,SAAS,IAAI;YAE/C,0EAA0E;YAC1E,yEAAyE;YACzE,8CAA8C;YAC9C,IAAI,SAAS,gJAAA,CAAA,gBAAa,GAAG,OAAO,IAAI,KAAK,IAAI,OAAO,GAAG,CAAC,OAAO;YAEnE,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE;gBACpB,MAAM;gBACN,SAAS,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;gBACzC,UAAU,QAAQ,QAAQ;gBAC1B;gBACA;YACD;QACD;IACD;AACD;AAEA;;;;CAIC,GACD,SAAS,iBAAiB,OAAO,EAAE,KAAK;IACvC,MAAM,OAAO,QAAQ,IAAI;IAEzB,6FAA6F;IAC7F,OACC,MAAM,KAAK,IAAI,QACf,CAAC,AAAC,MAAM,GAAG,KAAK,aAAa,MAAM,GAAG,IAAI,QAAS,MAAM,GAAG,KAAK,SAAS;AAE5E","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3965, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/reportDisables.mjs"],"sourcesContent":["import { SEVERITY_ERROR } from './constants.mjs';\nimport reportCommentProblem from './utils/reportCommentProblem.mjs';\n\n/**\n * Returns a report describing which `results` (if any) contain disabled ranges\n * for rules that disallow disables via `reportDisables: true`.\n *\n * @param {import('stylelint').PostcssResult} postcssResult\n * @returns {void}\n */\nexport default function reportDisables(postcssResult) {\n\tconst rangeData = postcssResult.stylelint.disabledRanges;\n\tconst configRules = postcssResult.stylelint.config?.rules;\n\n\tif (!configRules) return;\n\n\t// If no rules actually disallow disables, don't bother looking for ranges\n\t// that correspond to disabled rules.\n\tif (!Object.values(configRules).some((rule) => reportDisablesForRule(rule))) {\n\t\treturn;\n\t}\n\n\tfor (const [rule, ranges] of Object.entries(rangeData)) {\n\t\tfor (const range of ranges) {\n\t\t\tif (!configRules[rule]) continue;\n\n\t\t\tif (!reportDisablesForRule(configRules[rule])) continue;\n\n\t\t\treportCommentProblem({\n\t\t\t\trule: 'reportDisables',\n\t\t\t\tmessage: `Rule \"${rule}\" may not be disabled`,\n\t\t\t\tseverity: SEVERITY_ERROR,\n\t\t\t\tnode: range.node,\n\t\t\t\tpostcssResult,\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @param {import('stylelint').ConfigRuleSettings<any, object>} options\n * @returns {boolean}\n */\nfunction reportDisablesForRule(options) {\n\tif (!options || !options[1]) return false;\n\n\treturn Boolean(options[1].reportDisables);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AASe,SAAS,eAAe,aAAa;IACnD,MAAM,YAAY,cAAc,SAAS,CAAC,cAAc;IACxD,MAAM,cAAc,cAAc,SAAS,CAAC,MAAM,EAAE;IAEpD,IAAI,CAAC,aAAa;IAElB,0EAA0E;IAC1E,qCAAqC;IACrC,IAAI,CAAC,OAAO,MAAM,CAAC,aAAa,IAAI,CAAC,CAAC,OAAS,sBAAsB,QAAQ;QAC5E;IACD;IAEA,KAAK,MAAM,CAAC,MAAM,OAAO,IAAI,OAAO,OAAO,CAAC,WAAY;QACvD,KAAK,MAAM,SAAS,OAAQ;YAC3B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YAExB,IAAI,CAAC,sBAAsB,WAAW,CAAC,KAAK,GAAG;YAE/C,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE;gBACpB,MAAM;gBACN,SAAS,CAAC,MAAM,EAAE,KAAK,qBAAqB,CAAC;gBAC7C,UAAU,gJAAA,CAAA,iBAAc;gBACxB,MAAM,MAAM,IAAI;gBAChB;YACD;QACD;IACD;AACD;AAEA;;;CAGC,GACD,SAAS,sBAAsB,OAAO;IACrC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO;IAEpC,OAAO,QAAQ,OAAO,CAAC,EAAE,CAAC,cAAc;AACzC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4008, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/unscopedDisables.mjs"],"sourcesContent":["import { RULE_NAME_ALL } from './constants.mjs';\n\nimport optionsMatches from './utils/optionsMatches.mjs';\nimport reportCommentProblem from './utils/reportCommentProblem.mjs';\nimport validateDisableSettings from './validateDisableSettings.mjs';\n\n/** @typedef {import('postcss').Node} Node */\n\n/** @param {import('stylelint').PostcssResult} postcssResult */\nexport default function reportUnscopedDisables(postcssResult) {\n\tconst [enabled, options] = validateDisableSettings(postcssResult, 'reportUnscopedDisables');\n\n\tif (!options) return;\n\n\tconst isDisabled = !enabled && !options.except.length;\n\n\tif (isDisabled) return;\n\n\tconst stylelint = postcssResult.stylelint;\n\tconst unscopedComments = stylelint.disabledRanges[RULE_NAME_ALL];\n\n\tif (!unscopedComments) return;\n\n\t/** @param {Node} node */\n\tconst report = (node) => {\n\t\treportCommentProblem({\n\t\t\trule: '--report-unscoped-disables',\n\t\t\tmessage: `Configuration comment must be scoped`,\n\t\t\tseverity: options.severity,\n\t\t\tnode,\n\t\t\tpostcssResult,\n\t\t});\n\t};\n\n\tconst hasExceptions = options.except.length;\n\n\tif (hasExceptions && !enabled) {\n\t\tconst configRules = stylelint.config?.rules;\n\n\t\tif (!configRules) return;\n\n\t\tconst warnings = stylelint.disabledWarnings;\n\n\t\tif (!warnings) return;\n\n\t\t/** @type {Set<Node>} */\n\t\tconst alreadyReported = new Set();\n\n\t\tfor (const { line, rule } of warnings) {\n\t\t\tconst isException = optionsMatches(options, 'except', rule);\n\n\t\t\tif (!isException) continue;\n\n\t\t\tfor (const { start, end, node } of unscopedComments) {\n\t\t\t\tif (alreadyReported.has(node)) continue;\n\n\t\t\t\tif (start <= line && (end === undefined || end >= line)) {\n\t\t\t\t\treport(node);\n\t\t\t\t\talreadyReported.add(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (enabled) {\n\t\tfor (const { node } of unscopedComments) report(node);\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AACA;AACA;;;;;AAKe,SAAS,uBAAuB,aAAa;IAC3D,MAAM,CAAC,SAAS,QAAQ,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAuB,AAAD,EAAE,eAAe;IAElE,IAAI,CAAC,SAAS;IAEd,MAAM,aAAa,CAAC,WAAW,CAAC,QAAQ,MAAM,CAAC,MAAM;IAErD,IAAI,YAAY;IAEhB,MAAM,YAAY,cAAc,SAAS;IACzC,MAAM,mBAAmB,UAAU,cAAc,CAAC,gJAAA,CAAA,gBAAa,CAAC;IAEhE,IAAI,CAAC,kBAAkB;IAEvB,uBAAuB,GACvB,MAAM,SAAS,CAAC;QACf,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE;YACpB,MAAM;YACN,SAAS,CAAC,oCAAoC,CAAC;YAC/C,UAAU,QAAQ,QAAQ;YAC1B;YACA;QACD;IACD;IAEA,MAAM,gBAAgB,QAAQ,MAAM,CAAC,MAAM;IAE3C,IAAI,iBAAiB,CAAC,SAAS;QAC9B,MAAM,cAAc,UAAU,MAAM,EAAE;QAEtC,IAAI,CAAC,aAAa;QAElB,MAAM,WAAW,UAAU,gBAAgB;QAE3C,IAAI,CAAC,UAAU;QAEf,sBAAsB,GACtB,MAAM,kBAAkB,IAAI;QAE5B,KAAK,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,SAAU;YACtC,MAAM,cAAc,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE,SAAS,UAAU;YAEtD,IAAI,CAAC,aAAa;YAElB,KAAK,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,iBAAkB;gBACpD,IAAI,gBAAgB,GAAG,CAAC,OAAO;gBAE/B,IAAI,SAAS,QAAQ,CAAC,QAAQ,aAAa,OAAO,IAAI,GAAG;oBACxD,OAAO;oBACP,gBAAgB,GAAG,CAAC;gBACrB;YACD;QACD;IACD,OAAO,IAAI,SAAS;QACnB,KAAK,MAAM,EAAE,IAAI,EAAE,IAAI,iBAAkB,OAAO;IACjD;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4064, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/lintSource.mjs"],"sourcesContent":["import { isAbsolute } from 'node:path';\n\nimport postcss from 'postcss';\n\nimport descriptionlessDisables from './descriptionlessDisables.mjs';\nimport getConfigForFile from './getConfigForFile.mjs';\nimport getPostcssResult from './getPostcssResult.mjs';\nimport invalidScopeDisables from './invalidScopeDisables.mjs';\nimport isPathIgnored from './isPathIgnored.mjs';\nimport isPathNotFoundError from './utils/isPathNotFoundError.mjs';\nimport lintPostcssResult from './lintPostcssResult.mjs';\nimport needlessDisables from './needlessDisables.mjs';\nimport reportDisables from './reportDisables.mjs';\nimport reportUnscopedDisables from './unscopedDisables.mjs';\n\n/** @import {Result} from 'postcss' */\n/** @import {GetLintSourceOptions as Options, InternalApi as StylelintInternalApi, PostcssResult, StylelintPostcssResult} from 'stylelint' */\n\n/**\n * Run stylelint on a PostCSS Result, either one that is provided\n * or one that we create\n * @param {StylelintInternalApi} stylelint\n * @param {Options} options\n * @returns {Promise<PostcssResult>}\n */\nexport default async function lintSource(stylelint, options = {}) {\n\tif (!options.filePath && options.code === undefined && !options.existingPostcssResult) {\n\t\treturn Promise.reject(new Error('You must provide filePath, code, or existingPostcssResult'));\n\t}\n\n\tconst isCodeNotFile = options.code !== undefined;\n\n\tconst inputFilePath = isCodeNotFile ? options.codeFilename : options.filePath;\n\n\tif (inputFilePath !== undefined && !isAbsolute(inputFilePath)) {\n\t\tif (isCodeNotFile) {\n\t\t\treturn Promise.reject(new Error('codeFilename must be an absolute path'));\n\t\t}\n\n\t\treturn Promise.reject(new Error('filePath must be an absolute path'));\n\t}\n\n\tconst isIgnored = await isPathIgnored(stylelint, inputFilePath).catch((err) => {\n\t\tif (isCodeNotFile && isPathNotFoundError(err)) return false;\n\n\t\tthrow err;\n\t});\n\n\tif (isIgnored) {\n\t\treturn createEmptyPostcssResult(inputFilePath, options.existingPostcssResult);\n\t}\n\n\tconst configSearchPath = stylelint._options.configFile || inputFilePath;\n\tconst cwd = stylelint._options.cwd;\n\n\tlet configForFile;\n\n\ttry {\n\t\tconfigForFile = await getConfigForFile(stylelint, configSearchPath, inputFilePath);\n\t} catch (err) {\n\t\tif (isCodeNotFile && isPathNotFoundError(err)) {\n\t\t\tconfigForFile = await getConfigForFile(stylelint, cwd);\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tif (!configForFile) {\n\t\treturn Promise.reject(new Error('Config file not found'));\n\t}\n\n\tconst config = configForFile.config;\n\tconst existingPostcssResult = options.existingPostcssResult;\n\n\tif (options.cache) {\n\t\tstylelint._fileCache.calcHashOfConfig(config);\n\n\t\tif (options.filePath && !stylelint._fileCache.hasFileChanged(options.filePath)) {\n\t\t\treturn createEmptyPostcssResult(inputFilePath, existingPostcssResult);\n\t\t}\n\t}\n\n\tconst postcssResult =\n\t\texistingPostcssResult ||\n\t\t(await getPostcssResult(stylelint, {\n\t\t\tcode: options.code,\n\t\t\tcodeFilename: options.codeFilename,\n\t\t\tfilePath: inputFilePath,\n\t\t\tcustomSyntax: config.customSyntax,\n\t\t}));\n\n\tconst stylelintPostcssResult = Object.assign(postcssResult, {\n\t\tstylelint: {\n\t\t\truleSeverities: {},\n\t\t\tcustomMessages: {},\n\t\t\tcustomUrls: {},\n\t\t\truleMetadata: {},\n\t\t\tfixersData: {},\n\t\t\trangesOfComputedEditInfos: [],\n\t\t\tdisabledRanges: {},\n\t\t},\n\t});\n\n\tawait lintPostcssResult(stylelint._options, stylelintPostcssResult, config);\n\n\treportDisables(stylelintPostcssResult);\n\tneedlessDisables(stylelintPostcssResult);\n\tinvalidScopeDisables(stylelintPostcssResult);\n\tdescriptionlessDisables(stylelintPostcssResult);\n\treportUnscopedDisables(stylelintPostcssResult);\n\n\treturn stylelintPostcssResult;\n}\n\n/**\n * @returns {StylelintPostcssResult}\n */\nfunction createEmptyStylelintPostcssResult() {\n\treturn {\n\t\truleSeverities: {},\n\t\tcustomMessages: {},\n\t\tcustomUrls: {},\n\t\truleMetadata: {},\n\t\tfixersData: {},\n\t\trangesOfComputedEditInfos: [],\n\t\tdisabledRanges: {},\n\t\tignored: true,\n\t\tstylelintError: false,\n\t\tstylelintWarning: false,\n\t};\n}\n\n/**\n * @param {string | undefined} filePath\n * @param {Options['existingPostcssResult']} existingPostcssResult\n * @returns {PostcssResult}\n */\nfunction createEmptyPostcssResult(filePath, existingPostcssResult) {\n\treturn Object.assign(existingPostcssResult ?? postcss().process('', { from: filePath }).sync(), {\n\t\tstylelint: createEmptyStylelintPostcssResult(),\n\t});\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4197, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/postcssPlugin.mjs"],"sourcesContent":["import { isAbsolute, join } from 'node:path';\nimport process from 'node:process';\n\nimport createStylelint from './createStylelint.mjs';\nimport { isString } from './utils/validateTypes.mjs';\nimport lintSource from './lintSource.mjs';\n\n/** @import {Config as StylelintConfig, PostcssPluginOptions} from 'stylelint' */\n\n/**\n * @type {import('postcss').PluginCreator<PostcssPluginOptions>}\n */\nexport default function postcssPlugin(options = {}) {\n\tconst [cwd, tailoredOptions] = isConfig(options)\n\t\t? [process.cwd(), { config: options }]\n\t\t: [('cwd' in options && isString(options.cwd) && options.cwd) || process.cwd(), options];\n\tconst stylelint = createStylelint(tailoredOptions);\n\n\treturn {\n\t\tpostcssPlugin: 'stylelint',\n\n\t\t/**\n\t\t * @param {import('postcss').Root} root\n\t\t * @param {import('postcss').Helpers} helpers\n\t\t * @returns {Promise<void>}\n\t\t */\n\t\tasync Once(root, { result }) {\n\t\t\tlet filePath = root.source && root.source.input.file;\n\n\t\t\tif (filePath && !isAbsolute(filePath)) {\n\t\t\t\tfilePath = join(cwd, filePath);\n\t\t\t}\n\n\t\t\tawait lintSource(stylelint, {\n\t\t\t\tfilePath,\n\t\t\t\texistingPostcssResult: result,\n\t\t\t});\n\t\t},\n\t};\n}\n\npostcssPlugin.postcss = true;\n\n/**\n * @param {PostcssPluginOptions} options\n * @returns {options is StylelintConfig}\n */\nfunction isConfig(options) {\n\treturn 'rules' in options;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;AAOe,SAAS,cAAc,UAAU,CAAC,CAAC;IACjD,MAAM,CAAC,KAAK,gBAAgB,GAAG,SAAS,WACrC;QAAC,uHAAA,CAAA,UAAO,CAAC,GAAG;QAAI;YAAE,QAAQ;QAAQ;KAAE,GACpC;QAAE,SAAS,WAAW,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,GAAG,KAAK,QAAQ,GAAG,IAAK,uHAAA,CAAA,UAAO,CAAC,GAAG;QAAI;KAAQ;IACzF,MAAM,YAAY,CAAA,GAAA,sJAAA,CAAA,UAAe,AAAD,EAAE;IAElC,OAAO;QACN,eAAe;QAEf;;;;GAIC,GACD,MAAM,MAAK,IAAI,EAAE,EAAE,MAAM,EAAE;YAC1B,IAAI,WAAW,KAAK,MAAM,IAAI,KAAK,MAAM,CAAC,KAAK,CAAC,IAAI;YAEpD,IAAI,YAAY,CAAC,CAAA,GAAA,iHAAA,CAAA,aAAU,AAAD,EAAE,WAAW;gBACtC,WAAW,CAAA,GAAA,iHAAA,CAAA,OAAI,AAAD,EAAE,KAAK;YACtB;YAEA,MAAM,CAAA,GAAA,iJAAA,CAAA,UAAU,AAAD,EAAE,WAAW;gBAC3B;gBACA,uBAAuB;YACxB;QACD;IACD;AACD;AAEA,cAAc,OAAO,GAAG;AAExB;;;CAGC,GACD,SAAS,SAAS,OAAO;IACxB,OAAO,WAAW;AACnB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4258, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/addSemicolonForEditInfo.mjs"],"sourcesContent":["/** @import { Node as PostcssNode } from 'postcss' */\nimport { isAtRule } from './typeGuards.mjs';\n\n/**\n * Adjust the text in EditInfo to include a semicolon when needed.\n *\n * @param {PostcssNode} node\n * @param {{range: [number, number], text: string}} fixData\n * @returns {{range: [number, number], text: string}}\n */\nexport default function addSemicolonForEditInfo(node, fixData) {\n\tconst { parent } = node;\n\n\tif (!parent) return fixData;\n\n\tif (node.type === 'decl') {\n\t\tif (parent.raws.semicolon || parent.last !== node) {\n\t\t\treturn {\n\t\t\t\t...fixData,\n\t\t\t\ttext: `${fixData.text};`,\n\t\t\t};\n\t\t}\n\t}\n\n\tif (isAtRule(node)) {\n\t\tif (!node.nodes && (parent.raws.semicolon || parent.last !== node)) {\n\t\t\treturn {\n\t\t\t\t...fixData,\n\t\t\t\ttext: `${fixData.text};`,\n\t\t\t};\n\t\t}\n\t}\n\n\treturn fixData;\n}\n"],"names":[],"mappings":"AAAA,mDAAmD;;;AACnD;;AASe,SAAS,wBAAwB,IAAI,EAAE,OAAO;IAC5D,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,IAAI,CAAC,QAAQ,OAAO;IAEpB,IAAI,KAAK,IAAI,KAAK,QAAQ;QACzB,IAAI,OAAO,IAAI,CAAC,SAAS,IAAI,OAAO,IAAI,KAAK,MAAM;YAClD,OAAO;gBACN,GAAG,OAAO;gBACV,MAAM,GAAG,QAAQ,IAAI,CAAC,CAAC,CAAC;YACzB;QACD;IACD;IAEA,IAAI,CAAA,GAAA,0JAAA,CAAA,WAAQ,AAAD,EAAE,OAAO;QACnB,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,OAAO,IAAI,CAAC,SAAS,IAAI,OAAO,IAAI,KAAK,IAAI,GAAG;YACnE,OAAO;gBACN,GAAG,OAAO;gBACV,MAAM,GAAG,QAAQ,IAAI,CAAC,CAAC,CAAC;YACzB;QACD;IACD;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4290, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/narrowFixRange.mjs"],"sourcesContent":["/** @import { Node as PostcssNode } from 'postcss' */\n\n/**\n * Make a fix range as narrow as possible by trimming common prefixes and suffixes\n *\n * @param {PostcssNode} node\n * @param {{range: [number, number], text: string}} fixData\n * @returns {{range: [number, number], text: string}}\n */\nexport default function narrowFixRange(node, fixData) {\n\tif (!node.source) {\n\t\treturn fixData;\n\t}\n\n\tlet startOffset = fixData.range[0];\n\tlet endOffset = fixData.range[1];\n\n\tconst stringRepresentation = node.source.input.css.slice(startOffset, endOffset);\n\n\tlet replacementStartOffset = 0;\n\n\tfor (let i = 0; i < stringRepresentation.length; i++) {\n\t\tconst a = stringRepresentation[i];\n\t\tconst b = fixData.text[i];\n\n\t\tif (a !== b) break;\n\n\t\tstartOffset++;\n\t\treplacementStartOffset++;\n\t}\n\n\tlet replacementEndOffset = fixData.text.length;\n\n\tfor (let i = 0; i < stringRepresentation.length; i++) {\n\t\tconst ia = stringRepresentation.length - 1 - i;\n\n\t\tif (ia < replacementStartOffset) break;\n\n\t\tconst a = stringRepresentation[ia];\n\n\t\tconst ib = fixData.text.length - 1 - i;\n\n\t\tif (ib < replacementStartOffset) break;\n\n\t\tconst b = fixData.text[ib];\n\n\t\tif (a !== b) break;\n\n\t\tendOffset--;\n\t\treplacementEndOffset--;\n\t}\n\n\t// Try to have a context size of at least 1\n\tif (startOffset === endOffset) {\n\t\tif (startOffset > fixData.range[0]) {\n\t\t\tstartOffset--;\n\t\t\treplacementStartOffset--;\n\t\t} else if (endOffset < fixData.range[1]) {\n\t\t\tendOffset++;\n\t\t\treplacementEndOffset++;\n\t\t}\n\t}\n\n\treturn {\n\t\ttext: fixData.text.slice(replacementStartOffset, replacementEndOffset),\n\t\trange: [startOffset, endOffset],\n\t};\n}\n"],"names":[],"mappings":"AAAA,mDAAmD,GAEnD;;;;;;CAMC;;;AACc,SAAS,eAAe,IAAI,EAAE,OAAO;IACnD,IAAI,CAAC,KAAK,MAAM,EAAE;QACjB,OAAO;IACR;IAEA,IAAI,cAAc,QAAQ,KAAK,CAAC,EAAE;IAClC,IAAI,YAAY,QAAQ,KAAK,CAAC,EAAE;IAEhC,MAAM,uBAAuB,KAAK,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa;IAEtE,IAAI,yBAAyB;IAE7B,IAAK,IAAI,IAAI,GAAG,IAAI,qBAAqB,MAAM,EAAE,IAAK;QACrD,MAAM,IAAI,oBAAoB,CAAC,EAAE;QACjC,MAAM,IAAI,QAAQ,IAAI,CAAC,EAAE;QAEzB,IAAI,MAAM,GAAG;QAEb;QACA;IACD;IAEA,IAAI,uBAAuB,QAAQ,IAAI,CAAC,MAAM;IAE9C,IAAK,IAAI,IAAI,GAAG,IAAI,qBAAqB,MAAM,EAAE,IAAK;QACrD,MAAM,KAAK,qBAAqB,MAAM,GAAG,IAAI;QAE7C,IAAI,KAAK,wBAAwB;QAEjC,MAAM,IAAI,oBAAoB,CAAC,GAAG;QAElC,MAAM,KAAK,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI;QAErC,IAAI,KAAK,wBAAwB;QAEjC,MAAM,IAAI,QAAQ,IAAI,CAAC,GAAG;QAE1B,IAAI,MAAM,GAAG;QAEb;QACA;IACD;IAEA,2CAA2C;IAC3C,IAAI,gBAAgB,WAAW;QAC9B,IAAI,cAAc,QAAQ,KAAK,CAAC,EAAE,EAAE;YACnC;YACA;QACD,OAAO,IAAI,YAAY,QAAQ,KAAK,CAAC,EAAE,EAAE;YACxC;YACA;QACD;IACD;IAEA,OAAO;QACN,MAAM,QAAQ,IAAI,CAAC,KAAK,CAAC,wBAAwB;QACjD,OAAO;YAAC;YAAa;SAAU;IAChC;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4350, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/rangesOverlap.mjs"],"sourcesContent":["/**\n * Check if two ranges of source offsets overlap.\n * This function assumes that the provided ranges have a width of at least one column.\n *\n * @param {[number, number]} a\n * @param {[number, number]} b\n * @returns {boolean}\n */\nexport default function rangesOverlap(a, b) {\n\t// a: ----\n\t// b:      ----\n\tif (a[1] <= b[0]) return false;\n\n\t// a:      ----\n\t// b: ----\n\tif (a[0] >= b[1]) return false;\n\n\treturn true;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;AACc,SAAS,cAAc,CAAC,EAAE,CAAC;IACzC,UAAU;IACV,eAAe;IACf,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO;IAEzB,eAAe;IACf,UAAU;IACV,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO;IAEzB,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4375, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/report.mjs"],"sourcesContent":["import {\n\tisFunction as isFn,\n\tisNumber,\n\tisPlainObject,\n\tisRange,\n\tisString,\n} from '../utils/validateTypes.mjs';\n\nimport {\n\tDEFAULT_SEVERITY,\n\tRULE_NAME_ALL,\n\tSEVERITY_ERROR,\n\tSEVERITY_WARNING,\n} from '../constants.mjs';\nimport addSemicolonForEditInfo from './addSemicolonForEditInfo.mjs';\nimport emitDeprecationWarning from './emitDeprecationWarning.mjs';\nimport narrowFixRange from './narrowFixRange.mjs';\nimport rangesOverlap from './rangesOverlap.mjs';\n\n/** @import { Config, DisabledRangeObject, FixCallback, FixObject, Problem, Range, RuleMessage, StylelintPostcssResult, Utils, WarningOptions } from 'stylelint' */\n/** @import { Position as PostcssPosition, Node as PostcssNode } from 'postcss' */\n\n/**\n * Report a problem.\n *\n * This function accounts for `disabledRanges` attached to the result.\n * That is, if the reported problem is within a disabledRange,\n * it is ignored. Otherwise, it is attached to the result as a\n * postcss warning.\n *\n * It also accounts for the rule's severity.\n *\n * You *must* pass *either* a node or a line number.\n *\n * @type {Utils['report']}\n */\nexport default function report(problem) {\n\tconst { node, index, endIndex, line, start, end, result, ruleName, word, fix, ...rest } = problem;\n\n\tcheckProblemRangeDeprecations(problem);\n\n\tconst {\n\t\tdisabledRanges,\n\t\tquiet,\n\t\truleSeverities,\n\t\tconfig: { defaultSeverity, ignoreDisables } = {},\n\t\tcustomMessages: { [ruleName]: message = rest.message },\n\t\tcustomUrls: { [ruleName]: customUrl },\n\t\truleMetadata: { [ruleName]: metadata },\n\t} = result.stylelint;\n\tconst { messageArgs = [], severity = ruleSeverities[ruleName] } = rest;\n\tconst ruleSeverity =\n\t\t(isFn(severity) ? severity(...messageArgs) : severity) ?? defaultSeverity ?? DEFAULT_SEVERITY;\n\n\t// In quiet mode, mere warnings are ignored\n\tif (quiet && ruleSeverity === SEVERITY_WARNING) return;\n\n\tif ((isFn(fix) || isFixObject(fix)) && metadata && !metadata.fixable) {\n\t\tthrow new Error(\n\t\t\t`The \"${ruleName}\" rule requires \"meta.fixable\" to be truthy if the \"fix\" callback is being passed`,\n\t\t);\n\t}\n\n\t// If a line is not passed, use the node.rangeBy method to get the\n\t// line number that the complaint pertains to\n\tconst startLine = line ?? node?.rangeBy({ index, endIndex }).start.line;\n\n\tif (!startLine) {\n\t\tthrow new Error(\n\t\t\t`The \"${ruleName}\" rule failed to pass either a node or a line number to the \\`report()\\` function.`,\n\t\t);\n\t}\n\n\tif (isFixApplied({ ...problem, line: startLine })) return;\n\n\tif (isDisabledOnLine(ruleName, startLine, disabledRanges)) {\n\t\t// Collect disabled warnings\n\t\t// Used to report `needlessDisables` in subsequent processing.\n\t\tconst disabledWarnings = (result.stylelint.disabledWarnings ||= []);\n\n\t\tdisabledWarnings.push({\n\t\t\trule: ruleName,\n\t\t\tline: startLine,\n\t\t});\n\n\t\tif (!ignoreDisables) return;\n\t}\n\n\tif (!result.stylelint.stylelintError && ruleSeverity === SEVERITY_ERROR) {\n\t\tresult.stylelint.stylelintError = true;\n\t}\n\n\tif (!result.stylelint.stylelintWarning && ruleSeverity === SEVERITY_WARNING) {\n\t\tresult.stylelint.stylelintWarning = true;\n\t}\n\n\t/** @type {WarningOptions} */\n\tconst warningProperties = {\n\t\tseverity: ruleSeverity,\n\t\trule: ruleName,\n\t};\n\n\tif (node) {\n\t\twarningProperties.node = node;\n\t}\n\n\tif (start) {\n\t\twarningProperties.start = start;\n\t} else if (isNumber(index)) {\n\t\twarningProperties.index = index;\n\t}\n\n\tif (end) {\n\t\twarningProperties.end = end;\n\t} else if (isNumber(endIndex)) {\n\t\twarningProperties.endIndex = endIndex;\n\t}\n\n\tif (word) {\n\t\twarningProperties.word = word;\n\t}\n\n\tif (customUrl) {\n\t\twarningProperties.url = customUrl;\n\t}\n\n\twarningProperties.fix = computeEditInfo({ ...problem, line: startLine });\n\n\tconst warningMessage = buildWarningMessage(message, messageArgs);\n\n\tresult.warn(warningMessage, warningProperties);\n}\n\n/**\n * @param {Problem} problem\n */\nfunction checkProblemRangeDeprecations(problem) {\n\tif (problem.result.stylelint.quietDeprecationWarnings) return;\n\n\tif (!problem.node) {\n\t\temitDeprecationWarning(\n\t\t\t`Omitting the \\`node\\` argument in the \\`utils.report()\\` function is deprecated (\"${problem.ruleName}\").`,\n\t\t\t'REPORT_AMBIGUOUS_POSITION',\n\t\t\t`Please pass a \\`node\\` argument in the \\`utils.report()\\` function of \"${problem.ruleName}\".`,\n\t\t);\n\t}\n\n\tif (!isRange(problem) && ('start' in problem || 'end' in problem)) {\n\t\temitDeprecationWarning(\n\t\t\t`Partial position information in the \\`utils.report()\\` function is deprecated (\"${problem.ruleName}\").`,\n\t\t\t'REPORT_AMBIGUOUS_POSITION',\n\t\t\t`Please pass both a valid \\`start\\` and \\`end\\` argument in the \\`utils.report()\\` function of \"${problem.ruleName}\".`,\n\t\t);\n\t}\n\n\tif (!hasIndices(problem) && ('index' in problem || 'endIndex' in problem)) {\n\t\temitDeprecationWarning(\n\t\t\t`Partial position information in the \\`utils.report()\\` function is deprecated (\"${problem.ruleName}\").`,\n\t\t\t'REPORT_AMBIGUOUS_POSITION',\n\t\t\t`Please pass both \\`index\\` and \\`endIndex\\` as arguments in the \\`utils.report()\\` function of \"${problem.ruleName}\".`,\n\t\t);\n\t}\n\n\tif ('line' in problem) {\n\t\temitDeprecationWarning(\n\t\t\t`Providing the \\`line\\` argument in the \\`utils.report()\\` function is deprecated (\"${problem.ruleName}\").`,\n\t\t\t'REPORT_AMBIGUOUS_POSITION',\n\t\t\t`Please pass both \\`index\\` and \\`endIndex\\` as arguments in the \\`utils.report()\\` function of \"${problem.ruleName}\" instead.`,\n\t\t);\n\t}\n}\n\n/**\n * @param {RuleMessage} message\n * @param {NonNullable<Problem['messageArgs']>} messageArgs\n * @returns {string}\n */\nfunction buildWarningMessage(message, messageArgs) {\n\tif (isString(message)) {\n\t\treturn printfLike(message, ...messageArgs);\n\t}\n\n\treturn message(...messageArgs);\n}\n\n/**\n * @param {string} format\n * @param {Array<unknown>} args\n * @returns {string}\n */\nfunction printfLike(format, ...args) {\n\treturn args.reduce((/** @type {string} */ result, arg) => {\n\t\treturn result.replace(/%[ds]/, String(arg));\n\t}, format);\n}\n\n/**\n * Check whether a rule is disabled for a given line\n * @param {string} ruleName\n * @param {number} startLine\n * @param {DisabledRangeObject} disabledRanges\n */\nfunction isDisabledOnLine(ruleName, startLine, disabledRanges) {\n\tconst ranges = disabledRanges[ruleName] ?? disabledRanges[RULE_NAME_ALL] ?? [];\n\n\tfor (const range of ranges) {\n\t\tif (\n\t\t\t// If the problem is within a disabledRange,\n\t\t\t// and that disabledRange's rules include this one\n\t\t\trange.start <= startLine &&\n\t\t\t(range.end === undefined || range.end >= startLine) &&\n\t\t\t/** @todo populate rules in assignDisabledRanges util */\n\t\t\t(!range.rules || range.rules.includes(ruleName))\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {Problem & { line: number }} problem\n * @returns {boolean}\n */\nfunction isFixApplied({ fix, line, result: { stylelint }, ruleName }) {\n\tif (!fix) return false;\n\n\tconst { disabledRanges, config = {}, fixersData } = stylelint;\n\n\tif (!config.fix) return false;\n\n\tif (isFixDisabled(line, ruleName, config, disabledRanges)) return false;\n\n\tconst apply = isFixObject(fix) ? fix.apply : fix;\n\n\tif (!isFn(apply)) return false;\n\n\tapply();\n\n\tincrementFixCounter({ fixersData, ruleName });\n\n\treturn true;\n}\n\n/**\n * @param {Problem & { line: number }} problem\n * @returns {{range: [number, number], text: string} | undefined}\n */\nfunction computeEditInfo({ fix, line, result: { stylelint }, ruleName }) {\n\tif (!fix) return;\n\n\tconst { disabledRanges, config = {}, rangesOfComputedEditInfos } = stylelint;\n\n\tif (!config.computeEditInfo || config.fix) return;\n\n\tif (isFixDisabled(line, ruleName, config, disabledRanges)) return;\n\n\tif (!isFixObject(fix) || !fix.apply || !fix.node) return;\n\n\tconst { apply, node } = fix;\n\n\tif (!isNumber(node.source?.start?.offset) || !isNumber(node.source?.end?.offset)) return;\n\n\t/** @type [number, number] */\n\tconst fixedNodeRange = [node.source.start.offset, node.source.end.offset];\n\n\t// When recording edit info we want to ensure that there is no overlap with any other fix.\n\t// We only record the first fix for each node.\n\tif (rangesOfComputedEditInfos.some((range) => rangesOverlap(range, fixedNodeRange))) {\n\t\treturn;\n\t}\n\n\t// Apply the fix\n\tapply();\n\n\tlet fixData = { range: fixedNodeRange, text: node.toString() };\n\n\tfixData = addSemicolonForEditInfo(node, fixData);\n\n\t// Compute the smallest range and text of the fix\n\tfixData = narrowFixRange(node, fixData);\n\n\t// Mark the fixed range as mutated\n\trangesOfComputedEditInfos.push(fixData.range);\n\n\treturn fixData;\n}\n\n/**\n * @param {number} line\n * @param {string} ruleName\n * @param {Config} config\n * @param {DisabledRangeObject} disabledRanges\n * @returns {boolean}\n */\nfunction isFixDisabled(line, ruleName, config, disabledRanges) {\n\tif (config.rules?.[ruleName][1]?.disableFix) return true;\n\n\tif (!config.ignoreDisables && isDisabledOnLine(ruleName, line, disabledRanges)) return true;\n\n\treturn false;\n}\n\n/**\n * @param {object} o\n * @param {StylelintPostcssResult['fixersData']} o.fixersData\n * @param {string} o.ruleName\n */\nfunction incrementFixCounter({ fixersData, ruleName }) {\n\tfixersData[ruleName] ??= 0;\n\tfixersData[ruleName]++;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is { index: number, endIndex: number }}\n */\nfunction hasIndices(value) {\n\tif (!isPlainObject(value)) return false;\n\n\tif (!isNumber(value.index)) return false;\n\n\tif (!isNumber(value.endIndex)) return false;\n\n\treturn true;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is FixObject}\n */\nfunction isFixObject(value) {\n\tif (!isPlainObject(value)) return false;\n\n\tif (!value.node) return false;\n\n\tif (!isFn(value.apply)) return false;\n\n\treturn true;\n}\n"],"names":[],"mappings":";;;AAAA;AAQA;AAMA;AACA;AACA;AACA;;;;;;;AAmBe,SAAS,OAAO,OAAO;IACrC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,GAAG;IAE1F,8BAA8B;IAE9B,MAAM,EACL,cAAc,EACd,KAAK,EACL,cAAc,EACd,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,GAAG,CAAC,CAAC,EAChD,gBAAgB,EAAE,CAAC,SAAS,EAAE,UAAU,KAAK,OAAO,EAAE,EACtD,YAAY,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,EACrC,cAAc,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,EACtC,GAAG,OAAO,SAAS;IACpB,MAAM,EAAE,cAAc,EAAE,EAAE,WAAW,cAAc,CAAC,SAAS,EAAE,GAAG;IAClE,MAAM,eACL,CAAC,CAAA,GAAA,6JAAA,CAAA,aAAI,AAAD,EAAE,YAAY,YAAY,eAAe,QAAQ,KAAK,mBAAmB,gJAAA,CAAA,mBAAgB;IAE9F,2CAA2C;IAC3C,IAAI,SAAS,iBAAiB,gJAAA,CAAA,mBAAgB,EAAE;IAEhD,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,aAAI,AAAD,EAAE,QAAQ,YAAY,IAAI,KAAK,YAAY,CAAC,SAAS,OAAO,EAAE;QACrE,MAAM,IAAI,MACT,CAAC,KAAK,EAAE,SAAS,iFAAiF,CAAC;IAErG;IAEA,kEAAkE;IAClE,6CAA6C;IAC7C,MAAM,YAAY,QAAQ,MAAM,QAAQ;QAAE;QAAO;IAAS,GAAG,MAAM;IAEnE,IAAI,CAAC,WAAW;QACf,MAAM,IAAI,MACT,CAAC,KAAK,EAAE,SAAS,kFAAkF,CAAC;IAEtG;IAEA,IAAI,aAAa;QAAE,GAAG,OAAO;QAAE,MAAM;IAAU,IAAI;IAEnD,IAAI,iBAAiB,UAAU,WAAW,iBAAiB;QAC1D,4BAA4B;QAC5B,8DAA8D;QAC9D,MAAM,mBAAoB,OAAO,SAAS,CAAC,gBAAgB,KAAK,EAAE;QAElE,iBAAiB,IAAI,CAAC;YACrB,MAAM;YACN,MAAM;QACP;QAEA,IAAI,CAAC,gBAAgB;IACtB;IAEA,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,IAAI,iBAAiB,gJAAA,CAAA,iBAAc,EAAE;QACxE,OAAO,SAAS,CAAC,cAAc,GAAG;IACnC;IAEA,IAAI,CAAC,OAAO,SAAS,CAAC,gBAAgB,IAAI,iBAAiB,gJAAA,CAAA,mBAAgB,EAAE;QAC5E,OAAO,SAAS,CAAC,gBAAgB,GAAG;IACrC;IAEA,2BAA2B,GAC3B,MAAM,oBAAoB;QACzB,UAAU;QACV,MAAM;IACP;IAEA,IAAI,MAAM;QACT,kBAAkB,IAAI,GAAG;IAC1B;IAEA,IAAI,OAAO;QACV,kBAAkB,KAAK,GAAG;IAC3B,OAAO,IAAI,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ;QAC3B,kBAAkB,KAAK,GAAG;IAC3B;IAEA,IAAI,KAAK;QACR,kBAAkB,GAAG,GAAG;IACzB,OAAO,IAAI,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,WAAW;QAC9B,kBAAkB,QAAQ,GAAG;IAC9B;IAEA,IAAI,MAAM;QACT,kBAAkB,IAAI,GAAG;IAC1B;IAEA,IAAI,WAAW;QACd,kBAAkB,GAAG,GAAG;IACzB;IAEA,kBAAkB,GAAG,GAAG,gBAAgB;QAAE,GAAG,OAAO;QAAE,MAAM;IAAU;IAEtE,MAAM,iBAAiB,oBAAoB,SAAS;IAEpD,OAAO,IAAI,CAAC,gBAAgB;AAC7B;AAEA;;CAEC,GACD,SAAS,8BAA8B,OAAO;IAC7C,IAAI,QAAQ,MAAM,CAAC,SAAS,CAAC,wBAAwB,EAAE;IAEvD,IAAI,CAAC,QAAQ,IAAI,EAAE;QAClB,CAAA,GAAA,sKAAA,CAAA,UAAsB,AAAD,EACpB,CAAC,kFAAkF,EAAE,QAAQ,QAAQ,CAAC,GAAG,CAAC,EAC1G,6BACA,CAAC,uEAAuE,EAAE,QAAQ,QAAQ,CAAC,EAAE,CAAC;IAEhG;IAEA,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD,EAAE,YAAY,CAAC,WAAW,WAAW,SAAS,OAAO,GAAG;QAClE,CAAA,GAAA,sKAAA,CAAA,UAAsB,AAAD,EACpB,CAAC,gFAAgF,EAAE,QAAQ,QAAQ,CAAC,GAAG,CAAC,EACxG,6BACA,CAAC,+FAA+F,EAAE,QAAQ,QAAQ,CAAC,EAAE,CAAC;IAExH;IAEA,IAAI,CAAC,WAAW,YAAY,CAAC,WAAW,WAAW,cAAc,OAAO,GAAG;QAC1E,CAAA,GAAA,sKAAA,CAAA,UAAsB,AAAD,EACpB,CAAC,gFAAgF,EAAE,QAAQ,QAAQ,CAAC,GAAG,CAAC,EACxG,6BACA,CAAC,gGAAgG,EAAE,QAAQ,QAAQ,CAAC,EAAE,CAAC;IAEzH;IAEA,IAAI,UAAU,SAAS;QACtB,CAAA,GAAA,sKAAA,CAAA,UAAsB,AAAD,EACpB,CAAC,mFAAmF,EAAE,QAAQ,QAAQ,CAAC,GAAG,CAAC,EAC3G,6BACA,CAAC,gGAAgG,EAAE,QAAQ,QAAQ,CAAC,UAAU,CAAC;IAEjI;AACD;AAEA;;;;CAIC,GACD,SAAS,oBAAoB,OAAO,EAAE,WAAW;IAChD,IAAI,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,UAAU;QACtB,OAAO,WAAW,YAAY;IAC/B;IAEA,OAAO,WAAW;AACnB;AAEA;;;;CAIC,GACD,SAAS,WAAW,MAAM,EAAE,GAAG,IAAI;IAClC,OAAO,KAAK,MAAM,CAAC,CAAC,mBAAmB,GAAG,QAAQ;QACjD,OAAO,OAAO,OAAO,CAAC,SAAS,OAAO;IACvC,GAAG;AACJ;AAEA;;;;;CAKC,GACD,SAAS,iBAAiB,QAAQ,EAAE,SAAS,EAAE,cAAc;IAC5D,MAAM,SAAS,cAAc,CAAC,SAAS,IAAI,cAAc,CAAC,gJAAA,CAAA,gBAAa,CAAC,IAAI,EAAE;IAE9E,KAAK,MAAM,SAAS,OAAQ;QAC3B,IACC,4CAA4C;QAC5C,kDAAkD;QAClD,MAAM,KAAK,IAAI,aACf,CAAC,MAAM,GAAG,KAAK,aAAa,MAAM,GAAG,IAAI,SAAS,KAClD,sDAAsD,GACtD,CAAC,CAAC,MAAM,KAAK,IAAI,MAAM,KAAK,CAAC,QAAQ,CAAC,SAAS,GAC9C;YACD,OAAO;QACR;IACD;IAEA,OAAO;AACR;AAEA;;;CAGC,GACD,SAAS,aAAa,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE;IACnE,IAAI,CAAC,KAAK,OAAO;IAEjB,MAAM,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC,EAAE,UAAU,EAAE,GAAG;IAEpD,IAAI,CAAC,OAAO,GAAG,EAAE,OAAO;IAExB,IAAI,cAAc,MAAM,UAAU,QAAQ,iBAAiB,OAAO;IAElE,MAAM,QAAQ,YAAY,OAAO,IAAI,KAAK,GAAG;IAE7C,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,aAAI,AAAD,EAAE,QAAQ,OAAO;IAEzB;IAEA,oBAAoB;QAAE;QAAY;IAAS;IAE3C,OAAO;AACR;AAEA;;;CAGC,GACD,SAAS,gBAAgB,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE;IACtE,IAAI,CAAC,KAAK;IAEV,MAAM,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC,EAAE,yBAAyB,EAAE,GAAG;IAEnE,IAAI,CAAC,OAAO,eAAe,IAAI,OAAO,GAAG,EAAE;IAE3C,IAAI,cAAc,MAAM,UAAU,QAAQ,iBAAiB;IAE3D,IAAI,CAAC,YAAY,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE;IAElD,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG;IAExB,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,MAAM,EAAE,OAAO,WAAW,CAAC,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,MAAM,EAAE,KAAK,SAAS;IAElF,2BAA2B,GAC3B,MAAM,iBAAiB;QAAC,KAAK,MAAM,CAAC,KAAK,CAAC,MAAM;QAAE,KAAK,MAAM,CAAC,GAAG,CAAC,MAAM;KAAC;IAEzE,0FAA0F;IAC1F,8CAA8C;IAC9C,IAAI,0BAA0B,IAAI,CAAC,CAAC,QAAU,CAAA,GAAA,6JAAA,CAAA,UAAa,AAAD,EAAE,OAAO,kBAAkB;QACpF;IACD;IAEA,gBAAgB;IAChB;IAEA,IAAI,UAAU;QAAE,OAAO;QAAgB,MAAM,KAAK,QAAQ;IAAG;IAE7D,UAAU,CAAA,GAAA,uKAAA,CAAA,UAAuB,AAAD,EAAE,MAAM;IAExC,iDAAiD;IACjD,UAAU,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE,MAAM;IAE/B,kCAAkC;IAClC,0BAA0B,IAAI,CAAC,QAAQ,KAAK;IAE5C,OAAO;AACR;AAEA;;;;;;CAMC,GACD,SAAS,cAAc,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc;IAC5D,IAAI,OAAO,KAAK,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,YAAY,OAAO;IAEpD,IAAI,CAAC,OAAO,cAAc,IAAI,iBAAiB,UAAU,MAAM,iBAAiB,OAAO;IAEvF,OAAO;AACR;AAEA;;;;CAIC,GACD,SAAS,oBAAoB,EAAE,UAAU,EAAE,QAAQ,EAAE;IACpD,UAAU,CAAC,SAAS,KAAK;IACzB,UAAU,CAAC,SAAS;AACrB;AAEA;;;CAGC,GACD,SAAS,WAAW,KAAK;IACxB,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ,OAAO;IAElC,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,KAAK,GAAG,OAAO;IAEnC,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,QAAQ,GAAG,OAAO;IAEtC,OAAO;AACR;AAEA;;;CAGC,GACD,SAAS,YAAY,KAAK;IACzB,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ,OAAO;IAElC,IAAI,CAAC,MAAM,IAAI,EAAE,OAAO;IAExB,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,aAAI,AAAD,EAAE,MAAM,KAAK,GAAG,OAAO;IAE/B,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4605, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/resolveConfig.mjs"],"sourcesContent":["import { isAbsolute, join, normalize } from 'node:path';\nimport process from 'node:process';\n\nimport createStylelint from './createStylelint.mjs';\nimport getConfigForFile from './getConfigForFile.mjs';\n\n/**\n * @type {import('stylelint').PublicApi['resolveConfig']}\n */\nexport default async function resolveConfig(\n\tfilePath,\n\t{\n\t\tcwd = process.cwd(),\n\t\tconfig = undefined,\n\t\tconfigBasedir = undefined,\n\t\tconfigFile = undefined,\n\t} = {},\n) {\n\tif (!filePath) {\n\t\treturn undefined;\n\t}\n\n\tconst stylelint = createStylelint({\n\t\tconfig,\n\t\tconfigFile,\n\t\tconfigBasedir,\n\t\tcwd,\n\t});\n\n\tconst absoluteFilePath = !isAbsolute(filePath) ? join(cwd, filePath) : normalize(filePath);\n\n\tconst configSearchPath = stylelint._options.configFile || absoluteFilePath;\n\n\tconst resolved = await getConfigForFile(stylelint, configSearchPath, absoluteFilePath);\n\n\tif (!resolved) {\n\t\treturn undefined;\n\t}\n\n\treturn resolved.config;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AACA;;;;;;;;;AAKe,eAAe,cAC7B,QAAQ,EACR,EACC,MAAM,uHAAA,CAAA,UAAO,CAAC,GAAG,EAAE,EACnB,SAAS,SAAS,EAClB,gBAAgB,SAAS,EACzB,aAAa,SAAS,EACtB,GAAG,CAAC,CAAC;IAEN,IAAI,CAAC,UAAU;QACd,OAAO;IACR;IAEA,MAAM,YAAY,CAAA,GAAA,sJAAA,CAAA,UAAe,AAAD,EAAE;QACjC;QACA;QACA;QACA;IACD;IAEA,MAAM,mBAAmB,CAAC,CAAA,GAAA,iHAAA,CAAA,aAAU,AAAD,EAAE,YAAY,CAAA,GAAA,iHAAA,CAAA,OAAI,AAAD,EAAE,KAAK,YAAY,CAAA,GAAA,iHAAA,CAAA,YAAS,AAAD,EAAE;IAEjF,MAAM,mBAAmB,UAAU,QAAQ,CAAC,UAAU,IAAI;IAE1D,MAAM,WAAW,MAAM,CAAA,GAAA,uJAAA,CAAA,UAAgB,AAAD,EAAE,WAAW,kBAAkB;IAErE,IAAI,CAAC,UAAU;QACd,OAAO;IACR;IAEA,OAAO,SAAS,MAAM;AACvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4645, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/ruleMessages.mjs"],"sourcesContent":["/**\n * @type {import('stylelint').Utils['ruleMessages']}\n */\nexport default function ruleMessages(ruleName, messages) {\n\t/** @type {import('stylelint').RuleMessages} */\n\tconst newMessages = {};\n\n\tfor (const [messageId, messageText] of Object.entries(messages)) {\n\t\tif (typeof messageText === 'string') {\n\t\t\tnewMessages[messageId] = `${messageText} (${ruleName})`;\n\t\t} else {\n\t\t\tnewMessages[messageId] = (...args) => `${messageText(...args)} (${ruleName})`;\n\t\t}\n\t}\n\n\t// @ts-expect-error -- TS2322: Type 'RuleMessages' is not assignable to type 'R'.\n\treturn newMessages;\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AACc,SAAS,aAAa,QAAQ,EAAE,QAAQ;IACtD,6CAA6C,GAC7C,MAAM,cAAc,CAAC;IAErB,KAAK,MAAM,CAAC,WAAW,YAAY,IAAI,OAAO,OAAO,CAAC,UAAW;QAChE,IAAI,OAAO,gBAAgB,UAAU;YACpC,WAAW,CAAC,UAAU,GAAG,GAAG,YAAY,EAAE,EAAE,SAAS,CAAC,CAAC;QACxD,OAAO;YACN,WAAW,CAAC,UAAU,GAAG,CAAC,GAAG,OAAS,GAAG,eAAe,MAAM,EAAE,EAAE,SAAS,CAAC,CAAC;QAC9E;IACD;IAEA,iFAAiF;IACjF,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4668, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/allFilesIgnoredError.mjs"],"sourcesContent":["export default class AllFilesIgnoredError extends Error {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.message =\n\t\t\t'All input files were ignored because of the ignore pattern. Either change your input, ignore pattern or use \"--allow-empty-input\" to allow no inputs';\n\t}\n}\n"],"names":[],"mappings":";;;AAAe,MAAM,6BAA6B;IACjD,aAAc;QACb,KAAK;QAEL,IAAI,CAAC,OAAO,GACX;IACF;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4683, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/noFilesFoundError.mjs"],"sourcesContent":["export default class NoFilesFoundError extends Error {\n\t/**\n\t * @param {string|string[]} fileList\n\t */\n\tconstructor(fileList) {\n\t\tsuper();\n\n\t\tif (typeof fileList === 'string') {\n\t\t\tfileList = [fileList];\n\t\t}\n\n\t\tconst pattern = fileList.filter((i) => !i.startsWith('!')).join(', ');\n\n\t\tthis.message = `No files matching the pattern \"${pattern}\" were found.`;\n\t}\n}\n"],"names":[],"mappings":";;;AAAe,MAAM,0BAA0B;IAC9C;;EAEC,GACD,YAAY,QAAQ,CAAE;QACrB,KAAK;QAEL,IAAI,OAAO,aAAa,UAAU;YACjC,WAAW;gBAAC;aAAS;QACtB;QAEA,MAAM,UAAU,SAAS,MAAM,CAAC,CAAC,IAAM,CAAC,EAAE,UAAU,CAAC,MAAM,IAAI,CAAC;QAEhE,IAAI,CAAC,OAAO,GAAG,CAAC,+BAA+B,EAAE,QAAQ,aAAa,CAAC;IACxE;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4706, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/createPartialStylelintResult.mjs"],"sourcesContent":["import { SEVERITY_ERROR } from './constants.mjs';\nimport process from 'node:process';\n\n/** @import {LintResult as StylelintResult, PostcssResult} from 'stylelint' */\n\n/**\n * @param {PostcssResult} [postcssResult]\n * @param {import('stylelint').CssSyntaxError} [cssSyntaxError]\n * @returns {StylelintResult}\n */\nexport default function createPartialStylelintResult(postcssResult, cssSyntaxError) {\n\t/** @type {StylelintResult} */\n\tlet stylelintResult;\n\t/** @type {string | undefined} */\n\tlet source;\n\n\tif (postcssResult && postcssResult.root) {\n\t\tif (postcssResult.root.source) {\n\t\t\tsource = postcssResult.root.source.input.file;\n\n\t\t\tif (!source && 'id' in postcssResult.root.source.input) {\n\t\t\t\tsource = postcssResult.root.source.input.id;\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error -- TS2339: Property 'noDeprecation' does not exist on type 'Process'.\n\t\t// https://github.com/nodejs/node/blob/main/doc/api/process.md#processnodeprecation\n\t\tconst includeDeprecations = !process.noDeprecation;\n\t\tconst deprecationMessages = includeDeprecations\n\t\t\t? postcssResult.messages.filter((message) => message.stylelintType === 'deprecation')\n\t\t\t: [];\n\t\tconst deprecations = deprecationMessages.map((deprecationMessage) => {\n\t\t\treturn {\n\t\t\t\ttext: deprecationMessage.text,\n\t\t\t\treference: deprecationMessage.stylelintReference,\n\t\t\t};\n\t\t});\n\n\t\tconst invalidOptionMessages = postcssResult.messages.filter(\n\t\t\t(message) => message.stylelintType === 'invalidOption',\n\t\t);\n\t\tconst invalidOptionWarnings = invalidOptionMessages.map((invalidOptionMessage) => {\n\t\t\treturn {\n\t\t\t\ttext: invalidOptionMessage.text,\n\t\t\t};\n\t\t});\n\n\t\tconst parseErrors = postcssResult.messages.filter(\n\t\t\t(message) => message.stylelintType === 'parseError',\n\t\t);\n\n\t\t// Remove deprecation warnings, invalid options, and parse errors from the messages\n\t\tpostcssResult.messages = postcssResult.messages.filter(\n\t\t\t(message) =>\n\t\t\t\tmessage.stylelintType !== 'deprecation' &&\n\t\t\t\tmessage.stylelintType !== 'invalidOption' &&\n\t\t\t\tmessage.stylelintType !== 'parseError',\n\t\t);\n\n\t\t// This defines the stylelint result object that formatters receive\n\t\tstylelintResult = {\n\t\t\tsource,\n\t\t\tdeprecations,\n\t\t\tinvalidOptionWarnings,\n\t\t\t// @ts-expect-error -- TS2322: Type 'Message[]' is not assignable to type '(Warning & { stylelintType: string; })[]'.\n\t\t\tparseErrors,\n\t\t\terrored: postcssResult.stylelint.stylelintError,\n\t\t\twarnings: postcssResult.messages.map((message) => {\n\t\t\t\treturn {\n\t\t\t\t\tline: message.line,\n\t\t\t\t\tcolumn: message.column,\n\t\t\t\t\tendLine: message.endLine,\n\t\t\t\t\tendColumn: message.endColumn,\n\t\t\t\t\tfix: message.fix,\n\t\t\t\t\trule: message.rule,\n\t\t\t\t\tseverity: message.severity,\n\t\t\t\t\ttext: message.text,\n\t\t\t\t\turl: message.url,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tignored: postcssResult.stylelint.ignored,\n\t\t\t_postcssResult: postcssResult,\n\t\t};\n\t} else if (cssSyntaxError) {\n\t\tif (cssSyntaxError.name !== 'CssSyntaxError') {\n\t\t\tthrow cssSyntaxError;\n\t\t}\n\n\t\tstylelintResult = {\n\t\t\tsource: cssSyntaxError.file || '<input css 1>',\n\t\t\tdeprecations: [],\n\t\t\tinvalidOptionWarnings: [],\n\t\t\tparseErrors: [],\n\t\t\terrored: true,\n\t\t\twarnings: [\n\t\t\t\t{\n\t\t\t\t\tline: cssSyntaxError.line,\n\t\t\t\t\tcolumn: cssSyntaxError.column,\n\t\t\t\t\tendLine: cssSyntaxError.endLine,\n\t\t\t\t\tendColumn: cssSyntaxError.endColumn,\n\t\t\t\t\trule: cssSyntaxError.name,\n\t\t\t\t\tseverity: SEVERITY_ERROR,\n\t\t\t\t\ttext: `${cssSyntaxError.reason} (${cssSyntaxError.name})`,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t} else {\n\t\tthrow new Error(\n\t\t\t'createPartialStylelintResult must be called with either postcssResult or CssSyntaxError',\n\t\t);\n\t}\n\n\treturn stylelintResult;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AASe,SAAS,6BAA6B,aAAa,EAAE,cAAc;IACjF,4BAA4B,GAC5B,IAAI;IACJ,+BAA+B,GAC/B,IAAI;IAEJ,IAAI,iBAAiB,cAAc,IAAI,EAAE;QACxC,IAAI,cAAc,IAAI,CAAC,MAAM,EAAE;YAC9B,SAAS,cAAc,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI;YAE7C,IAAI,CAAC,UAAU,QAAQ,cAAc,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBACvD,SAAS,cAAc,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC5C;QACD;QAEA,yFAAyF;QACzF,mFAAmF;QACnF,MAAM,sBAAsB,CAAC,uHAAA,CAAA,UAAO,CAAC,aAAa;QAClD,MAAM,sBAAsB,sBACzB,cAAc,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAY,QAAQ,aAAa,KAAK,iBACrE,EAAE;QACL,MAAM,eAAe,oBAAoB,GAAG,CAAC,CAAC;YAC7C,OAAO;gBACN,MAAM,mBAAmB,IAAI;gBAC7B,WAAW,mBAAmB,kBAAkB;YACjD;QACD;QAEA,MAAM,wBAAwB,cAAc,QAAQ,CAAC,MAAM,CAC1D,CAAC,UAAY,QAAQ,aAAa,KAAK;QAExC,MAAM,wBAAwB,sBAAsB,GAAG,CAAC,CAAC;YACxD,OAAO;gBACN,MAAM,qBAAqB,IAAI;YAChC;QACD;QAEA,MAAM,cAAc,cAAc,QAAQ,CAAC,MAAM,CAChD,CAAC,UAAY,QAAQ,aAAa,KAAK;QAGxC,mFAAmF;QACnF,cAAc,QAAQ,GAAG,cAAc,QAAQ,CAAC,MAAM,CACrD,CAAC,UACA,QAAQ,aAAa,KAAK,iBAC1B,QAAQ,aAAa,KAAK,mBAC1B,QAAQ,aAAa,KAAK;QAG5B,mEAAmE;QACnE,kBAAkB;YACjB;YACA;YACA;YACA,qHAAqH;YACrH;YACA,SAAS,cAAc,SAAS,CAAC,cAAc;YAC/C,UAAU,cAAc,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACrC,OAAO;oBACN,MAAM,QAAQ,IAAI;oBAClB,QAAQ,QAAQ,MAAM;oBACtB,SAAS,QAAQ,OAAO;oBACxB,WAAW,QAAQ,SAAS;oBAC5B,KAAK,QAAQ,GAAG;oBAChB,MAAM,QAAQ,IAAI;oBAClB,UAAU,QAAQ,QAAQ;oBAC1B,MAAM,QAAQ,IAAI;oBAClB,KAAK,QAAQ,GAAG;gBACjB;YACD;YACA,SAAS,cAAc,SAAS,CAAC,OAAO;YACxC,gBAAgB;QACjB;IACD,OAAO,IAAI,gBAAgB;QAC1B,IAAI,eAAe,IAAI,KAAK,kBAAkB;YAC7C,MAAM;QACP;QAEA,kBAAkB;YACjB,QAAQ,eAAe,IAAI,IAAI;YAC/B,cAAc,EAAE;YAChB,uBAAuB,EAAE;YACzB,aAAa,EAAE;YACf,SAAS;YACT,UAAU;gBACT;oBACC,MAAM,eAAe,IAAI;oBACzB,QAAQ,eAAe,MAAM;oBAC7B,SAAS,eAAe,OAAO;oBAC/B,WAAW,eAAe,SAAS;oBACnC,MAAM,eAAe,IAAI;oBACzB,UAAU,gJAAA,CAAA,iBAAc;oBACxB,MAAM,GAAG,eAAe,MAAM,CAAC,EAAE,EAAE,eAAe,IAAI,CAAC,CAAC,CAAC;gBAC1D;aACA;QACF;IACD,OAAO;QACN,MAAM,IAAI,MACT;IAEF;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4799, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getFormatterOptionsText.mjs"],"sourcesContent":["import formatters from '../formatters/index.mjs';\n\n/**\n * @param {string} separator\n * @param {string} [quote]\n * @returns {string}\n */\nexport default function getFormatterOptionsText(separator, quote = '') {\n\treturn Object.keys(formatters)\n\t\t.map((name) => `${quote}${name}${quote}`)\n\t\t.join(separator);\n}\n"],"names":[],"mappings":";;;AAAA;;AAOe,SAAS,wBAAwB,SAAS,EAAE,QAAQ,EAAE;IACpE,OAAO,OAAO,IAAI,CAAC,0JAAA,CAAA,UAAU,EAC3B,GAAG,CAAC,CAAC,OAAS,GAAG,QAAQ,OAAO,OAAO,EACvC,IAAI,CAAC;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4813, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getFormatter.mjs"],"sourcesContent":["import { EXIT_CODE_INVALID_CONFIG } from '../constants.mjs';\nimport dynamicImport from './dynamicImport.mjs';\nimport { existsSync } from 'node:fs';\nimport formatters from '../formatters/index.mjs';\nimport getConfigForFile from '../getConfigForFile.mjs';\nimport getFormatterOptionsText from './getFormatterOptionsText.mjs';\nimport { resolve } from 'node:path';\n\n/** @import {Formatter, InternalApi} from 'stylelint' */\n\n/**\n * @param {InternalApi} stylelint\n * @returns {Promise<Formatter>}\n */\nexport default async function getFormatter(stylelint) {\n\tconst cwd = stylelint._options.cwd;\n\tconst configPath = stylelint._options.configFile || cwd;\n\tlet formatter = stylelint._options.formatter;\n\n\tif (!formatter) {\n\t\tlet configForFile;\n\n\t\ttry {\n\t\t\tconfigForFile = await getConfigForFile(stylelint, configPath);\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error && 'code' in err && err.code === EXIT_CODE_INVALID_CONFIG) {\n\t\t\t\tconfigForFile = undefined;\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\tformatter = configForFile?.config.formatter;\n\t}\n\n\tif (typeof formatter === 'string') {\n\t\tlet formatterFunction = formatters[formatter];\n\n\t\tif (formatterFunction === undefined) {\n\t\t\tif (existsSync(formatter)) {\n\t\t\t\tformatterFunction = await dynamicImport(resolve(formatter)).then((m) => m.default);\n\t\t\t} else {\n\t\t\t\tconst formattersText = getFormatterOptionsText(', ', '\"');\n\n\t\t\t\tthrow new Error(`You must use a valid formatter option: ${formattersText} or a function`);\n\t\t\t}\n\t\t}\n\n\t\treturn formatterFunction;\n\t}\n\n\t// Assume a function or a promise of a function.\n\tif (typeof formatter === 'function' || formatter) {\n\t\treturn Promise.resolve(formatter);\n\t}\n\n\tformatter ??= stylelint._options._defaultFormatter ?? 'json';\n\n\treturn formatters[formatter];\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQe,eAAe,aAAa,SAAS;IACnD,MAAM,MAAM,UAAU,QAAQ,CAAC,GAAG;IAClC,MAAM,aAAa,UAAU,QAAQ,CAAC,UAAU,IAAI;IACpD,IAAI,YAAY,UAAU,QAAQ,CAAC,SAAS;IAE5C,IAAI,CAAC,WAAW;QACf,IAAI;QAEJ,IAAI;YACH,gBAAgB,MAAM,CAAA,GAAA,uJAAA,CAAA,UAAgB,AAAD,EAAE,WAAW;QACnD,EAAE,OAAO,KAAK;YACb,IAAI,eAAe,SAAS,UAAU,OAAO,IAAI,IAAI,KAAK,gJAAA,CAAA,2BAAwB,EAAE;gBACnF,gBAAgB;YACjB,OAAO;gBACN,MAAM;YACP;QACD;QAEA,YAAY,eAAe,OAAO;IACnC;IAEA,IAAI,OAAO,cAAc,UAAU;QAClC,IAAI,oBAAoB,0JAAA,CAAA,UAAU,CAAC,UAAU;QAE7C,IAAI,sBAAsB,WAAW;YACpC,IAAI,CAAA,GAAA,6GAAA,CAAA,aAAU,AAAD,EAAE,YAAY;gBAC1B,oBAAoB,MAAM,CAAA,GAAA,6JAAA,CAAA,UAAa,AAAD,EAAE,CAAA,GAAA,iHAAA,CAAA,UAAO,AAAD,EAAE,YAAY,IAAI,CAAC,CAAC,IAAM,EAAE,OAAO;YAClF,OAAO;gBACN,MAAM,iBAAiB,CAAA,GAAA,uKAAA,CAAA,UAAuB,AAAD,EAAE,MAAM;gBAErD,MAAM,IAAI,MAAM,CAAC,uCAAuC,EAAE,eAAe,cAAc,CAAC;YACzF;QACD;QAEA,OAAO;IACR;IAEA,gDAAgD;IAChD,IAAI,OAAO,cAAc,cAAc,WAAW;QACjD,OAAO,QAAQ,OAAO,CAAC;IACxB;IAEA,cAAc,UAAU,QAAQ,CAAC,iBAAiB,IAAI;IAEtD,OAAO,0JAAA,CAAA,UAAU,CAAC,UAAU;AAC7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4872, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/prepareReturnValue.mjs"],"sourcesContent":["import { SEVERITY_ERROR } from './constants.mjs';\nimport emitDeprecationWarning from './utils/emitDeprecationWarning.mjs';\n\n/** @import { Formatter, LinterOptions, LinterResult, LintResult } from 'stylelint' */\n\n/**\n * @param {object} args\n * @param {LintResult[]} args.results\n * @param {LinterOptions['maxWarnings']} args.maxWarnings\n * @param {LinterOptions['quietDeprecationWarnings']} args.quietDeprecationWarnings\n * @param {Formatter} args.formatter\n * @param {string} args.cwd\n * @returns {LinterResult}\n */\nexport default function prepareReturnValue({\n\tresults,\n\tmaxWarnings,\n\tquietDeprecationWarnings,\n\tformatter,\n\tcwd,\n}) {\n\tlet errored = false;\n\n\tfor (const result of results) {\n\t\tif (\n\t\t\tresult.errored ||\n\t\t\tresult.parseErrors.length > 0 ||\n\t\t\tresult.warnings.some((warning) => warning.severity === SEVERITY_ERROR)\n\t\t) {\n\t\t\terrored = true;\n\t\t\tresult.errored = true;\n\t\t}\n\t}\n\n\t/** @type {LinterResult} */\n\tconst returnValue = {\n\t\tcwd,\n\t\terrored,\n\t\tresults: [],\n\t\treport: '',\n\n\t\t/**\n\t\t * @deprecated\n\t\t * @todo Remove in the next major version.\n\t\t */\n\t\tget output() {\n\t\t\tif (!quietDeprecationWarnings && !this._outputWarned) {\n\t\t\t\temitDeprecationWarning(\n\t\t\t\t\t'`output` is deprecated.',\n\t\t\t\t\t'RESULT_OUTPUT_PROPERTY',\n\t\t\t\t\t'Use `report` or `code` instead.',\n\t\t\t\t);\n\t\t\t\tthis._outputWarned = true;\n\t\t\t}\n\n\t\t\treturn this._output ?? '';\n\t\t},\n\n\t\treportedDisables: [],\n\t\truleMetadata: getRuleMetadata(results),\n\t};\n\n\t// TODO: Deprecated. Remove in the next major version.\n\tObject.defineProperty(returnValue, '_output', { value: '', writable: true });\n\tObject.defineProperty(returnValue, '_outputWarned', { value: false, writable: true });\n\n\tif (maxWarnings !== undefined) {\n\t\tconst foundWarnings = results.reduce((count, file) => count + file.warnings.length, 0);\n\n\t\tif (foundWarnings > maxWarnings) {\n\t\t\treturnValue.maxWarningsExceeded = { maxWarnings, foundWarnings };\n\t\t}\n\t}\n\n\treturnValue.report = formatter(results, returnValue);\n\treturnValue._output = returnValue.report; // TODO: Deprecated. Remove in the next major version.\n\treturnValue.results = results;\n\n\treturn returnValue;\n}\n\n/**\n * @param {LintResult[]} lintResults\n */\nfunction getRuleMetadata(lintResults) {\n\tconst [lintResult] = lintResults;\n\n\tif (lintResult === undefined) return {};\n\n\tif (lintResult._postcssResult === undefined) return {};\n\n\treturn lintResult._postcssResult.stylelint.ruleMetadata;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAae,SAAS,mBAAmB,EAC1C,OAAO,EACP,WAAW,EACX,wBAAwB,EACxB,SAAS,EACT,GAAG,EACH;IACA,IAAI,UAAU;IAEd,KAAK,MAAM,UAAU,QAAS;QAC7B,IACC,OAAO,OAAO,IACd,OAAO,WAAW,CAAC,MAAM,GAAG,KAC5B,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAY,QAAQ,QAAQ,KAAK,gJAAA,CAAA,iBAAc,GACpE;YACD,UAAU;YACV,OAAO,OAAO,GAAG;QAClB;IACD;IAEA,yBAAyB,GACzB,MAAM,cAAc;QACnB;QACA;QACA,SAAS,EAAE;QACX,QAAQ;QAER;;;GAGC,GACD,IAAI,UAAS;YACZ,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,aAAa,EAAE;gBACrD,CAAA,GAAA,sKAAA,CAAA,UAAsB,AAAD,EACpB,2BACA,0BACA;gBAED,IAAI,CAAC,aAAa,GAAG;YACtB;YAEA,OAAO,IAAI,CAAC,OAAO,IAAI;QACxB;QAEA,kBAAkB,EAAE;QACpB,cAAc,gBAAgB;IAC/B;IAEA,sDAAsD;IACtD,OAAO,cAAc,CAAC,aAAa,WAAW;QAAE,OAAO;QAAI,UAAU;IAAK;IAC1E,OAAO,cAAc,CAAC,aAAa,iBAAiB;QAAE,OAAO;QAAO,UAAU;IAAK;IAEnF,IAAI,gBAAgB,WAAW;QAC9B,MAAM,gBAAgB,QAAQ,MAAM,CAAC,CAAC,OAAO,OAAS,QAAQ,KAAK,QAAQ,CAAC,MAAM,EAAE;QAEpF,IAAI,gBAAgB,aAAa;YAChC,YAAY,mBAAmB,GAAG;gBAAE;gBAAa;YAAc;QAChE;IACD;IAEA,YAAY,MAAM,GAAG,UAAU,SAAS;IACxC,YAAY,OAAO,GAAG,YAAY,MAAM,EAAE,sDAAsD;IAChG,YAAY,OAAO,GAAG;IAEtB,OAAO;AACR;AAEA;;CAEC,GACD,SAAS,gBAAgB,WAAW;IACnC,MAAM,CAAC,WAAW,GAAG;IAErB,IAAI,eAAe,WAAW,OAAO,CAAC;IAEtC,IAAI,WAAW,cAAc,KAAK,WAAW,OAAO,CAAC;IAErD,OAAO,WAAW,cAAc,CAAC,SAAS,CAAC,YAAY;AACxD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4942, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/standalone.mjs"],"sourcesContent":["import { isAbsolute, join, normalize, relative } from 'node:path';\nimport { existsSync } from 'node:fs';\nimport process from 'node:process';\n\nimport createDebug from 'debug';\nconst debug = createDebug('stylelint:standalone');\n\nimport fastGlob from 'fast-glob';\nimport globby from 'globby';\nimport normalizePath from 'normalize-path';\nimport writeFileAtomic from 'write-file-atomic';\n\nimport { assertString, isString } from './utils/validateTypes.mjs';\nimport AllFilesIgnoredError from './utils/allFilesIgnoredError.mjs';\nimport NoFilesFoundError from './utils/noFilesFoundError.mjs';\nimport createPartialStylelintResult from './createPartialStylelintResult.mjs';\nimport createStylelint from './createStylelint.mjs';\nimport emitDeprecationWarning from './utils/emitDeprecationWarning.mjs';\nimport filterFilePaths from './utils/filterFilePaths.mjs';\nimport getConfigForFile from './getConfigForFile.mjs';\nimport getFileIgnorer from './utils/getFileIgnorer.mjs';\nimport getFormatter from './utils/getFormatter.mjs';\nimport lintSource from './lintSource.mjs';\nimport normalizeFixMode from './utils/normalizeFixMode.mjs';\nimport prepareReturnValue from './prepareReturnValue.mjs';\n\nconst ALWAYS_IGNORED_GLOBS = ['**/node_modules/**'];\n\n/** @import {Formatter, FormatterType} from 'stylelint' */\n\n/**\n * @type {import('stylelint').PublicApi['lint']}\n */\nexport default async function standalone({\n\tallowEmptyInput,\n\tcache,\n\tcacheLocation,\n\tcacheStrategy,\n\tcode,\n\tcodeFilename,\n\tconfig,\n\tconfigBasedir,\n\tconfigFile,\n\tcustomSyntax,\n\tcwd = process.cwd(),\n\tdisableDefaultIgnores,\n\tfiles,\n\tfix,\n\tcomputeEditInfo,\n\tformatter,\n\t_defaultFormatter,\n\tglobbyOptions,\n\tignoreDisables,\n\tignorePath,\n\tignorePattern,\n\tmaxWarnings,\n\tquiet,\n\tquietDeprecationWarnings = false,\n\treportDescriptionlessDisables,\n\treportInvalidScopeDisables,\n\treportNeedlessDisables,\n\treportUnscopedDisables,\n\tvalidate = true,\n}) {\n\tconst startTime = Date.now();\n\n\tconst hasOneValidInput = (files && !isString(code)) || (!files && isString(code));\n\n\tif (!hasOneValidInput) {\n\t\treturn Promise.reject(\n\t\t\tnew Error('You must pass stylelint a `files` glob or a `code` string, though not both'),\n\t\t);\n\t}\n\n\t// The ignorer will be used to filter file paths after the glob is checked,\n\t// before any files are actually read\n\n\t/** @type {import('ignore').Ignore} */\n\tlet ignorer;\n\n\ttry {\n\t\tignorer = getFileIgnorer({ cwd, ignorePath, ignorePattern });\n\t} catch (error) {\n\t\treturn Promise.reject(error);\n\t}\n\n\tconst stylelint = createStylelint({\n\t\tcacheLocation,\n\t\tcacheStrategy,\n\t\tconfig,\n\t\tconfigFile,\n\t\tconfigBasedir,\n\t\tcwd,\n\t\tformatter,\n\t\t_defaultFormatter,\n\t\tignoreDisables,\n\t\tignorePath,\n\t\treportNeedlessDisables,\n\t\treportInvalidScopeDisables,\n\t\treportDescriptionlessDisables,\n\t\treportUnscopedDisables,\n\t\tcustomSyntax,\n\t\tfix,\n\t\tcomputeEditInfo,\n\t\tquiet,\n\t\tquietDeprecationWarnings,\n\t\tvalidate,\n\t});\n\n\t/** @type {Formatter} */\n\n\t/** @see https://github.com/stylelint/stylelint/issues/7447 */\n\tif (!quietDeprecationWarnings && formatter === 'github') {\n\t\temitDeprecationWarning(\n\t\t\t'\"github\" formatter is deprecated.',\n\t\t\t'GITHUB_FORMATTER',\n\t\t\t'See https://stylelint.io/awesome-stylelint#formatters for alternative formatters.',\n\t\t);\n\t}\n\n\tconst formatterFunction = await getFormatter(stylelint);\n\n\tif (!files) {\n\t\tassertString(code);\n\n\t\tconst absoluteCodeFilename =\n\t\t\tcodeFilename !== undefined && !isAbsolute(codeFilename)\n\t\t\t\t? join(cwd, codeFilename)\n\t\t\t\t: codeFilename;\n\n\t\t// if file is ignored, return nothing\n\t\tif (\n\t\t\tabsoluteCodeFilename &&\n\t\t\t!filterFilePaths(ignorer, [relative(cwd, absoluteCodeFilename)]).length\n\t\t) {\n\t\t\treturn prepareReturnValue({\n\t\t\t\tresults: [],\n\t\t\t\tmaxWarnings,\n\t\t\t\tquietDeprecationWarnings,\n\t\t\t\tformatter: formatterFunction,\n\t\t\t\tcwd,\n\t\t\t});\n\t\t}\n\n\t\tlet stylelintResult;\n\n\t\ttry {\n\t\t\tconst postcssResult = await lintSource(stylelint, {\n\t\t\t\tcode,\n\t\t\t\tcodeFilename: absoluteCodeFilename,\n\t\t\t});\n\n\t\t\tstylelintResult = createPartialStylelintResult(postcssResult);\n\t\t} catch (error) {\n\t\t\tstylelintResult = handleError(error);\n\t\t}\n\n\t\tawait postProcessStylelintResult(stylelint, stylelintResult, absoluteCodeFilename);\n\n\t\tconst postcssResult = stylelintResult._postcssResult;\n\t\tconst returnValue = prepareReturnValue({\n\t\t\tresults: [stylelintResult],\n\t\t\tmaxWarnings,\n\t\t\tquietDeprecationWarnings,\n\t\t\tformatter: formatterFunction,\n\t\t\tcwd,\n\t\t});\n\n\t\tconst autofix = normalizeFixMode(stylelint._options.fix) ?? config?.fix ?? false;\n\n\t\tif (autofix && postcssResult && !postcssResult.stylelint.ignored) {\n\t\t\treturnValue.code = postcssResult.opts\n\t\t\t\t? // If we're fixing, the output should be the fixed code\n\t\t\t\t\tpostcssResult.root.toString(postcssResult.opts.syntax)\n\t\t\t\t: // If the writing of the fix is disabled, the input code is returned as-is\n\t\t\t\t\tcode;\n\n\t\t\treturnValue._output = returnValue.code; // TODO: Deprecated. Remove in the next major version.\n\t\t}\n\n\t\treturn returnValue;\n\t}\n\n\tlet fileList = [files].flat().map((entry) => {\n\t\tconst globCWD = (globbyOptions && globbyOptions.cwd) || cwd;\n\t\tconst absolutePath = !isAbsolute(entry) ? join(globCWD, entry) : normalize(entry);\n\n\t\tif (existsSync(absolutePath)) {\n\t\t\t// This path points to a file. Return an escaped path to avoid globbing\n\t\t\treturn fastGlob.escapePath(normalizePath(entry));\n\t\t}\n\n\t\treturn entry;\n\t});\n\n\tif (!disableDefaultIgnores) {\n\t\tfileList = fileList.concat(ALWAYS_IGNORED_GLOBS.map((glob) => `!${glob}`));\n\t}\n\n\t// do not cache if config is explicitly overridden by option\n\tconst useCache = cache ?? config?.cache ?? false;\n\n\tif (!useCache) {\n\t\tstylelint._fileCache.destroy();\n\t}\n\n\tconst effectiveGlobbyOptions = {\n\t\tcwd,\n\t\t...(globbyOptions || {}),\n\t\tabsolute: true,\n\t};\n\n\tconst globCWD = effectiveGlobbyOptions.cwd;\n\n\tlet filePaths = await globby(fileList, effectiveGlobbyOptions);\n\t// Record the length of filePaths before ignore operation\n\t// Prevent prompting \"No files matching the pattern 'xx' were found.\" when .stylelintignore ignore all input files\n\tconst filePathsLengthBeforeIgnore = filePaths.length;\n\n\t// The ignorer filter needs to check paths relative to cwd\n\tfilePaths = filterFilePaths(\n\t\tignorer,\n\t\tfilePaths.map((p) => relative(globCWD, p)),\n\t);\n\n\tlet stylelintResults;\n\n\tif (filePaths.length) {\n\t\tlet absoluteFilePaths = filePaths.map((filePath) => {\n\t\t\tconst absoluteFilepath = !isAbsolute(filePath)\n\t\t\t\t? join(globCWD, filePath)\n\t\t\t\t: normalize(filePath);\n\n\t\t\treturn absoluteFilepath;\n\t\t});\n\n\t\tconst getStylelintResults = absoluteFilePaths.map(async (absoluteFilepath) => {\n\t\t\tdebug(`Processing ${absoluteFilepath}`);\n\n\t\t\ttry {\n\t\t\t\tconst postcssResult = await lintSource(stylelint, {\n\t\t\t\t\tfilePath: absoluteFilepath,\n\t\t\t\t\tcache: useCache,\n\t\t\t\t});\n\n\t\t\t\tif (\n\t\t\t\t\t(postcssResult.stylelint.stylelintError || postcssResult.stylelint.stylelintWarning) &&\n\t\t\t\t\tuseCache\n\t\t\t\t) {\n\t\t\t\t\tdebug(`${absoluteFilepath} contains linting errors and will not be cached.`);\n\t\t\t\t\tstylelint._fileCache.removeEntry(absoluteFilepath);\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * If we're fixing, save the file with changed code\n\t\t\t\t */\n\t\t\t\tif (postcssResult.root && postcssResult.opts && !postcssResult.stylelint.ignored && fix) {\n\t\t\t\t\tconst fixedCss = postcssResult.root.toString(postcssResult.opts.syntax);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tpostcssResult.root &&\n\t\t\t\t\t\tpostcssResult.root.source &&\n\t\t\t\t\t\tpostcssResult.root.source.input.css !== fixedCss\n\t\t\t\t\t) {\n\t\t\t\t\t\tawait writeFileAtomic(absoluteFilepath, fixedCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst stylelintResult = createPartialStylelintResult(postcssResult);\n\n\t\t\t\tawait postProcessStylelintResult(stylelint, stylelintResult, absoluteFilepath);\n\n\t\t\t\treturn stylelintResult;\n\t\t\t} catch (error) {\n\t\t\t\t// On any error, we should not cache the lint result\n\t\t\t\tstylelint._fileCache.removeEntry(absoluteFilepath);\n\n\t\t\t\tconst stylelintResult = handleError(error);\n\n\t\t\t\tawait postProcessStylelintResult(stylelint, stylelintResult, absoluteFilepath);\n\n\t\t\t\treturn stylelintResult;\n\t\t\t}\n\t\t});\n\n\t\tstylelintResults = await Promise.all(getStylelintResults);\n\t} else if (allowEmptyInput || config?.allowEmptyInput || (await canAllowEmptyInput(stylelint))) {\n\t\tstylelintResults = await Promise.all([]);\n\t} else if (filePathsLengthBeforeIgnore) {\n\t\t// All input files ignored\n\t\tstylelintResults = await Promise.reject(new AllFilesIgnoredError());\n\t} else {\n\t\tstylelintResults = await Promise.reject(new NoFilesFoundError(fileList));\n\t}\n\n\tif (useCache) {\n\t\tstylelint._fileCache.reconcile();\n\t}\n\n\tconst result = prepareReturnValue({\n\t\tresults: stylelintResults,\n\t\tmaxWarnings,\n\t\tquietDeprecationWarnings,\n\t\tformatter: formatterFunction,\n\t\tcwd,\n\t});\n\n\tdebug(`Linting complete in ${Date.now() - startTime}ms`);\n\n\treturn result;\n}\n\n/**\n * @import {CssSyntaxError} from 'stylelint'\n *\n * @param {unknown} error\n * @returns {import('stylelint').LintResult}\n */\nfunction handleError(error) {\n\tif (error instanceof Error && error.name === 'CssSyntaxError') {\n\t\treturn createPartialStylelintResult(undefined, /** @type {CssSyntaxError} */ (error));\n\t}\n\n\tthrow error;\n}\n\n/**\n * @param {import('stylelint').InternalApi} stylelint\n * @returns {Promise<boolean>}\n */\nasync function canAllowEmptyInput(stylelint) {\n\tconst config = await getConfigForFile(stylelint);\n\n\treturn Boolean(config?.config?.allowEmptyInput);\n}\n\n/**\n * @param {import('stylelint').InternalApi} stylelint\n * @param {import('stylelint').LintResult} stylelintResult\n * @param {string} [filePath]\n * @returns {Promise<void>}\n */\nasync function postProcessStylelintResult(stylelint, stylelintResult, filePath) {\n\tconst configForFile = await getConfigForFile(stylelint, filePath, filePath);\n\n\tconst config = configForFile === null ? {} : configForFile.config;\n\n\tif (!config._processorFunctions) {\n\t\treturn;\n\t}\n\n\tfor (let postprocess of config._processorFunctions.values()) {\n\t\tpostprocess?.(stylelintResult, stylelintResult._postcssResult?.root);\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAnBA,MAAM,QAAQ,CAAA,GAAA,oKAAA,CAAA,UAAW,AAAD,EAAE;;;;;;;;;;;;;;;;;;AAqB1B,MAAM,uBAAuB;IAAC;CAAqB;AAOpC,eAAe,WAAW,EACxC,eAAe,EACf,KAAK,EACL,aAAa,EACb,aAAa,EACb,IAAI,EACJ,YAAY,EACZ,MAAM,EACN,aAAa,EACb,UAAU,EACV,YAAY,EACZ,MAAM,uHAAA,CAAA,UAAO,CAAC,GAAG,EAAE,EACnB,qBAAqB,EACrB,KAAK,EACL,GAAG,EACH,eAAe,EACf,SAAS,EACT,iBAAiB,EACjB,aAAa,EACb,cAAc,EACd,UAAU,EACV,aAAa,EACb,WAAW,EACX,KAAK,EACL,2BAA2B,KAAK,EAChC,6BAA6B,EAC7B,0BAA0B,EAC1B,sBAAsB,EACtB,sBAAsB,EACtB,WAAW,IAAI,EACf;IACA,MAAM,YAAY,KAAK,GAAG;IAE1B,MAAM,mBAAmB,AAAC,SAAS,CAAC,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,SAAW,CAAC,SAAS,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3E,IAAI,CAAC,kBAAkB;QACtB,OAAO,QAAQ,MAAM,CACpB,IAAI,MAAM;IAEZ;IAEA,2EAA2E;IAC3E,qCAAqC;IAErC,oCAAoC,GACpC,IAAI;IAEJ,IAAI;QACH,UAAU,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE;YAAE;YAAK;YAAY;QAAc;IAC3D,EAAE,OAAO,OAAO;QACf,OAAO,QAAQ,MAAM,CAAC;IACvB;IAEA,MAAM,YAAY,CAAA,GAAA,sJAAA,CAAA,UAAe,AAAD,EAAE;QACjC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACD;IAEA,sBAAsB,GAEtB,4DAA4D,GAC5D,IAAI,CAAC,4BAA4B,cAAc,UAAU;QACxD,CAAA,GAAA,sKAAA,CAAA,UAAsB,AAAD,EACpB,qCACA,oBACA;IAEF;IAEA,MAAM,oBAAoB,MAAM,CAAA,GAAA,4JAAA,CAAA,UAAY,AAAD,EAAE;IAE7C,IAAI,CAAC,OAAO;QACX,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAD,EAAE;QAEb,MAAM,uBACL,iBAAiB,aAAa,CAAC,CAAA,GAAA,iHAAA,CAAA,aAAU,AAAD,EAAE,gBACvC,CAAA,GAAA,iHAAA,CAAA,OAAI,AAAD,EAAE,KAAK,gBACV;QAEJ,qCAAqC;QACrC,IACC,wBACA,CAAC,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAAE,SAAS;YAAC,CAAA,GAAA,iHAAA,CAAA,WAAQ,AAAD,EAAE,KAAK;SAAsB,EAAE,MAAM,EACtE;YACD,OAAO,CAAA,GAAA,yJAAA,CAAA,UAAkB,AAAD,EAAE;gBACzB,SAAS,EAAE;gBACX;gBACA;gBACA,WAAW;gBACX;YACD;QACD;QAEA,IAAI;QAEJ,IAAI;YACH,MAAM,gBAAgB,MAAM,CAAA,GAAA,iJAAA,CAAA,UAAU,AAAD,EAAE,WAAW;gBACjD;gBACA,cAAc;YACf;YAEA,kBAAkB,CAAA,GAAA,mKAAA,CAAA,UAA4B,AAAD,EAAE;QAChD,EAAE,OAAO,OAAO;YACf,kBAAkB,YAAY;QAC/B;QAEA,MAAM,2BAA2B,WAAW,iBAAiB;QAE7D,MAAM,gBAAgB,gBAAgB,cAAc;QACpD,MAAM,cAAc,CAAA,GAAA,yJAAA,CAAA,UAAkB,AAAD,EAAE;YACtC,SAAS;gBAAC;aAAgB;YAC1B;YACA;YACA,WAAW;YACX;QACD;QAEA,MAAM,UAAU,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,UAAU,QAAQ,CAAC,GAAG,KAAK,QAAQ,OAAO;QAE3E,IAAI,WAAW,iBAAiB,CAAC,cAAc,SAAS,CAAC,OAAO,EAAE;YACjE,YAAY,IAAI,GAAG,cAAc,IAAI,GAEnC,cAAc,IAAI,CAAC,QAAQ,CAAC,cAAc,IAAI,CAAC,MAAM,IAErD;YAEF,YAAY,OAAO,GAAG,YAAY,IAAI,EAAE,sDAAsD;QAC/F;QAEA,OAAO;IACR;IAEA,IAAI,WAAW;QAAC;KAAM,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;QAClC,MAAM,UAAU,AAAC,iBAAiB,cAAc,GAAG,IAAK;QACxD,MAAM,eAAe,CAAC,CAAA,GAAA,iHAAA,CAAA,aAAU,AAAD,EAAE,SAAS,CAAA,GAAA,iHAAA,CAAA,OAAI,AAAD,EAAE,SAAS,SAAS,CAAA,GAAA,iHAAA,CAAA,YAAS,AAAD,EAAE;QAE3E,IAAI,CAAA,GAAA,6GAAA,CAAA,aAAU,AAAD,EAAE,eAAe;YAC7B,uEAAuE;YACvE,OAAO,8IAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,CAAA,GAAA,4IAAA,CAAA,UAAa,AAAD,EAAE;QAC1C;QAEA,OAAO;IACR;IAEA,IAAI,CAAC,uBAAuB;QAC3B,WAAW,SAAS,MAAM,CAAC,qBAAqB,GAAG,CAAC,CAAC,OAAS,CAAC,CAAC,EAAE,MAAM;IACzE;IAEA,4DAA4D;IAC5D,MAAM,WAAW,SAAS,QAAQ,SAAS;IAE3C,IAAI,CAAC,UAAU;QACd,UAAU,UAAU,CAAC,OAAO;IAC7B;IAEA,MAAM,yBAAyB;QAC9B;QACA,GAAI,iBAAiB,CAAC,CAAC;QACvB,UAAU;IACX;IAEA,MAAM,UAAU,uBAAuB,GAAG;IAE1C,IAAI,YAAY,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAM,AAAD,EAAE,UAAU;IACvC,yDAAyD;IACzD,kHAAkH;IAClH,MAAM,8BAA8B,UAAU,MAAM;IAEpD,0DAA0D;IAC1D,YAAY,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EACzB,SACA,UAAU,GAAG,CAAC,CAAC,IAAM,CAAA,GAAA,iHAAA,CAAA,WAAQ,AAAD,EAAE,SAAS;IAGxC,IAAI;IAEJ,IAAI,UAAU,MAAM,EAAE;QACrB,IAAI,oBAAoB,UAAU,GAAG,CAAC,CAAC;YACtC,MAAM,mBAAmB,CAAC,CAAA,GAAA,iHAAA,CAAA,aAAU,AAAD,EAAE,YAClC,CAAA,GAAA,iHAAA,CAAA,OAAI,AAAD,EAAE,SAAS,YACd,CAAA,GAAA,iHAAA,CAAA,YAAS,AAAD,EAAE;YAEb,OAAO;QACR;QAEA,MAAM,sBAAsB,kBAAkB,GAAG,CAAC,OAAO;YACxD,MAAM,CAAC,WAAW,EAAE,kBAAkB;YAEtC,IAAI;gBACH,MAAM,gBAAgB,MAAM,CAAA,GAAA,iJAAA,CAAA,UAAU,AAAD,EAAE,WAAW;oBACjD,UAAU;oBACV,OAAO;gBACR;gBAEA,IACC,CAAC,cAAc,SAAS,CAAC,cAAc,IAAI,cAAc,SAAS,CAAC,gBAAgB,KACnF,UACC;oBACD,MAAM,GAAG,iBAAiB,gDAAgD,CAAC;oBAC3E,UAAU,UAAU,CAAC,WAAW,CAAC;gBAClC;gBAEA;;KAEC,GACD,IAAI,cAAc,IAAI,IAAI,cAAc,IAAI,IAAI,CAAC,cAAc,SAAS,CAAC,OAAO,IAAI,KAAK;oBACxF,MAAM,WAAW,cAAc,IAAI,CAAC,QAAQ,CAAC,cAAc,IAAI,CAAC,MAAM;oBAEtE,IACC,cAAc,IAAI,IAClB,cAAc,IAAI,CAAC,MAAM,IACzB,cAAc,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,UACvC;wBACD,MAAM,CAAA,GAAA,sLAAA,CAAA,UAAe,AAAD,EAAE,kBAAkB;oBACzC;gBACD;gBAEA,MAAM,kBAAkB,CAAA,GAAA,mKAAA,CAAA,UAA4B,AAAD,EAAE;gBAErD,MAAM,2BAA2B,WAAW,iBAAiB;gBAE7D,OAAO;YACR,EAAE,OAAO,OAAO;gBACf,oDAAoD;gBACpD,UAAU,UAAU,CAAC,WAAW,CAAC;gBAEjC,MAAM,kBAAkB,YAAY;gBAEpC,MAAM,2BAA2B,WAAW,iBAAiB;gBAE7D,OAAO;YACR;QACD;QAEA,mBAAmB,MAAM,QAAQ,GAAG,CAAC;IACtC,OAAO,IAAI,mBAAmB,QAAQ,mBAAoB,MAAM,mBAAmB,YAAa;QAC/F,mBAAmB,MAAM,QAAQ,GAAG,CAAC,EAAE;IACxC,OAAO,IAAI,6BAA6B;QACvC,0BAA0B;QAC1B,mBAAmB,MAAM,QAAQ,MAAM,CAAC,IAAI,oKAAA,CAAA,UAAoB;IACjE,OAAO;QACN,mBAAmB,MAAM,QAAQ,MAAM,CAAC,IAAI,iKAAA,CAAA,UAAiB,CAAC;IAC/D;IAEA,IAAI,UAAU;QACb,UAAU,UAAU,CAAC,SAAS;IAC/B;IAEA,MAAM,SAAS,CAAA,GAAA,yJAAA,CAAA,UAAkB,AAAD,EAAE;QACjC,SAAS;QACT;QACA;QACA,WAAW;QACX;IACD;IAEA,MAAM,CAAC,oBAAoB,EAAE,KAAK,GAAG,KAAK,UAAU,EAAE,CAAC;IAEvD,OAAO;AACR;AAEA;;;;;CAKC,GACD,SAAS,YAAY,KAAK;IACzB,IAAI,iBAAiB,SAAS,MAAM,IAAI,KAAK,kBAAkB;QAC9D,OAAO,CAAA,GAAA,mKAAA,CAAA,UAA4B,AAAD,EAAE,WAA0C;IAC/E;IAEA,MAAM;AACP;AAEA;;;CAGC,GACD,eAAe,mBAAmB,SAAS;IAC1C,MAAM,SAAS,MAAM,CAAA,GAAA,uJAAA,CAAA,UAAgB,AAAD,EAAE;IAEtC,OAAO,QAAQ,QAAQ,QAAQ;AAChC;AAEA;;;;;CAKC,GACD,eAAe,2BAA2B,SAAS,EAAE,eAAe,EAAE,QAAQ;IAC7E,MAAM,gBAAgB,MAAM,CAAA,GAAA,uJAAA,CAAA,UAAgB,AAAD,EAAE,WAAW,UAAU;IAElE,MAAM,SAAS,kBAAkB,OAAO,CAAC,IAAI,cAAc,MAAM;IAEjE,IAAI,CAAC,OAAO,mBAAmB,EAAE;QAChC;IACD;IAEA,KAAK,IAAI,eAAe,OAAO,mBAAmB,CAAC,MAAM,GAAI;QAC5D,cAAc,iBAAiB,gBAAgB,cAAc,EAAE;IAChE;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5212, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/index.mjs"],"sourcesContent":["import checkAgainstRule from './utils/checkAgainstRule.mjs';\nimport createPlugin from './createPlugin.mjs';\nimport createStylelint from './createStylelint.mjs';\nimport formatters from './formatters/index.mjs';\nimport { longhandSubPropertiesOfShorthandProperties } from './reference/properties.mjs';\nimport postcssPlugin from './postcssPlugin.mjs';\nimport report from './utils/report.mjs';\nimport resolveConfig from './resolveConfig.mjs';\nimport ruleMessages from './utils/ruleMessages.mjs';\nimport rules from './rules/index.mjs';\nimport standalone from './standalone.mjs';\nimport validateOptions from './utils/validateOptions.mjs';\n\n/** @type {import('stylelint').PublicApi} */\nconst stylelint = Object.assign(postcssPlugin, {\n\tlint: standalone,\n\trules,\n\tformatters,\n\tcreatePlugin,\n\tresolveConfig,\n\t_createLinter: createStylelint,\n\tutils: {\n\t\treport,\n\t\truleMessages,\n\t\tvalidateOptions,\n\t\tcheckAgainstRule,\n\t},\n\treference: {\n\t\tlonghandSubPropertiesOfShorthandProperties,\n\t},\n});\n\nexport default stylelint;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAEA,0CAA0C,GAC1C,MAAM,YAAY,OAAO,MAAM,CAAC,oJAAA,CAAA,UAAa,EAAE;IAC9C,MAAM,iJAAA,CAAA,UAAU;IAChB,OAAA,qJAAA,CAAA,UAAK;IACL,YAAA,0JAAA,CAAA,UAAU;IACV,cAAA,mJAAA,CAAA,UAAY;IACZ,eAAA,oJAAA,CAAA,UAAa;IACb,eAAe,sJAAA,CAAA,UAAe;IAC9B,OAAO;QACN,QAAA,sJAAA,CAAA,UAAM;QACN,cAAA,4JAAA,CAAA,UAAY;QACZ,iBAAA,+JAAA,CAAA,UAAe;QACf,kBAAA,gKAAA,CAAA,UAAgB;IACjB;IACA,WAAW;QACV,4CAAA,8JAAA,CAAA,6CAA0C;IAC3C;AACD;uCAEe","ignoreList":[0],"debugId":null}}]
}