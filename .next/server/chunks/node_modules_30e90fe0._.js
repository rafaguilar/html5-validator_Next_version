module.exports = {

"[project]/node_modules/css-tree/lib/utils/string.js [app-route] (ecmascript) <export * as string>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "string": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$css$2d$tree$2f$lib$2f$utils$2f$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$css$2d$tree$2f$lib$2f$utils$2f$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/css-tree/lib/utils/string.js [app-route] (ecmascript)");
}}),
"[project]/node_modules/stylelint/lib/utils/uniteSets.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * Unite two or more sets
 *
 * @param {Iterable<string>[]} args
 * @see {@link https://github.com/microsoft/TypeScript/issues/57228|GitHub}
 */ __turbopack_context__.s({
    "default": (()=>uniteSets)
});
function uniteSets(...args) {
    return new Set([
        ...args
    ].reduce((result, set)=>[
            ...result,
            ...set
        ], []));
}
}}),
"[project]/node_modules/stylelint/lib/reference/atKeywords.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "atKeywords": (()=>atKeywords),
    "deprecatedAtKeywords": (()=>deprecatedAtKeywords),
    "nestingSupportedAtKeywords": (()=>nestingSupportedAtKeywords),
    "pageMarginAtKeywords": (()=>pageMarginAtKeywords)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/uniteSets.mjs [app-route] (ecmascript)");
;
const deprecatedAtKeywords = new Set([
    'apply',
    'document',
    'nest',
    'viewport'
]);
const nestingSupportedAtKeywords = new Set([
    'container',
    'layer',
    'media',
    'scope',
    'starting-style',
    'supports'
]);
const pageMarginAtKeywords = new Set([
    'top-left-corner',
    'top-left',
    'top-center',
    'top-right',
    'top-right-corner',
    'bottom-left-corner',
    'bottom-left',
    'bottom-center',
    'bottom-right',
    'bottom-right-corner',
    'left-top',
    'left-middle',
    'left-bottom',
    'right-top',
    'right-middle',
    'right-bottom'
]);
/**
 * @see https://www.w3.org/TR/css-fonts-4/#font-feature-values-font-feature-value-type
 * @type {ReadonlySet<string>}
 */ const fontFeatureValueTypes = new Set([
    'annotation',
    'character-variant',
    'historical-forms',
    'ornaments',
    'styleset',
    'stylistic',
    'swash'
]);
const atKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(deprecatedAtKeywords, nestingSupportedAtKeywords, pageMarginAtKeywords, fontFeatureValueTypes, [
    'counter-style',
    'custom-media',
    'custom-selector',
    'font-face',
    'font-feature-values',
    'font-palette-values',
    'import',
    'keyframes',
    'namespace',
    'page',
    'position-try',
    'property',
    'scroll-timeline',
    'view-transition'
]);
}}),
"[project]/node_modules/stylelint/lib/utils/regexes.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "atRuleRegexes": (()=>atRuleRegexes),
    "descriptorRegexes": (()=>descriptorRegexes),
    "functionRegexes": (()=>functionRegexes),
    "propertyRegexes": (()=>propertyRegexes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$reference$2f$atKeywords$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/reference/atKeywords.mjs [app-route] (ecmascript)");
;
const atRuleRegexes = {
    mediaName: /^media$/i,
    keyframesName: /^(-(o|moz|ms|webkit)-)?keyframes$/i,
    propertyName: /^property$/i,
    importName: /^import$/i,
    unsupportedNestingNames: new RegExp(`^((?!${[
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$reference$2f$atKeywords$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["nestingSupportedAtKeywords"].values()
    ].join('|')}).)*$`, 'i'),
    layerName: /^layer$/i,
    containerName: /^container$/i
};
const descriptorRegexes = {
    syntaxName: /^syntax$/i
};
const functionRegexes = {
    layer: /layer\((.*?)\)/i
};
const propertyRegexes = {
    containerNameAndShorthandName: /^container(-name)?$/i
};
}}),
"[project]/node_modules/stylelint/lib/utils/getAtRuleParams.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @param {import('postcss').AtRule} atRule
 * @returns {string}
 */ __turbopack_context__.s({
    "default": (()=>getAtRuleParams)
});
function getAtRuleParams(atRule) {
    return atRule.raws.params?.raw ?? atRule.params;
}
}}),
"[project]/node_modules/stylelint/lib/utils/getRuleSelector.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @param {import('postcss').Rule} ruleNode
 * @returns {string}
 */ __turbopack_context__.s({
    "default": (()=>getRuleSelector)
});
function getRuleSelector(ruleNode) {
    const raws = ruleNode.raws;
    return raws.selector && raws.selector.raw || ruleNode.selector;
}
}}),
"[project]/node_modules/stylelint/lib/utils/nodeFieldIndices.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "atRuleAfterIndex": (()=>atRuleAfterIndex),
    "atRuleAfterNameIndex": (()=>atRuleAfterNameIndex),
    "atRuleBetweenIndex": (()=>atRuleBetweenIndex),
    "atRuleParamIndex": (()=>atRuleParamIndex),
    "declarationBetweenIndex": (()=>declarationBetweenIndex),
    "declarationValueIndex": (()=>declarationValueIndex),
    "ruleAfterIndex": (()=>ruleAfterIndex),
    "ruleBetweenIndex": (()=>ruleBetweenIndex)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$getAtRuleParams$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/getAtRuleParams.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$getRuleSelector$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/getRuleSelector.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/validateTypes.mjs [app-route] (ecmascript)");
;
;
;
function atRuleParamIndex(atRule) {
    const index = atRuleAfterNameIndex(atRule);
    return index + (atRule.raws.afterName?.length ?? 0);
}
function atRuleAfterIndex(atRule) {
    // subtract 1 for `}`
    const endOffset = atRule.source?.end?.offset;
    if (!endOffset) return atRule.toString().length - 1;
    const afterLength = atRule.raws?.after?.length;
    if (!afterLength) return endOffset - 1;
    return endOffset - (afterLength + 1);
}
function atRuleAfterNameIndex(atRule) {
    // Initial 1 is for the `@`
    return 1 + atRule.name.length;
}
function atRuleBetweenIndex(atRule) {
    return atRuleParamIndex(atRule) + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$getAtRuleParams$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(atRule).length;
}
function declarationBetweenIndex(decl) {
    const { prop } = decl.raws;
    const propIsObject = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isObject"])(prop);
    return countChars([
        propIsObject && 'prefix' in prop && prop.prefix,
        propIsObject && 'raw' in prop && prop.raw || decl.prop,
        propIsObject && 'suffix' in prop && prop.suffix
    ]);
}
function declarationValueIndex(decl) {
    const { between, value } = decl.raws;
    return declarationBetweenIndex(decl) + countChars([
        between || ':',
        value && 'prefix' in value && value.prefix
    ]);
}
function ruleBetweenIndex(rule) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$getRuleSelector$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(rule).length;
}
function ruleAfterIndex(rule) {
    // subtract 1 for `}`
    const endOffset = rule.source?.end?.offset;
    if (!endOffset) return rule.toString().length - 1;
    const afterLength = rule.raws?.after?.length;
    if (!afterLength) return endOffset - 1;
    return endOffset - (afterLength + 1);
}
/**
 * @param {unknown[]} values
 * @returns {number}
 */ function countChars(values) {
    return values.reduce((/** @type {number} */ count, value)=>{
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isString"])(value)) return count + value.length;
        return count;
    }, 0);
}
}}),
"[project]/node_modules/stylelint/lib/utils/getDeclarationValue.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @param {import('postcss').Declaration} decl
 * @returns {string}
 */ __turbopack_context__.s({
    "default": (()=>getDeclarationValue)
});
function getDeclarationValue(decl) {
    const raws = decl.raws;
    return raws.value && raws.value.raw || decl.value;
}
}}),
"[project]/node_modules/stylelint/lib/utils/isCustomProperty.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * Check whether a property is a custom one
 * @param {string} property
 * @returns {boolean}
 */ __turbopack_context__.s({
    "default": (()=>isCustomProperty)
});
function isCustomProperty(property) {
    return property.startsWith('--');
}
}}),
"[project]/node_modules/stylelint/lib/utils/eachNodeUpToRoot.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "STOP": (()=>STOP),
    "default": (()=>eachNodeUpToRoot)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$typeGuards$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/typeGuards.mjs [app-route] (ecmascript)");
;
const STOP = 'STOP';
function eachNodeUpToRoot(node, callback) {
    let currentNode = node.parent;
    while(currentNode && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$typeGuards$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isRoot"])(currentNode)){
        if (callback(currentNode) === STOP) break;
        currentNode = currentNode.parent;
    }
}
}}),
"[project]/node_modules/stylelint/lib/utils/findNodeUpToRoot.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>findNodeUpToRoot)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$eachNodeUpToRoot$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/eachNodeUpToRoot.mjs [app-route] (ecmascript)");
;
function findNodeUpToRoot(node, predicate) {
    /** @type {Node | undefined} */ let found;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$eachNodeUpToRoot$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(node, (current)=>{
        if (predicate(current)) {
            found = current;
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$eachNodeUpToRoot$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["STOP"];
        }
    });
    return found;
}
}}),
"[project]/node_modules/stylelint/lib/utils/isDescriptorDeclaration.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>isDescriptorDeclaration)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$findNodeUpToRoot$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/findNodeUpToRoot.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$typeGuards$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/typeGuards.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$reference$2f$atKeywords$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/reference/atKeywords.mjs [app-route] (ecmascript)");
;
;
;
function isDescriptorDeclaration(decl) {
    return Boolean((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$findNodeUpToRoot$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(decl, isAtRuleSupportingDescriptors));
}
/**
 * @param {Node} node
 */ function isAtRuleSupportingDescriptors(node) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$typeGuards$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isAtRule"])(node) && !__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$reference$2f$atKeywords$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["nestingSupportedAtKeywords"].has(node.name.toLowerCase());
}
}}),
"[project]/node_modules/stylelint/lib/utils/isScssVariable.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * Check whether a property is SCSS variable
 *
 * @param {string} property
 * @returns {boolean}
 */ __turbopack_context__.s({
    "default": (()=>isScssVariable)
});
function isScssVariable(property) {
    // SCSS var (e.g. $var: x), list (e.g. $list: (x)) or map (e.g. $map: (key:value))
    if (property.startsWith('$')) {
        return true;
    }
    // SCSS var within a namespace (e.g. namespace.$var: x)
    if (property.includes('.$')) {
        return true;
    }
    return false;
}
}}),
"[project]/node_modules/stylelint/lib/utils/isStandardSyntaxDeclaration.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>isStandardSyntaxDeclaration)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$typeGuards$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/typeGuards.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isScssVariable$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/isScssVariable.mjs [app-route] (ecmascript)");
;
;
function isStandardSyntaxDeclaration(decl) {
    const prop = decl.prop;
    const parent = decl.parent;
    // SCSS var; covers map and list declarations
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isScssVariable$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(prop)) {
        return false;
    }
    // Less var (e.g. @var: x), but exclude variable interpolation (e.g. @{var})
    if (prop[0] === '@' && prop[1] !== '{') {
        return false;
    }
    // Less map declaration
    if (parent && parent.type === 'atrule' && parent.raws.afterName === ':') {
        return false;
    }
    // Less map (e.g. #my-map() { myprop: red; })
    if (parent && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$typeGuards$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isRule"])(parent) && parent.selector && parent.selector.startsWith('#') && parent.selector.endsWith('()')) {
        return false;
    }
    // Sass nested properties (e.g. border: { style: solid; color: red; })
    if (parent && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$typeGuards$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isRule"])(parent) && parent.selector && parent.selector[parent.selector.length - 1] === ':' && parent.selector.substring(0, 2) !== '--') {
        return false;
    }
    // Less &:extend
    if ('extend' in decl && decl.extend) {
        return false;
    }
    return true;
}
}}),
"[project]/node_modules/stylelint/lib/utils/hasLessInterpolation.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>hasLessInterpolation)
});
const HAS_LESS_INTERPOLATION = /@\{.+?\}/;
function hasLessInterpolation(string) {
    return HAS_LESS_INTERPOLATION.test(string);
}
}}),
"[project]/node_modules/stylelint/lib/utils/hasPsvInterpolation.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>hasPsvInterpolation)
});
const HAS_PSV_INTERPOLATION = /\$\(.+?\)/;
function hasPsvInterpolation(string) {
    return HAS_PSV_INTERPOLATION.test(string);
}
}}),
"[project]/node_modules/stylelint/lib/utils/hasScssInterpolation.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>hasScssInterpolation)
});
const HAS_SCSS_INTERPOLATION = /#\{.+?\}/s;
function hasScssInterpolation(string) {
    return HAS_SCSS_INTERPOLATION.test(string);
}
}}),
"[project]/node_modules/stylelint/lib/utils/hasTplInterpolation.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>hasTplInterpolation)
});
const HAS_TPL_INTERPOLATION = /\{.+?\}/s;
function hasTplInterpolation(string) {
    return HAS_TPL_INTERPOLATION.test(string);
}
}}),
"[project]/node_modules/stylelint/lib/utils/hasInterpolation.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>hasInterpolation)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasLessInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/hasLessInterpolation.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasPsvInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/hasPsvInterpolation.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasScssInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/hasScssInterpolation.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasTplInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/hasTplInterpolation.mjs [app-route] (ecmascript)");
;
;
;
;
function hasInterpolation(string) {
    // SCSS or Less interpolation
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasLessInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(string) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasScssInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(string) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasTplInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(string) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasPsvInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(string)) {
        return true;
    }
    return false;
}
}}),
"[project]/node_modules/stylelint/lib/utils/isStandardSyntaxProperty.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>isStandardSyntaxProperty)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/hasInterpolation.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isScssVariable$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/isScssVariable.mjs [app-route] (ecmascript)");
;
;
function isStandardSyntaxProperty(property) {
    // SCSS var
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isScssVariable$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(property)) {
        return false;
    }
    // Less var (e.g. @var: x)
    if (property.startsWith('@')) {
        return false;
    }
    // Less append property value with space (e.g. transform+_: scale(2))
    if (property.endsWith('+') || property.endsWith('+_')) {
        return false;
    }
    // SCSS or Less interpolation
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(property)) {
        return false;
    }
    return true;
}
}}),
"[project]/node_modules/stylelint/lib/utils/isStandardSyntaxValue.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>isStandardSyntaxValue)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/hasInterpolation.mjs [app-route] (ecmascript)");
;
function isStandardSyntaxValue(value) {
    let normalizedValue = value;
    // Ignore operators before variables (example -$variable)
    if (/^[-+*/]/.test(value.charAt(0))) {
        normalizedValue = normalizedValue.slice(1);
    }
    // SCSS variable (example $variable)
    // styled component interpolation (example ${foo => foo.bar})
    if (normalizedValue.startsWith('$')) {
        return false;
    }
    // SCSS namespace (example namespace.$variable)
    if (/^.+\.\$/.test(value)) {
        return false;
    }
    // SCSS namespace (example namespace.function-name())
    if (/^.+\.[-\w]+\(/.test(value)) {
        return false;
    }
    // Less variable
    if (normalizedValue.startsWith('@')) {
        return false;
    }
    // SCSS or Less interpolation
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$hasInterpolation$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(normalizedValue)) {
        return false;
    }
    // WebExtension replacement keyword used by Chrome/Firefox
    // more information: https://developer.chrome.com/extensions/i18n
    // and https://github.com/stylelint/stylelint/issues/4707
    if (/__MSG_\S+__/.test(value)) {
        return false;
    }
    return true;
}
}}),
"[project]/node_modules/stylelint/lib/utils/validateObjectWithArrayProps.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>validateObjectWithArrayProps)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/validateTypes.mjs [app-route] (ecmascript)");
;
function validateObjectWithArrayProps(...validators) {
    return (value)=>{
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isPlainObject"])(value)) {
            return false;
        }
        return Object.values(value).flat().every((item)=>validators.some((v)=>v(item)));
    };
}
}}),
"[project]/node_modules/stylelint/lib/utils/validateObjectWithProps.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>validateObjectWithProps)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/validateTypes.mjs [app-route] (ecmascript)");
;
function validateObjectWithProps(validator) {
    return (value)=>{
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isPlainObject"])(value)) {
            return false;
        }
        return Object.values(value).every((item)=>{
            return validator(item);
        });
    };
}
}}),
"[project]/node_modules/stylelint/lib/rules/declaration-property-value-no-unknown/index.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$css$2d$tree$2f$lib$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/css-tree/lib/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$css$2d$tree$2f$lib$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/css-tree/lib/index.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$css$2d$tree$2f$lib$2f$utils$2f$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__$2a$__as__string$3e$__ = __turbopack_context__.i("[project]/node_modules/css-tree/lib/utils/string.js [app-route] (ecmascript) <export * as string>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/validateTypes.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$regexes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/regexes.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$nodeFieldIndices$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/nodeFieldIndices.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$typeGuards$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/typeGuards.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$getDeclarationValue$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/getDeclarationValue.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isCustomProperty$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/isCustomProperty.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isDescriptorDeclaration$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/isDescriptorDeclaration.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isStandardSyntaxDeclaration$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/isStandardSyntaxDeclaration.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isStandardSyntaxProperty$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/isStandardSyntaxProperty.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isStandardSyntaxValue$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/isStandardSyntaxValue.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$matchesStringOrRegExp$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/matchesStringOrRegExp.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$report$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/report.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$ruleMessages$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/ruleMessages.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateObjectWithArrayProps$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/validateObjectWithArrayProps.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateObjectWithProps$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/validateObjectWithProps.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateOptions$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/validateOptions.mjs [app-route] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const ruleName = 'declaration-property-value-no-unknown';
const messages = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$ruleMessages$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(ruleName, {
    rejected: (property, value)=>`Unexpected unknown value "${value}" for property "${property}"`,
    rejectedParseError: (property, value)=>`Cannot parse property value "${value}" for property "${property}"`
});
const meta = {
    url: 'https://stylelint.io/user-guide/rules/declaration-property-value-no-unknown'
};
const SYNTAX_DESCRIPTOR = /^syntax$/i;
/** @typedef {import('stylelint').CoreRules[ruleName]} Rule */ /** @typedef {Parameters<Rule>[1]} SecondaryOptions */ /** @type {Rule} */ const rule = (primary, secondaryOptions)=>{
    return (root, result)=>{
        const validOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateOptions$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(result, ruleName, {
            actual: primary
        }, {
            actual: secondaryOptions,
            possible: {
                ignoreProperties: [
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateObjectWithArrayProps$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isString"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isRegExp"])
                ],
                propertiesSyntax: [
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateObjectWithProps$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isString"])
                ],
                typesSyntax: [
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateObjectWithProps$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isString"])
                ]
            },
            optional: true
        });
        if (!validOptions) {
            return;
        }
        const ignoreProperties = Array.from(Object.entries(secondaryOptions?.ignoreProperties ?? {}));
        /** @type {(name: string, propValue: string) => boolean} */ const isPropIgnored = (name, value)=>{
            const [, valuePattern] = ignoreProperties.find(([namePattern])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$matchesStringOrRegExp$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(name, namePattern)) || [];
            return Boolean(valuePattern && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$matchesStringOrRegExp$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(value, valuePattern));
        };
        /** @type {SecondaryOptions['propertiesSyntax']} */ const propertiesSyntax = {
            'text-box-edge': 'auto | [ text | cap | ex | ideographic | ideographic-ink ] [ text | alphabetic | ideographic | ideographic-ink ]?',
            'text-box-trim': 'none | trim-start | trim-end | trim-both',
            'view-timeline': "[ <'view-timeline-name'> [ <'view-timeline-axis'> || <'view-timeline-inset'> ]? ]#",
            'font-size': '| math',
            ...secondaryOptions?.propertiesSyntax
        };
        /**
		 * @todo add support for oklab(), oklch(), color(), color-mix(), light-dark(), etc.
		 * @see https://drafts.csswg.org/css-color-5/
		 */ const typesSyntax = {
            ...secondaryOptions?.typesSyntax
        };
        /** @type {Map<string, string>} */ const typedCustomPropertyNames = new Map();
        root.walkAtRules(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$regexes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["atRuleRegexes"].propertyName, (atRule)=>{
            const propName = atRule.params.trim();
            if (!propName || !atRule.nodes || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isCustomProperty$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(propName)) return;
            for (const node of atRule.nodes){
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$typeGuards$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isDeclaration"])(node) && SYNTAX_DESCRIPTOR.test(node.prop)) {
                    const value = node.value.trim();
                    const unquoted = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$css$2d$tree$2f$lib$2f$utils$2f$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__$2a$__as__string$3e$__["string"].decode(value);
                    // Only string values are valid.
                    // We can not check the syntax of this property.
                    if (unquoted === value) continue;
                    // Any value is allowed in this custom property.
                    // We don't need to check this property.
                    if (unquoted === '*') continue;
                    // https://github.com/csstree/csstree/pull/256
                    // We can circumvent this issue by prefixing the property name,
                    // making it a vendor-prefixed property instead of a custom property.
                    // No one should be using `-stylelint--` as a property prefix.
                    //
                    // When this is resolved `typedCustomPropertyNames` can become a `Set<string>`
                    // and the prefix can be removed.
                    const prefixedPropName = `-stylelint${propName}`;
                    typedCustomPropertyNames.set(propName, prefixedPropName);
                    propertiesSyntax[prefixedPropName] = unquoted;
                }
            }
        });
        const languageOptions = result.stylelint.config?.languageOptions;
        const forkedLexer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$css$2d$tree$2f$lib$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["fork"])({
            atrules: languageOptions?.syntax?.atRules || {},
            properties: {
                ...languageOptions?.syntax?.properties || {},
                ...propertiesSyntax
            },
            types: {
                ...languageOptions?.syntax?.types || {},
                ...typesSyntax
            },
            cssWideKeywords: languageOptions?.syntax?.cssWideKeywords || []
        }).lexer;
        root.walkDecls((decl)=>{
            const { prop } = decl;
            const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$getDeclarationValue$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(decl);
            // csstree/csstree#243
            // NOTE: CSSTree's `fork()` doesn't support `-moz-initial`, but it may be possible in the future.
            if (/^-moz-initial$/i.test(value)) return;
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isStandardSyntaxDeclaration$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(decl)) return;
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isDescriptorDeclaration$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(decl)) return;
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isStandardSyntaxProperty$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(prop)) return;
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isStandardSyntaxValue$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(value)) return;
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isCustomProperty$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(prop) && !typedCustomPropertyNames.has(prop)) return;
            if (isPropIgnored(prop, value)) return;
            /** @type {import('css-tree').CssNode} */ let cssTreeValueNode;
            try {
                cssTreeValueNode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$css$2d$tree$2f$lib$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parse"])(value, {
                    context: 'value',
                    positions: true
                });
                if (containsUnsupportedFunction(cssTreeValueNode)) return;
            } catch  {
                const index = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$nodeFieldIndices$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["declarationValueIndex"])(decl);
                const endIndex = index + value.length;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$report$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])({
                    message: messages.rejectedParseError,
                    messageArgs: [
                        prop,
                        value
                    ],
                    node: decl,
                    index,
                    endIndex,
                    result,
                    ruleName
                });
                return;
            }
            const { error } = forkedLexer.matchProperty(typedCustomPropertyNames.get(prop) ?? prop, cssTreeValueNode);
            if (!error) return;
            if (!('mismatchLength' in error)) return;
            const { name, rawMessage, loc } = error;
            if (name !== 'SyntaxMatchError') return;
            if (rawMessage !== 'Mismatch') return;
            const valueIndex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$nodeFieldIndices$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["declarationValueIndex"])(decl);
            const mismatchValue = value.slice(loc.start.offset, loc.end.offset);
            const functionNode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$css$2d$tree$2f$lib$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["find"])(cssTreeValueNode, (node)=>node.type === 'Function' && node.loc !== undefined && loc.start.offset >= node.loc.start.offset && loc.end.offset <= node.loc.end.offset);
            if (functionNode?.loc) {
                const valueFunction = value.slice(functionNode.loc.start.offset, functionNode.loc.end.offset);
                const index = valueIndex + functionNode.loc.start.offset;
                const endIndex = index + valueFunction.length;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$report$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])({
                    message: messages.rejected,
                    messageArgs: [
                        prop,
                        valueFunction
                    ],
                    node: decl,
                    index,
                    endIndex,
                    result,
                    ruleName
                });
                return;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$report$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])({
                message: messages.rejected,
                messageArgs: [
                    prop,
                    mismatchValue
                ],
                node: decl,
                index: valueIndex + loc.start.offset,
                endIndex: valueIndex + loc.end.offset,
                result,
                ruleName
            });
        });
    };
};
/**
 * @see csstree/csstree#164 min, max, clamp
 * @see csstree/csstree#245 env
 * @param {import('css-tree').CssNode} cssTreeNode
 * @returns {boolean}
 */ function containsUnsupportedFunction(cssTreeNode) {
    return Boolean((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$css$2d$tree$2f$lib$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["find"])(cssTreeNode, (node)=>node.type === 'Function' && [
            'clamp',
            'min',
            'max',
            'env'
        ].includes(node.name)));
}
rule.ruleName = ruleName;
rule.messages = messages;
rule.meta = meta;
const __TURBOPACK__default__export__ = rule;
}}),

};

//# sourceMappingURL=node_modules_30e90fe0._.js.map