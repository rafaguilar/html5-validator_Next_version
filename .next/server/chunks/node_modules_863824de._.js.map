{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/uniteSets.mjs"],"sourcesContent":["/**\n * Unite two or more sets\n *\n * @param {Iterable<string>[]} args\n * @see {@link https://github.com/microsoft/TypeScript/issues/57228|GitHub}\n */\nexport default function uniteSets(...args) {\n\treturn new Set([...args].reduce((result, set) => [...result, ...set], []));\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACc,SAAS,UAAU,GAAG,IAAI;IACxC,OAAO,IAAI,IAAI;WAAI;KAAK,CAAC,MAAM,CAAC,CAAC,QAAQ,MAAQ;eAAI;eAAW;SAAI,EAAE,EAAE;AACzE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/reference/keywords.mjs"],"sourcesContent":["import uniteSets from '../utils/uniteSets.mjs';\n\n/** @type {ReadonlySet<string>} */\nexport const basicKeywords = new Set(['initial', 'inherit', 'revert', 'revert-layer', 'unset']);\n\n/** @type {ReadonlySet<string>} */\nexport const systemFontKeywords = uniteSets(basicKeywords, [\n\t'caption',\n\t'icon',\n\t'menu',\n\t'message-box',\n\t'small-caption',\n\t'status-bar',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const fontFamilyKeywords = uniteSets(basicKeywords, [\n\t'serif',\n\t'sans-serif',\n\t'cursive',\n\t'fantasy',\n\t'monospace',\n\t'system-ui',\n\t'ui-serif',\n\t'ui-sans-serif',\n\t'ui-monospace',\n\t'ui-rounded',\n\t'emoji',\n\t'math',\n\t'fangsong',\n]);\n\n/** @type {ReadonlySet<string>} */\nconst appleSystemFonts = new Set([\n\t'-apple-system',\n\t'-apple-system-headline',\n\t'-apple-system-body',\n\t'-apple-system-subheadline',\n\t'-apple-system-footnote',\n\t'-apple-system-caption1',\n\t'-apple-system-caption2',\n\t'-apple-system-short-headline',\n\t'-apple-system-short-body',\n\t'-apple-system-short-subheadline',\n\t'-apple-system-short-footnote',\n\t'-apple-system-short-caption1',\n\t'-apple-system-tall-body',\n\t'-apple-system-title0',\n\t'-apple-system-title1',\n\t'-apple-system-title2',\n\t'-apple-system-title3',\n\t'-apple-system-title4',\n]);\n\n/** @type {ReadonlySet<string>} */\nconst mozillaSystemFonts = new Set([\n\t'-moz-button',\n\t'-moz-desktop',\n\t'-moz-dialog',\n\t'-moz-document',\n\t'-moz-field',\n\t'-moz-fixed',\n\t'-moz-info',\n\t'-moz-list',\n\t'-moz-pull-down-menu',\n\t'-moz-window',\n\t'-moz-workspace',\n]);\n\n/** @type {ReadonlySet<string>} */\nconst webkitSystemFonts = new Set([\n\t'-webkit-body',\n\t'-webkit-control',\n\t'-webkit-mini-control',\n\t'-webkit-pictograph',\n\t'-webkit-small-control',\n\t'-webkit-standard',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const prefixedSystemFonts = uniteSets(\n\tappleSystemFonts,\n\tmozillaSystemFonts,\n\twebkitSystemFonts,\n);\n\n/** @type {ReadonlySet<string>} */\nexport const fontWeightRelativeKeywords = new Set(['bolder', 'lighter']);\n\n/** @type {ReadonlySet<string>} */\nexport const fontWeightAbsoluteKeywords = new Set(['normal', 'bold']);\n\n/** @type {ReadonlySet<string>} */\nexport const fontWeightNonNumericKeywords = uniteSets(\n\tfontWeightRelativeKeywords,\n\tfontWeightAbsoluteKeywords,\n);\n\n/** @type {ReadonlySet<string>} */\nconst fontWeightNumericKeywords = new Set([\n\t'100',\n\t'200',\n\t'300',\n\t'400',\n\t'500',\n\t'600',\n\t'700',\n\t'800',\n\t'900',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const fontWeightKeywords = uniteSets(\n\tbasicKeywords,\n\tfontWeightNonNumericKeywords,\n\tfontWeightNumericKeywords,\n);\n\n/** @type {ReadonlySet<string>} */\nconst fontStyleKeywords = uniteSets(basicKeywords, ['normal', 'italic', 'oblique']);\n\n/** @type {ReadonlySet<string>} */\nconst fontVariantCSS2Keywords = uniteSets(basicKeywords, ['normal', 'none', 'small-caps']);\n\n/** @type {ReadonlySet<string>} */\nconst fontStretchKeywords = uniteSets(basicKeywords, [\n\t'semi-condensed',\n\t'condensed',\n\t'extra-condensed',\n\t'ultra-condensed',\n\t'semi-expanded',\n\t'expanded',\n\t'extra-expanded',\n\t'ultra-expanded',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const fontSizeKeywords = uniteSets(basicKeywords, [\n\t'xx-small',\n\t'x-small',\n\t'small',\n\t'medium',\n\t'large',\n\t'x-large',\n\t'xx-large',\n\t'xxx-large',\n\t'larger',\n\t'smaller',\n\t'math',\n\t'-konq-xxx-large',\n\t'-webkit-xxx-large',\n]);\n\n/** @type {ReadonlySet<string>} */\nconst lineHeightKeywords = uniteSets(basicKeywords, ['normal']);\n\n/** @type {ReadonlySet<string>} */\nexport const fontShorthandKeywords = uniteSets(\n\tbasicKeywords,\n\tfontStyleKeywords,\n\tfontVariantCSS2Keywords,\n\tfontWeightKeywords,\n\tfontStretchKeywords,\n\tfontSizeKeywords,\n\tlineHeightKeywords,\n\tfontFamilyKeywords,\n);\n\n/** @type {ReadonlySet<string>} */\nexport const animationNameKeywords = uniteSets(basicKeywords, ['none']);\n\n/** @type {ReadonlySet<string>} */\nconst animationTimingFunctionKeywords = uniteSets(basicKeywords, [\n\t'linear',\n\t'ease',\n\t'ease-in',\n\t'ease-in-out',\n\t'ease-out',\n\t'step-start',\n\t'step-end',\n\t'steps',\n\t'cubic-bezier',\n]);\n\n/** @type {ReadonlySet<string>} */\nconst animationIterationCountKeywords = new Set(['infinite']);\n\n/** @type {ReadonlySet<string>} */\nconst animationDirectionKeywords = uniteSets(basicKeywords, [\n\t'normal',\n\t'reverse',\n\t'alternate',\n\t'alternate-reverse',\n]);\n\n/** @type {ReadonlySet<string>} */\nconst animationFillModeKeywords = new Set(['none', 'forwards', 'backwards', 'both']);\n\n/** @type {ReadonlySet<string>} */\nconst animationPlayStateKeywords = uniteSets(basicKeywords, ['running', 'paused']);\n\n/**\n * @see https://developer.mozilla.org/docs/Web/CSS/animation\n * @type {ReadonlySet<string>}\n */\nexport const animationShorthandKeywords = uniteSets(\n\tbasicKeywords,\n\tanimationNameKeywords,\n\tanimationTimingFunctionKeywords,\n\tanimationIterationCountKeywords,\n\tanimationDirectionKeywords,\n\tanimationFillModeKeywords,\n\tanimationPlayStateKeywords,\n);\n\n/** @type {ReadonlySet<string>} */\nexport const gridRowKeywords = uniteSets(basicKeywords, ['auto', 'span']);\n\n/** @type {ReadonlySet<string>} */\nexport const gridColumnKeywords = uniteSets(basicKeywords, ['auto', 'span']);\n\n/** @type {ReadonlySet<string>} */\nexport const gridAreaKeywords = uniteSets(basicKeywords, ['auto', 'span']);\n\n/**\n * @see https://developer.mozilla.org/docs/Web/CSS/counter-increment\n * @type {ReadonlySet<string>}\n */\nexport const counterIncrementKeywords = uniteSets(basicKeywords, ['none']);\n\n/** @type {ReadonlySet<string>} */\nexport const counterResetKeywords = uniteSets(basicKeywords, ['none']);\n\n/**\n * @see https://developer.mozilla.org/docs/Web/CSS/list-style-type\n * @type {ReadonlySet<string>}\n */\nexport const listStyleTypeKeywords = uniteSets(basicKeywords, [\n\t'none',\n\t'disc',\n\t'circle',\n\t'square',\n\t'decimal',\n\t'decimal-leading-zero',\n\t'cjk-decimal',\n\t'cjk-earthly-branch',\n\t'cjk-heavenly-stem',\n\t'cjk-ideographic',\n\t'lower-alpha',\n\t'upper-alpha',\n\t'lower-armenian',\n\t'upper-armenian',\n\t'lower-greek',\n\t'upper-greek',\n\t'lower-hexadecimal',\n\t'upper-hexadecimal',\n\t'lower-latin',\n\t'upper-latin',\n\t'lower-norwegian',\n\t'upper-norwegian',\n\t'lower-roman',\n\t'upper-roman',\n\t'afar',\n\t'amharic',\n\t'amharic-abegede',\n\t'arabic-indic',\n\t'armenian',\n\t'bengali',\n\t'cambodian',\n\t'devanagari',\n\t'ethiopic-abegede',\n\t'ethiopic-abegede-am-et',\n\t'ethiopic-abegede-gez',\n\t'ethiopic-abegede-ti-er',\n\t'ethiopic-abegede-ti-et',\n\t'ethiopic-halehame',\n\t'ethiopic-halehame-aa-er',\n\t'ethiopic-halehame-aa-et',\n\t'ethiopic-halehame-am',\n\t'ethiopic-halehame-am-et',\n\t'ethiopic-halehame-gez',\n\t'ethiopic-halehame-om-et',\n\t'ethiopic-halehame-sid-et',\n\t'ethiopic-halehame-so-et',\n\t'ethiopic-halehame-ti-er',\n\t'ethiopic-halehame-ti-et',\n\t'ethiopic-halehame-tig',\n\t'ethiopic-numeric',\n\t'georgian',\n\t'gujarati',\n\t'gurmukhi',\n\t'hangul',\n\t'hangul-consonant',\n\t'hebrew',\n\t'hiragana',\n\t'hiragana-iroha',\n\t'japanese-formal',\n\t'japanese-informal',\n\t'kannada',\n\t'katakana',\n\t'katakana-iroha',\n\t'khmer',\n\t'korean-hangul-formal',\n\t'korean-hanja-formal',\n\t'korean-hanja-informal',\n\t'lao',\n\t'malayalam',\n\t'mongolian',\n\t'myanmar',\n\t'oriya',\n\t'oromo',\n\t'persian',\n\t'sidama',\n\t'somali',\n\t'simp-chinese-formal',\n\t'simp-chinese-informal',\n\t'tamil',\n\t'telugu',\n\t'thai',\n\t'tibetan',\n\t'tigre',\n\t'tigrinya-er',\n\t'tigrinya-er-abegede',\n\t'tigrinya-et',\n\t'tigrinya-et-abegede',\n\t'trad-chinese-formal',\n\t'trad-chinese-informal',\n\t'urdu',\n\t'disclosure-open',\n\t'disclosure-closed',\n\t'asterisks',\n\t'binary',\n\t'footnotes',\n\t'octal',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const listStylePositionKeywords = uniteSets(basicKeywords, ['inside', 'outside']);\n\n/** @type {ReadonlySet<string>} */\nexport const listStyleImageKeywords = uniteSets(basicKeywords, ['none']);\n\n/** @type {ReadonlySet<string>} */\nexport const listStyleShorthandKeywords = uniteSets(\n\tbasicKeywords,\n\tlistStyleTypeKeywords,\n\tlistStylePositionKeywords,\n\tlistStyleImageKeywords,\n);\n\n/** @type {ReadonlySet<string>} */\nexport const camelCaseKeywords = new Set([\n\t'optimizeSpeed',\n\t'optimizeQuality',\n\t'optimizeLegibility',\n\t'geometricPrecision',\n\t'currentColor',\n\t'crispEdges',\n\t'visiblePainted',\n\t'visibleFill',\n\t'visibleStroke',\n\t'sRGB',\n\t'linearRGB',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const keyframeSelectorKeywords = new Set(['from', 'to']);\n\n/**\n * @see https://drafts.csswg.org/scroll-animations-1/#view-progress-timelines\n * @type {ReadonlySet<string>}\n */\nexport const namedTimelineRangeKeywords = new Set([\n\t'contain',\n\t'cover',\n\t'entry',\n\t'entry-crossing',\n\t'exit',\n\t'exit-crossing',\n]);\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Mozilla_Extensions#color_keywords\n * @type {ReadonlySet<string>}\n */\nconst prefixedSystemColorKeywords = new Set([\n\t'-moz-buttondefault',\n\t'-moz-buttonhoverface',\n\t'-moz-buttonhovertext',\n\t'-moz-cellhighlight',\n\t'-moz-cellhighlighttext',\n\t'-moz-combobox',\n\t'-moz-comboboxtext',\n\t'-moz-dialog',\n\t'-moz-dialogtext',\n\t'-moz-dragtargetzone',\n\t'-moz-eventreerow',\n\t'-moz-field',\n\t'-moz-fieldtext',\n\t'-moz-html-cellhighlight',\n\t'-moz-html-cellhighlighttext',\n\t'-moz-mac-accentdarkestshadow',\n\t'-moz-mac-accentdarkshadow',\n\t'-moz-mac-accentface',\n\t'-moz-mac-accentlightesthighlight',\n\t'-moz-mac-accentlightshadow',\n\t'-moz-mac-accentregularhighlight',\n\t'-moz-mac-accentregularshadow',\n\t'-moz-mac-chrome-active',\n\t'-moz-mac-chrome-inactive',\n\t'-moz-mac-focusring',\n\t'-moz-mac-menuselect',\n\t'-moz-mac-menushadow',\n\t'-moz-mac-menutextselect',\n\t'-moz-menubarhovertext',\n\t'-moz-menubartext',\n\t'-moz-menuhover',\n\t'-moz-menuhovertext',\n\t'-moz-nativehyperlinktext',\n\t'-moz-oddtreerow',\n\t'-moz-win-accentcolor',\n\t'-moz-win-accentcolortext',\n\t'-moz-win-communicationstext',\n\t'-moz-win-mediatext',\n\t'-ms-hotlight',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const deprecatedSystemColorKeywords = new Set([\n\t'activeborder',\n\t'activecaption',\n\t'appworkspace',\n\t'background',\n\t'buttonhighlight',\n\t'buttonshadow',\n\t'captiontext',\n\t'inactiveborder',\n\t'inactivecaption',\n\t'inactivecaptiontext',\n\t'infobackground',\n\t'infotext',\n\t'menu',\n\t'menutext',\n\t'scrollbar',\n\t'threeddarkshadow',\n\t'threedface',\n\t'threedhighlight',\n\t'threedlightshadow',\n\t'threedshadow',\n\t'window',\n\t'windowframe',\n\t'windowtext',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const systemColorsKeywords = uniteSets(\n\tprefixedSystemColorKeywords,\n\tdeprecatedSystemColorKeywords,\n\t[\n\t\t// https://www.w3.org/TR/css-color-4/#css-system-colors\n\t\t'accentcolor',\n\t\t'accentcolortext',\n\t\t'activetext',\n\t\t'buttonborder',\n\t\t'buttonface',\n\t\t'buttontext',\n\t\t'canvas',\n\t\t'canvastext',\n\t\t'field',\n\t\t'fieldtext',\n\t\t'graytext',\n\t\t'highlight',\n\t\t'highlighttext',\n\t\t'linktext',\n\t\t'mark',\n\t\t'marktext',\n\t\t'selecteditem',\n\t\t'selecteditemtext',\n\t\t'visitedtext',\n\t],\n);\n\n/**\n * @see https://www.w3.org/TR/css-color-4/#named-colors\n * @type {ReadonlySet<string>}\n */\nexport const namedColorsKeywords = new Set([\n\t'aliceblue',\n\t'antiquewhite',\n\t'aqua',\n\t'aquamarine',\n\t'azure',\n\t'beige',\n\t'bisque',\n\t'black',\n\t'blanchedalmond',\n\t'blue',\n\t'blueviolet',\n\t'brown',\n\t'burlywood',\n\t'cadetblue',\n\t'chartreuse',\n\t'chocolate',\n\t'coral',\n\t'cornflowerblue',\n\t'cornsilk',\n\t'crimson',\n\t'cyan',\n\t'darkblue',\n\t'darkcyan',\n\t'darkgoldenrod',\n\t'darkgray',\n\t'darkgreen',\n\t'darkgrey',\n\t'darkkhaki',\n\t'darkmagenta',\n\t'darkolivegreen',\n\t'darkorange',\n\t'darkorchid',\n\t'darkred',\n\t'darksalmon',\n\t'darkseagreen',\n\t'darkslateblue',\n\t'darkslategray',\n\t'darkslategrey',\n\t'darkturquoise',\n\t'darkviolet',\n\t'deeppink',\n\t'deepskyblue',\n\t'dimgray',\n\t'dimgrey',\n\t'dodgerblue',\n\t'firebrick',\n\t'floralwhite',\n\t'forestgreen',\n\t'fuchsia',\n\t'gainsboro',\n\t'ghostwhite',\n\t'gold',\n\t'goldenrod',\n\t'gray',\n\t'green',\n\t'greenyellow',\n\t'grey',\n\t'honeydew',\n\t'hotpink',\n\t'indianred',\n\t'indigo',\n\t'ivory',\n\t'khaki',\n\t'lavender',\n\t'lavenderblush',\n\t'lawngreen',\n\t'lemonchiffon',\n\t'lightblue',\n\t'lightcoral',\n\t'lightcyan',\n\t'lightgoldenrodyellow',\n\t'lightgray',\n\t'lightgreen',\n\t'lightgrey',\n\t'lightpink',\n\t'lightsalmon',\n\t'lightseagreen',\n\t'lightskyblue',\n\t'lightslategray',\n\t'lightslategrey',\n\t'lightsteelblue',\n\t'lightyellow',\n\t'lime',\n\t'limegreen',\n\t'linen',\n\t'magenta',\n\t'maroon',\n\t'mediumaquamarine',\n\t'mediumblue',\n\t'mediumorchid',\n\t'mediumpurple',\n\t'mediumseagreen',\n\t'mediumslateblue',\n\t'mediumspringgreen',\n\t'mediumturquoise',\n\t'mediumvioletred',\n\t'midnightblue',\n\t'mintcream',\n\t'mistyrose',\n\t'moccasin',\n\t'navajowhite',\n\t'navy',\n\t'oldlace',\n\t'olive',\n\t'olivedrab',\n\t'orange',\n\t'orangered',\n\t'orchid',\n\t'palegoldenrod',\n\t'palegreen',\n\t'paleturquoise',\n\t'palevioletred',\n\t'papayawhip',\n\t'peachpuff',\n\t'peru',\n\t'pink',\n\t'plum',\n\t'powderblue',\n\t'purple',\n\t'rebeccapurple',\n\t'red',\n\t'rosybrown',\n\t'royalblue',\n\t'saddlebrown',\n\t'salmon',\n\t'sandybrown',\n\t'seagreen',\n\t'seashell',\n\t'sienna',\n\t'silver',\n\t'skyblue',\n\t'slateblue',\n\t'slategray',\n\t'slategrey',\n\t'snow',\n\t'springgreen',\n\t'steelblue',\n\t'tan',\n\t'teal',\n\t'thistle',\n\t'tomato',\n\t'turquoise',\n\t'violet',\n\t'wheat',\n\t'white',\n\t'whitesmoke',\n\t'yellow',\n\t'yellowgreen',\n]);\n"],"names":[],"mappings":"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Q;CAAO;AAMlE,MAAM,2BAA2B,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EAAE,eAAe;IAAC;CAAO;AAGlE,MAAM,uBAAuB,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EAAE,eAAe;IAAC;CAAO;AAM9D,MAAM,wBAAwB,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EAAE,eAAe;IAC7D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAGM,MAAM,4BAA4B,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EAAE,eAAe;IAAC;IAAU;CAAU;AAGhF,MAAM,yBAAyB,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EAAE,eAAe;IAAC;CAAO;AAGhE,MAAM,6BAA6B,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EACjD,eACA,uBACA,2BACA;AAIM,MAAM,oBAAoB,IAAI,IAAI;IACxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAGM,MAAM,2BAA2B,IAAI,IAAI;IAAC;IAAQ;CAAK;AAMvD,MAAM,6BAA6B,IAAI,IAAI;IACjD;IACA;IACA;IACA;IACA;IACA;CACA;AAED;;;CAGC,GACD,MAAM,8BAA8B,IAAI,IAAI;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAGM,MAAM,gCAAgC,IAAI,IAAI;IACpD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAGM,MAAM,uBAAuB,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EAC3C,6BACA,+BACA;IACC,uDAAuD;IACvD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAOK,MAAM,sBAAsB,IAAI,IAAI;IAC1C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/postcss-value-parser/lib/unit.js"],"sourcesContent":["var minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n\n// Check if three code points would start a number\n// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number\nfunction likeNumber(value) {\n  var code = value.charCodeAt(0);\n  var nextCode;\n\n  if (code === plus || code === minus) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    var nextNextCode = value.charCodeAt(2);\n\n    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code === dot) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code >= 48 && code <= 57) {\n    return true;\n  }\n\n  return false;\n}\n\n// Consume a number\n// https://www.w3.org/TR/css-syntax-3/#consume-number\nmodule.exports = function(value) {\n  var pos = 0;\n  var length = value.length;\n  var code;\n  var nextCode;\n  var nextNextCode;\n\n  if (length === 0 || !likeNumber(value)) {\n    return false;\n  }\n\n  code = value.charCodeAt(pos);\n\n  if (code === plus || code === minus) {\n    pos++;\n  }\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code < 48 || code > 57) {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n\n  if (code === dot && nextCode >= 48 && nextCode <= 57) {\n    pos += 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n  nextNextCode = value.charCodeAt(pos + 2);\n\n  if (\n    (code === exp || code === EXP) &&\n    ((nextCode >= 48 && nextCode <= 57) ||\n      ((nextCode === plus || nextCode === minus) &&\n        nextNextCode >= 48 &&\n        nextNextCode <= 57))\n  ) {\n    pos += nextCode === plus || nextCode === minus ? 3 : 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  return {\n    number: value.slice(0, pos),\n    unit: value.slice(pos)\n  };\n};\n"],"names":[],"mappings":"AAAA,IAAI,QAAQ,IAAI,UAAU,CAAC;AAC3B,IAAI,OAAO,IAAI,UAAU,CAAC;AAC1B,IAAI,MAAM,IAAI,UAAU,CAAC;AACzB,IAAI,MAAM,IAAI,UAAU,CAAC;AACzB,IAAI,MAAM,IAAI,UAAU,CAAC;AAEzB,kDAAkD;AAClD,2DAA2D;AAC3D,SAAS,WAAW,KAAK;IACvB,IAAI,OAAO,MAAM,UAAU,CAAC;IAC5B,IAAI;IAEJ,IAAI,SAAS,QAAQ,SAAS,OAAO;QACnC,WAAW,MAAM,UAAU,CAAC;QAE5B,IAAI,YAAY,MAAM,YAAY,IAAI;YACpC,OAAO;QACT;QAEA,IAAI,eAAe,MAAM,UAAU,CAAC;QAEpC,IAAI,aAAa,OAAO,gBAAgB,MAAM,gBAAgB,IAAI;YAChE,OAAO;QACT;QAEA,OAAO;IACT;IAEA,IAAI,SAAS,KAAK;QAChB,WAAW,MAAM,UAAU,CAAC;QAE5B,IAAI,YAAY,MAAM,YAAY,IAAI;YACpC,OAAO;QACT;QAEA,OAAO;IACT;IAEA,IAAI,QAAQ,MAAM,QAAQ,IAAI;QAC5B,OAAO;IACT;IAEA,OAAO;AACT;AAEA,mBAAmB;AACnB,qDAAqD;AACrD,OAAO,OAAO,GAAG,SAAS,KAAK;IAC7B,IAAI,MAAM;IACV,IAAI,SAAS,MAAM,MAAM;IACzB,IAAI;IACJ,IAAI;IACJ,IAAI;IAEJ,IAAI,WAAW,KAAK,CAAC,WAAW,QAAQ;QACtC,OAAO;IACT;IAEA,OAAO,MAAM,UAAU,CAAC;IAExB,IAAI,SAAS,QAAQ,SAAS,OAAO;QACnC;IACF;IAEA,MAAO,MAAM,OAAQ;QACnB,OAAO,MAAM,UAAU,CAAC;QAExB,IAAI,OAAO,MAAM,OAAO,IAAI;YAC1B;QACF;QAEA,OAAO;IACT;IAEA,OAAO,MAAM,UAAU,CAAC;IACxB,WAAW,MAAM,UAAU,CAAC,MAAM;IAElC,IAAI,SAAS,OAAO,YAAY,MAAM,YAAY,IAAI;QACpD,OAAO;QAEP,MAAO,MAAM,OAAQ;YACnB,OAAO,MAAM,UAAU,CAAC;YAExB,IAAI,OAAO,MAAM,OAAO,IAAI;gBAC1B;YACF;YAEA,OAAO;QACT;IACF;IAEA,OAAO,MAAM,UAAU,CAAC;IACxB,WAAW,MAAM,UAAU,CAAC,MAAM;IAClC,eAAe,MAAM,UAAU,CAAC,MAAM;IAEtC,IACE,CAAC,SAAS,OAAO,SAAS,GAAG,KAC7B,CAAC,AAAC,YAAY,MAAM,YAAY,MAC7B,CAAC,aAAa,QAAQ,aAAa,KAAK,KACvC,gBAAgB,MAChB,gBAAgB,EAAG,GACvB;QACA,OAAO,aAAa,QAAQ,aAAa,QAAQ,IAAI;QAErD,MAAO,MAAM,OAAQ;YACnB,OAAO,MAAM,UAAU,CAAC;YAExB,IAAI,OAAO,MAAM,OAAO,IAAI;gBAC1B;YACF;YAEA,OAAO;QACT;IACF;IAEA,OAAO;QACL,QAAQ,MAAM,KAAK,CAAC,GAAG;QACvB,MAAM,MAAM,KAAK,CAAC;IACpB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 711, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/postcss-value-parser/lib/parse.js"],"sourcesContent":["var openParentheses = \"(\".charCodeAt(0);\nvar closeParentheses = \")\".charCodeAt(0);\nvar singleQuote = \"'\".charCodeAt(0);\nvar doubleQuote = '\"'.charCodeAt(0);\nvar backslash = \"\\\\\".charCodeAt(0);\nvar slash = \"/\".charCodeAt(0);\nvar comma = \",\".charCodeAt(0);\nvar colon = \":\".charCodeAt(0);\nvar star = \"*\".charCodeAt(0);\nvar uLower = \"u\".charCodeAt(0);\nvar uUpper = \"U\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar isUnicodeRange = /^[a-f0-9?-]+$/i;\n\nmodule.exports = function(input) {\n  var tokens = [];\n  var value = input;\n\n  var next,\n    quote,\n    prev,\n    token,\n    escape,\n    escapePos,\n    whitespacePos,\n    parenthesesOpenPos;\n  var pos = 0;\n  var code = value.charCodeAt(pos);\n  var max = value.length;\n  var stack = [{ nodes: tokens }];\n  var balanced = 0;\n  var parent;\n\n  var name = \"\";\n  var before = \"\";\n  var after = \"\";\n\n  while (pos < max) {\n    // Whitespaces\n    if (code <= 32) {\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      token = value.slice(pos, next);\n\n      prev = tokens[tokens.length - 1];\n      if (code === closeParentheses && balanced) {\n        after = token;\n      } else if (prev && prev.type === \"div\") {\n        prev.after = token;\n        prev.sourceEndIndex += token.length;\n      } else if (\n        code === comma ||\n        code === colon ||\n        (code === slash &&\n          value.charCodeAt(next + 1) !== star &&\n          (!parent ||\n            (parent && parent.type === \"function\" && parent.value !== \"calc\")))\n      ) {\n        before = token;\n      } else {\n        tokens.push({\n          type: \"space\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n\n      // Quotes\n    } else if (code === singleQuote || code === doubleQuote) {\n      next = pos;\n      quote = code === singleQuote ? \"'\" : '\"';\n      token = {\n        type: \"string\",\n        sourceIndex: pos,\n        quote: quote\n      };\n      do {\n        escape = false;\n        next = value.indexOf(quote, next + 1);\n        if (~next) {\n          escapePos = next;\n          while (value.charCodeAt(escapePos - 1) === backslash) {\n            escapePos -= 1;\n            escape = !escape;\n          }\n        } else {\n          value += quote;\n          next = value.length - 1;\n          token.unclosed = true;\n        }\n      } while (escape);\n      token.value = value.slice(pos + 1, next);\n      token.sourceEndIndex = token.unclosed ? next : next + 1;\n      tokens.push(token);\n      pos = next + 1;\n      code = value.charCodeAt(pos);\n\n      // Comments\n    } else if (code === slash && value.charCodeAt(pos + 1) === star) {\n      next = value.indexOf(\"*/\", pos);\n\n      token = {\n        type: \"comment\",\n        sourceIndex: pos,\n        sourceEndIndex: next + 2\n      };\n\n      if (next === -1) {\n        token.unclosed = true;\n        next = value.length;\n        token.sourceEndIndex = next;\n      }\n\n      token.value = value.slice(pos + 2, next);\n      tokens.push(token);\n\n      pos = next + 2;\n      code = value.charCodeAt(pos);\n\n      // Operation within calc\n    } else if (\n      (code === slash || code === star) &&\n      parent &&\n      parent.type === \"function\" &&\n      parent.value === \"calc\"\n    ) {\n      token = value[pos];\n      tokens.push({\n        type: \"word\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token\n      });\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Dividers\n    } else if (code === slash || code === comma || code === colon) {\n      token = value[pos];\n\n      tokens.push({\n        type: \"div\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token,\n        before: before,\n        after: \"\"\n      });\n      before = \"\";\n\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Open parentheses\n    } else if (openParentheses === code) {\n      // Whitespaces after open parentheses\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      parenthesesOpenPos = pos;\n      token = {\n        type: \"function\",\n        sourceIndex: pos - name.length,\n        value: name,\n        before: value.slice(parenthesesOpenPos + 1, next)\n      };\n      pos = next;\n\n      if (name === \"url\" && code !== singleQuote && code !== doubleQuote) {\n        next -= 1;\n        do {\n          escape = false;\n          next = value.indexOf(\")\", next + 1);\n          if (~next) {\n            escapePos = next;\n            while (value.charCodeAt(escapePos - 1) === backslash) {\n              escapePos -= 1;\n              escape = !escape;\n            }\n          } else {\n            value += \")\";\n            next = value.length - 1;\n            token.unclosed = true;\n          }\n        } while (escape);\n        // Whitespaces before closed\n        whitespacePos = next;\n        do {\n          whitespacePos -= 1;\n          code = value.charCodeAt(whitespacePos);\n        } while (code <= 32);\n        if (parenthesesOpenPos < whitespacePos) {\n          if (pos !== whitespacePos + 1) {\n            token.nodes = [\n              {\n                type: \"word\",\n                sourceIndex: pos,\n                sourceEndIndex: whitespacePos + 1,\n                value: value.slice(pos, whitespacePos + 1)\n              }\n            ];\n          } else {\n            token.nodes = [];\n          }\n          if (token.unclosed && whitespacePos + 1 !== next) {\n            token.after = \"\";\n            token.nodes.push({\n              type: \"space\",\n              sourceIndex: whitespacePos + 1,\n              sourceEndIndex: next,\n              value: value.slice(whitespacePos + 1, next)\n            });\n          } else {\n            token.after = value.slice(whitespacePos + 1, next);\n            token.sourceEndIndex = next;\n          }\n        } else {\n          token.after = \"\";\n          token.nodes = [];\n        }\n        pos = next + 1;\n        token.sourceEndIndex = token.unclosed ? next : pos;\n        code = value.charCodeAt(pos);\n        tokens.push(token);\n      } else {\n        balanced += 1;\n        token.after = \"\";\n        token.sourceEndIndex = pos + 1;\n        tokens.push(token);\n        stack.push(token);\n        tokens = token.nodes = [];\n        parent = token;\n      }\n      name = \"\";\n\n      // Close parentheses\n    } else if (closeParentheses === code && balanced) {\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      parent.after = after;\n      parent.sourceEndIndex += after.length;\n      after = \"\";\n      balanced -= 1;\n      stack[stack.length - 1].sourceEndIndex = pos;\n      stack.pop();\n      parent = stack[balanced];\n      tokens = parent.nodes;\n\n      // Words\n    } else {\n      next = pos;\n      do {\n        if (code === backslash) {\n          next += 1;\n        }\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (\n        next < max &&\n        !(\n          code <= 32 ||\n          code === singleQuote ||\n          code === doubleQuote ||\n          code === comma ||\n          code === colon ||\n          code === slash ||\n          code === openParentheses ||\n          (code === star &&\n            parent &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === slash &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === closeParentheses && balanced)\n        )\n      );\n      token = value.slice(pos, next);\n\n      if (openParentheses === code) {\n        name = token;\n      } else if (\n        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&\n        plus === token.charCodeAt(1) &&\n        isUnicodeRange.test(token.slice(2))\n      ) {\n        tokens.push({\n          type: \"unicode-range\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      } else {\n        tokens.push({\n          type: \"word\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n    }\n  }\n\n  for (pos = stack.length - 1; pos; pos -= 1) {\n    stack[pos].unclosed = true;\n    stack[pos].sourceEndIndex = value.length;\n  }\n\n  return stack[0].nodes;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 974, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/postcss-value-parser/lib/walk.js"],"sourcesContent":["module.exports = function walk(nodes, cb, bubble) {\n  var i, max, node, result;\n\n  for (i = 0, max = nodes.length; i < max; i += 1) {\n    node = nodes[i];\n    if (!bubble) {\n      result = cb(node, i, nodes);\n    }\n\n    if (\n      result !== false &&\n      node.type === \"function\" &&\n      Array.isArray(node.nodes)\n    ) {\n      walk(node.nodes, cb, bubble);\n    }\n\n    if (bubble) {\n      cb(node, i, nodes);\n    }\n  }\n};\n"],"names":[],"mappings":"AAAA,OAAO,OAAO,GAAG,SAAS,KAAK,KAAK,EAAE,EAAE,EAAE,MAAM;IAC9C,IAAI,GAAG,KAAK,MAAM;IAElB,IAAK,IAAI,GAAG,MAAM,MAAM,MAAM,EAAE,IAAI,KAAK,KAAK,EAAG;QAC/C,OAAO,KAAK,CAAC,EAAE;QACf,IAAI,CAAC,QAAQ;YACX,SAAS,GAAG,MAAM,GAAG;QACvB;QAEA,IACE,WAAW,SACX,KAAK,IAAI,KAAK,cACd,MAAM,OAAO,CAAC,KAAK,KAAK,GACxB;YACA,KAAK,KAAK,KAAK,EAAE,IAAI;QACvB;QAEA,IAAI,QAAQ;YACV,GAAG,MAAM,GAAG;QACd;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 994, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/postcss-value-parser/lib/stringify.js"],"sourcesContent":["function stringifyNode(node, custom) {\n  var type = node.type;\n  var value = node.value;\n  var buf;\n  var customResult;\n\n  if (custom && (customResult = custom(node)) !== undefined) {\n    return customResult;\n  } else if (type === \"word\" || type === \"space\") {\n    return value;\n  } else if (type === \"string\") {\n    buf = node.quote || \"\";\n    return buf + value + (node.unclosed ? \"\" : buf);\n  } else if (type === \"comment\") {\n    return \"/*\" + value + (node.unclosed ? \"\" : \"*/\");\n  } else if (type === \"div\") {\n    return (node.before || \"\") + value + (node.after || \"\");\n  } else if (Array.isArray(node.nodes)) {\n    buf = stringify(node.nodes, custom);\n    if (type !== \"function\") {\n      return buf;\n    }\n    return (\n      value +\n      \"(\" +\n      (node.before || \"\") +\n      buf +\n      (node.after || \"\") +\n      (node.unclosed ? \"\" : \")\")\n    );\n  }\n  return value;\n}\n\nfunction stringify(nodes, custom) {\n  var result, i;\n\n  if (Array.isArray(nodes)) {\n    result = \"\";\n    for (i = nodes.length - 1; ~i; i -= 1) {\n      result = stringifyNode(nodes[i], custom) + result;\n    }\n    return result;\n  }\n  return stringifyNode(nodes, custom);\n}\n\nmodule.exports = stringify;\n"],"names":[],"mappings":"AAAA,SAAS,cAAc,IAAI,EAAE,MAAM;IACjC,IAAI,OAAO,KAAK,IAAI;IACpB,IAAI,QAAQ,KAAK,KAAK;IACtB,IAAI;IACJ,IAAI;IAEJ,IAAI,UAAU,CAAC,eAAe,OAAO,KAAK,MAAM,WAAW;QACzD,OAAO;IACT,OAAO,IAAI,SAAS,UAAU,SAAS,SAAS;QAC9C,OAAO;IACT,OAAO,IAAI,SAAS,UAAU;QAC5B,MAAM,KAAK,KAAK,IAAI;QACpB,OAAO,MAAM,QAAQ,CAAC,KAAK,QAAQ,GAAG,KAAK,GAAG;IAChD,OAAO,IAAI,SAAS,WAAW;QAC7B,OAAO,OAAO,QAAQ,CAAC,KAAK,QAAQ,GAAG,KAAK,IAAI;IAClD,OAAO,IAAI,SAAS,OAAO;QACzB,OAAO,CAAC,KAAK,MAAM,IAAI,EAAE,IAAI,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAE;IACxD,OAAO,IAAI,MAAM,OAAO,CAAC,KAAK,KAAK,GAAG;QACpC,MAAM,UAAU,KAAK,KAAK,EAAE;QAC5B,IAAI,SAAS,YAAY;YACvB,OAAO;QACT;QACA,OACE,QACA,MACA,CAAC,KAAK,MAAM,IAAI,EAAE,IAClB,MACA,CAAC,KAAK,KAAK,IAAI,EAAE,IACjB,CAAC,KAAK,QAAQ,GAAG,KAAK,GAAG;IAE7B;IACA,OAAO;AACT;AAEA,SAAS,UAAU,KAAK,EAAE,MAAM;IAC9B,IAAI,QAAQ;IAEZ,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,SAAS;QACT,IAAK,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,KAAK,EAAG;YACrC,SAAS,cAAc,KAAK,CAAC,EAAE,EAAE,UAAU;QAC7C;QACA,OAAO;IACT;IACA,OAAO,cAAc,OAAO;AAC9B;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1036, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/postcss-value-parser/lib/index.js"],"sourcesContent":["var parse = require(\"./parse\");\nvar walk = require(\"./walk\");\nvar stringify = require(\"./stringify\");\n\nfunction ValueParser(value) {\n  if (this instanceof ValueParser) {\n    this.nodes = parse(value);\n    return this;\n  }\n  return new ValueParser(value);\n}\n\nValueParser.prototype.toString = function() {\n  return Array.isArray(this.nodes) ? stringify(this.nodes) : \"\";\n};\n\nValueParser.prototype.walk = function(cb, bubble) {\n  walk(this.nodes, cb, bubble);\n  return this;\n};\n\nValueParser.unit = require(\"./unit\");\n\nValueParser.walk = walk;\n\nValueParser.stringify = stringify;\n\nmodule.exports = ValueParser;\n"],"names":[],"mappings":"AAAA,IAAI;AACJ,IAAI;AACJ,IAAI;AAEJ,SAAS,YAAY,KAAK;IACxB,IAAI,IAAI,YAAY,aAAa;QAC/B,IAAI,CAAC,KAAK,GAAG,MAAM;QACnB,OAAO,IAAI;IACb;IACA,OAAO,IAAI,YAAY;AACzB;AAEA,YAAY,SAAS,CAAC,QAAQ,GAAG;IAC/B,OAAO,MAAM,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,UAAU,IAAI,CAAC,KAAK,IAAI;AAC7D;AAEA,YAAY,SAAS,CAAC,IAAI,GAAG,SAAS,EAAE,EAAE,MAAM;IAC9C,KAAK,IAAI,CAAC,KAAK,EAAE,IAAI;IACrB,OAAO,IAAI;AACb;AAEA,YAAY,IAAI;AAEhB,YAAY,IAAI,GAAG;AAEnB,YAAY,SAAS,GAAG;AAExB,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1063, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isNumbery.mjs"],"sourcesContent":["/**\n * Check whether it's a number or a number-like string:\n * i.e. when coerced to a number it == itself.\n *\n * @param {string | number} value\n */\nexport default function isNumbery(value) {\n\treturn value.toString().trim().length !== 0 && Number(value) == value; // eslint-disable-line eqeqeq\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACc,SAAS,UAAU,KAAK;IACtC,OAAO,MAAM,QAAQ,GAAG,IAAI,GAAG,MAAM,KAAK,KAAK,OAAO,UAAU,OAAO,6BAA6B;AACrG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1080, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasLessInterpolation.mjs"],"sourcesContent":["const HAS_LESS_INTERPOLATION = /@\\{.+?\\}/;\n\n/**\n * Check whether a string has less interpolation\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has less interpolation\n */\nexport default function hasLessInterpolation(string) {\n\treturn HAS_LESS_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,yBAAyB;AAQhB,SAAS,qBAAqB,MAAM;IAClD,OAAO,uBAAuB,IAAI,CAAC;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1093, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasPsvInterpolation.mjs"],"sourcesContent":["const HAS_PSV_INTERPOLATION = /\\$\\(.+?\\)/;\n\n/**\n * Check whether a string has postcss-simple-vars interpolation\n *\n * @param {string} string\n * @returns {boolean}\n */\nexport default function hasPsvInterpolation(string) {\n\treturn HAS_PSV_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,wBAAwB;AAQf,SAAS,oBAAoB,MAAM;IACjD,OAAO,sBAAsB,IAAI,CAAC;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1106, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasScssInterpolation.mjs"],"sourcesContent":["const HAS_SCSS_INTERPOLATION = /#\\{.+?\\}/s;\n\n/**\n * Check whether a string has scss interpolation\n *\n * @param {string} string\n * @returns {boolean}\n */\nexport default function hasScssInterpolation(string) {\n\treturn HAS_SCSS_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,yBAAyB;AAQhB,SAAS,qBAAqB,MAAM;IAClD,OAAO,uBAAuB,IAAI,CAAC;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1119, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasTplInterpolation.mjs"],"sourcesContent":["const HAS_TPL_INTERPOLATION = /\\{.+?\\}/s;\n\n/**\n * Check whether a string has JS template literal interpolation or HTML-like template\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has template literal interpolation\n */\nexport default function hasTplInterpolation(string) {\n\treturn HAS_TPL_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,wBAAwB;AAQf,SAAS,oBAAoB,MAAM;IACjD,OAAO,sBAAsB,IAAI,CAAC;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1132, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasInterpolation.mjs"],"sourcesContent":["import hasLessInterpolation from './hasLessInterpolation.mjs';\nimport hasPsvInterpolation from './hasPsvInterpolation.mjs';\nimport hasScssInterpolation from './hasScssInterpolation.mjs';\nimport hasTplInterpolation from './hasTplInterpolation.mjs';\n\n/**\n * Check whether a string has interpolation\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has interpolation\n */\nexport default function hasInterpolation(string) {\n\t// SCSS or Less interpolation\n\tif (\n\t\thasLessInterpolation(string) ||\n\t\thasScssInterpolation(string) ||\n\t\thasTplInterpolation(string) ||\n\t\thasPsvInterpolation(string)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAQe,SAAS,iBAAiB,MAAM;IAC9C,6BAA6B;IAC7B,IACC,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE,WACrB,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE,WACrB,CAAA,GAAA,mKAAA,CAAA,UAAmB,AAAD,EAAE,WACpB,CAAA,GAAA,mKAAA,CAAA,UAAmB,AAAD,EAAE,SACnB;QACD,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1156, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isStandardSyntaxValue.mjs"],"sourcesContent":["import hasInterpolation from './hasInterpolation.mjs';\n\n/**\n * Check whether a value is standard\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport default function isStandardSyntaxValue(value) {\n\tlet normalizedValue = value;\n\n\t// Ignore operators before variables (example -$variable)\n\tif (/^[-+*/]/.test(value.charAt(0))) {\n\t\tnormalizedValue = normalizedValue.slice(1);\n\t}\n\n\t// SCSS variable (example $variable)\n\t// styled component interpolation (example ${foo => foo.bar})\n\tif (normalizedValue.startsWith('$')) {\n\t\treturn false;\n\t}\n\n\t// SCSS namespace (example namespace.$variable)\n\tif (/^.+\\.\\$/.test(value)) {\n\t\treturn false;\n\t}\n\n\t// SCSS namespace (example namespace.function-name())\n\tif (/^.+\\.[-\\w]+\\(/.test(value)) {\n\t\treturn false;\n\t}\n\n\t// Less variable\n\tif (normalizedValue.startsWith('@')) {\n\t\treturn false;\n\t}\n\n\t// SCSS or Less interpolation\n\tif (hasInterpolation(normalizedValue)) {\n\t\treturn false;\n\t}\n\n\t// WebExtension replacement keyword used by Chrome/Firefox\n\t// more information: https://developer.chrome.com/extensions/i18n\n\t// and https://github.com/stylelint/stylelint/issues/4707\n\tif (/__MSG_\\S+__/.test(value)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"],"names":[],"mappings":";;;AAAA;;AAQe,SAAS,sBAAsB,KAAK;IAClD,IAAI,kBAAkB;IAEtB,yDAAyD;IACzD,IAAI,UAAU,IAAI,CAAC,MAAM,MAAM,CAAC,KAAK;QACpC,kBAAkB,gBAAgB,KAAK,CAAC;IACzC;IAEA,oCAAoC;IACpC,6DAA6D;IAC7D,IAAI,gBAAgB,UAAU,CAAC,MAAM;QACpC,OAAO;IACR;IAEA,+CAA+C;IAC/C,IAAI,UAAU,IAAI,CAAC,QAAQ;QAC1B,OAAO;IACR;IAEA,qDAAqD;IACrD,IAAI,gBAAgB,IAAI,CAAC,QAAQ;QAChC,OAAO;IACR;IAEA,gBAAgB;IAChB,IAAI,gBAAgB,UAAU,CAAC,MAAM;QACpC,OAAO;IACR;IAEA,6BAA6B;IAC7B,IAAI,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,kBAAkB;QACtC,OAAO;IACR;IAEA,0DAA0D;IAC1D,iEAAiE;IACjE,yDAAyD;IACzD,IAAI,cAAc,IAAI,CAAC,QAAQ;QAC9B,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1202, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/reference/units.mjs"],"sourcesContent":["import uniteSets from '../utils/uniteSets.mjs';\n\n/** @type {ReadonlySet<string>} */\nexport const lengthUnits = new Set([\n\t// Font-relative length units\n\t'cap',\n\t'ch',\n\t'em',\n\t'ex',\n\t'ic',\n\t'lh',\n\t'rcap',\n\t'rch',\n\t'rem',\n\t'rex',\n\t'ric',\n\t'rlh',\n\t// Viewport-percentage lengths\n\t'dvb',\n\t'dvh',\n\t'dvi',\n\t'dvmax',\n\t'dvmin',\n\t'dvw',\n\t'lvb',\n\t'lvh',\n\t'lvi',\n\t'lvmax',\n\t'lvmin',\n\t'lvw',\n\t'svb',\n\t'svh',\n\t'svi',\n\t'svmax',\n\t'svmin',\n\t'svw',\n\t'vb',\n\t'vh',\n\t'vi',\n\t'vw',\n\t'vmin',\n\t'vmax',\n\t'vm',\n\t// Absolute length units\n\t'px',\n\t'mm',\n\t'cm',\n\t'in',\n\t'pt',\n\t'pc',\n\t'q',\n\t'mozmm',\n\t// Flexible length units\n\t'fr',\n\t// Container query units\n\t'cqw',\n\t'cqh',\n\t'cqi',\n\t'cqb',\n\t'cqmin',\n\t'cqmax',\n]);\n\n/** @type {ReadonlySet<string>} */\nexport const resolutionUnits = new Set(['dpi', 'dpcm', 'dppx', 'x']);\n\n/** @type {ReadonlySet<string>} */\nexport const units = uniteSets(lengthUnits, resolutionUnits, [\n\t// Relative length units\n\t'%',\n\t// Time length units\n\t's',\n\t'ms',\n\t// Angle\n\t'deg',\n\t'grad',\n\t'turn',\n\t'rad',\n\t// Frequency\n\t'Hz',\n\t'kHz',\n]);\n"],"names":[],"mappings":";;;;;AAAA;;AAGO,MAAM,cAAc,IAAI,IAAI;IAClC,6BAA6B;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,8BAA8B;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,wBAAwB;IACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,wBAAwB;IACxB;IACA,wBAAwB;IACxB;IACA;IACA;IACA;IACA;IACA;CACA;AAGM,MAAM,kBAAkB,IAAI,IAAI;IAAC;IAAO;IAAQ;IAAQ;CAAI;AAG5D,MAAM,QAAQ,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EAAE,aAAa,iBAAiB;IAC5D,wBAAwB;IACxB;IACA,oBAAoB;IACpB;IACA;IACA,QAAQ;IACR;IACA;IACA;IACA;IACA,YAAY;IACZ;IACA;CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1295, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isValidFontSize.mjs"],"sourcesContent":["import valueParser from 'postcss-value-parser';\n\nimport { fontSizeKeywords } from '../reference/keywords.mjs';\nimport { lengthUnits } from '../reference/units.mjs';\n\n/**\n * Check if a word is a font-size value.\n *\n * @param {string} word\n * @returns {boolean}\n */\nexport default function isValidFontSize(word) {\n\tif (!word) {\n\t\treturn false;\n\t}\n\n\tif (fontSizeKeywords.has(word)) {\n\t\treturn true;\n\t}\n\n\tconst numberUnit = valueParser.unit(word);\n\n\tif (!numberUnit) {\n\t\treturn false;\n\t}\n\n\tconst unit = numberUnit.unit;\n\n\tif (unit === '%') {\n\t\treturn true;\n\t}\n\n\tif (lengthUnits.has(unit.toLowerCase())) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AACA;;;;AAQe,SAAS,gBAAgB,IAAI;IAC3C,IAAI,CAAC,MAAM;QACV,OAAO;IACR;IAEA,IAAI,4JAAA,CAAA,mBAAgB,CAAC,GAAG,CAAC,OAAO;QAC/B,OAAO;IACR;IAEA,MAAM,aAAa,4JAAA,CAAA,UAAW,CAAC,IAAI,CAAC;IAEpC,IAAI,CAAC,YAAY;QAChB,OAAO;IACR;IAEA,MAAM,OAAO,WAAW,IAAI;IAE5B,IAAI,SAAS,KAAK;QACjB,OAAO;IACR;IAEA,IAAI,yJAAA,CAAA,cAAW,CAAC,GAAG,CAAC,KAAK,WAAW,KAAK;QACxC,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1330, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isVariable.mjs"],"sourcesContent":["/**\n * Check whether a word is a variable i.e var(--custom-property).\n *\n * @param {string} word\n * @returns {boolean}\n */\nexport default function isVariable(word) {\n\treturn word.toLowerCase().startsWith('var(');\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACc,SAAS,WAAW,IAAI;IACtC,OAAO,KAAK,WAAW,GAAG,UAAU,CAAC;AACtC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1347, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/findFontFamily.mjs"],"sourcesContent":["import postcssValueParser from 'postcss-value-parser';\n\nimport {\n\tbasicKeywords,\n\tfontFamilyKeywords,\n\tfontShorthandKeywords,\n\tfontSizeKeywords,\n} from '../reference/keywords.mjs';\nimport { assert } from './validateTypes.mjs';\nimport isNumbery from './isNumbery.mjs';\nimport isStandardSyntaxValue from './isStandardSyntaxValue.mjs';\nimport isValidFontSize from './isValidFontSize.mjs';\nimport isVariable from './isVariable.mjs';\n\nconst nodeTypesToCheck = new Set(['word', 'string', 'space', 'div']);\n\n/** @typedef {import('postcss-value-parser').Node} Node */\n\n/**\n * @param {Node} firstNode\n * @param {Node} secondNode\n * @param {string | null} charactersBetween\n * @returns {Node}\n */\nfunction joinValueNodes(firstNode, secondNode, charactersBetween) {\n\tfirstNode.value = firstNode.value + charactersBetween + secondNode.value;\n\n\treturn firstNode;\n}\n\n/**\n * @param {Node} valueNode\n * @returns {valueNode is postcssValueParser.DivNode & { value: ',' }}\n */\nconst isCommaDiv = (valueNode) => valueNode.type === 'div' && valueNode.value === ',';\n\n/**\n * Get the font-families within a `font` shorthand property value.\n *\n * @param {string} value\n * @returns {Node[]} Collection font-family nodes\n */\nexport default function findFontFamily(value) {\n\t/** @type {Node[]} */\n\tconst fontFamilies = [];\n\n\tconst valueNodes = postcssValueParser(value);\n\tconst { nodes: children } = valueNodes;\n\n\t// Handle `inherit`, `initial` and etc\n\tif (children.length === 1 && children[0] && basicKeywords.has(children[0].value.toLowerCase())) {\n\t\treturn [children[0]];\n\t}\n\n\tlet needMergeNodesByValue = false;\n\t/** @type {string | null} */\n\tlet mergeCharacters = null;\n\n\tvalueNodes.walk((valueNode, index, nodes) => {\n\t\tif (valueNode.type === 'function') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!nodeTypesToCheck.has(valueNode.type)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst valueLowerCase = valueNode.value.toLowerCase();\n\n\t\t// Ignore non standard syntax\n\t\tif (!isStandardSyntaxValue(valueLowerCase)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore variables\n\t\tif (isVariable(valueLowerCase)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isFontFamilyKeyword = fontFamilyKeywords.has(valueLowerCase);\n\n\t\t// Ignore keywords for other font parts\n\t\tif (!isFontFamilyKeyword && fontShorthandKeywords.has(valueLowerCase)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore font-sizes\n\t\t// NOTE: `math` is a keyword for both `font-family` and `font-size`.\n\t\tif (!isFontFamilyKeyword && isValidFontSize(valueNode.value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextNode = nodes[index + 1];\n\t\tconst prevNode = nodes[index - 1];\n\t\tconst prevPrevNode = nodes[index - 2];\n\t\tconst allPrevNodes = nodes.slice(0, index);\n\n\t\t// When the value is a keyword for both `font-family` and `font-size` (e.g. `math`),\n\t\t// if its next node is a comma, or if it is already the last node, or if there is any comma before it,\n\t\t// then treat it as a `font-family` keyword, otherwise treat it as a `font-size` keyword.\n\t\tif (\n\t\t\tisFontFamilyKeyword &&\n\t\t\tfontSizeKeywords.has(valueLowerCase) &&\n\t\t\t!(!nextNode || isCommaDiv(nextNode) || allPrevNodes.find(isCommaDiv))\n\t\t)\n\t\t\treturn;\n\n\t\t// Ignore anything come after a <font-size>/, because it's a line-height\n\t\tif (prevNode && prevNode.value === '/' && prevPrevNode && isValidFontSize(prevPrevNode.value)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore number values\n\t\tif (isNumbery(valueLowerCase)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Detect when a space or comma is dividing a list of font-families, and save the joining character.\n\t\tif (\n\t\t\t(valueNode.type === 'space' || (valueNode.type === 'div' && valueNode.value !== ',')) &&\n\t\t\tfontFamilies.length !== 0\n\t\t) {\n\t\t\tneedMergeNodesByValue = true;\n\t\t\tmergeCharacters = valueNode.value;\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (valueNode.type === 'space' || valueNode.type === 'div') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fontFamily = valueNode;\n\n\t\tif (needMergeNodesByValue) {\n\t\t\tconst lastFontFamily = fontFamilies[fontFamilies.length - 1];\n\n\t\t\tassert(lastFontFamily);\n\t\t\tjoinValueNodes(lastFontFamily, fontFamily, mergeCharacters);\n\t\t\tneedMergeNodesByValue = false;\n\t\t\tmergeCharacters = null;\n\t\t} else {\n\t\t\tfontFamilies.push(fontFamily);\n\t\t}\n\t});\n\n\treturn fontFamilies;\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AAMA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,mBAAmB,IAAI,IAAI;IAAC;IAAQ;IAAU;IAAS;CAAM;AAEnE,wDAAwD,GAExD;;;;;CAKC,GACD,SAAS,eAAe,SAAS,EAAE,UAAU,EAAE,iBAAiB;IAC/D,UAAU,KAAK,GAAG,UAAU,KAAK,GAAG,oBAAoB,WAAW,KAAK;IAExE,OAAO;AACR;AAEA;;;CAGC,GACD,MAAM,aAAa,CAAC,YAAc,UAAU,IAAI,KAAK,SAAS,UAAU,KAAK,KAAK;AAQnE,SAAS,eAAe,KAAK;IAC3C,mBAAmB,GACnB,MAAM,eAAe,EAAE;IAEvB,MAAM,aAAa,CAAA,GAAA,4JAAA,CAAA,UAAkB,AAAD,EAAE;IACtC,MAAM,EAAE,OAAO,QAAQ,EAAE,GAAG;IAE5B,sCAAsC;IACtC,IAAI,SAAS,MAAM,KAAK,KAAK,QAAQ,CAAC,EAAE,IAAI,4JAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,KAAK;QAC/F,OAAO;YAAC,QAAQ,CAAC,EAAE;SAAC;IACrB;IAEA,IAAI,wBAAwB;IAC5B,0BAA0B,GAC1B,IAAI,kBAAkB;IAEtB,WAAW,IAAI,CAAC,CAAC,WAAW,OAAO;QAClC,IAAI,UAAU,IAAI,KAAK,YAAY;YAClC,OAAO;QACR;QAEA,IAAI,CAAC,iBAAiB,GAAG,CAAC,UAAU,IAAI,GAAG;YAC1C;QACD;QAEA,MAAM,iBAAiB,UAAU,KAAK,CAAC,WAAW;QAElD,6BAA6B;QAC7B,IAAI,CAAC,CAAA,GAAA,qKAAA,CAAA,UAAqB,AAAD,EAAE,iBAAiB;YAC3C;QACD;QAEA,mBAAmB;QACnB,IAAI,CAAA,GAAA,0JAAA,CAAA,UAAU,AAAD,EAAE,iBAAiB;YAC/B;QACD;QAEA,MAAM,sBAAsB,4JAAA,CAAA,qBAAkB,CAAC,GAAG,CAAC;QAEnD,uCAAuC;QACvC,IAAI,CAAC,uBAAuB,4JAAA,CAAA,wBAAqB,CAAC,GAAG,CAAC,iBAAiB;YACtE;QACD;QAEA,oBAAoB;QACpB,oEAAoE;QACpE,IAAI,CAAC,uBAAuB,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAAE,UAAU,KAAK,GAAG;YAC7D;QACD;QAEA,MAAM,WAAW,KAAK,CAAC,QAAQ,EAAE;QACjC,MAAM,WAAW,KAAK,CAAC,QAAQ,EAAE;QACjC,MAAM,eAAe,KAAK,CAAC,QAAQ,EAAE;QACrC,MAAM,eAAe,MAAM,KAAK,CAAC,GAAG;QAEpC,oFAAoF;QACpF,sGAAsG;QACtG,yFAAyF;QACzF,IACC,uBACA,4JAAA,CAAA,mBAAgB,CAAC,GAAG,CAAC,mBACrB,CAAC,CAAC,CAAC,YAAY,WAAW,aAAa,aAAa,IAAI,CAAC,WAAW,GAEpE;QAED,wEAAwE;QACxE,IAAI,YAAY,SAAS,KAAK,KAAK,OAAO,gBAAgB,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAAE,aAAa,KAAK,GAAG;YAC9F;QACD;QAEA,uBAAuB;QACvB,IAAI,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EAAE,iBAAiB;YAC9B;QACD;QAEA,oGAAoG;QACpG,IACC,CAAC,UAAU,IAAI,KAAK,WAAY,UAAU,IAAI,KAAK,SAAS,UAAU,KAAK,KAAK,GAAI,KACpF,aAAa,MAAM,KAAK,GACvB;YACD,wBAAwB;YACxB,kBAAkB,UAAU,KAAK;YAEjC;QACD;QAEA,IAAI,UAAU,IAAI,KAAK,WAAW,UAAU,IAAI,KAAK,OAAO;YAC3D;QACD;QAEA,MAAM,aAAa;QAEnB,IAAI,uBAAuB;YAC1B,MAAM,iBAAiB,YAAY,CAAC,aAAa,MAAM,GAAG,EAAE;YAE5D,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;YACP,eAAe,gBAAgB,YAAY;YAC3C,wBAAwB;YACxB,kBAAkB;QACnB,OAAO;YACN,aAAa,IAAI,CAAC;QACnB;IACD;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1465, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/rules/font-family-name-quotes/index.mjs"],"sourcesContent":["import { fontFamilyKeywords, prefixedSystemFonts } from '../../reference/keywords.mjs';\nimport findFontFamily from '../../utils/findFontFamily.mjs';\nimport isStandardSyntaxValue from '../../utils/isStandardSyntaxValue.mjs';\nimport isVariable from '../../utils/isVariable.mjs';\nimport report from '../../utils/report.mjs';\nimport ruleMessages from '../../utils/ruleMessages.mjs';\nimport validateOptions from '../../utils/validateOptions.mjs';\n\nconst ruleName = 'font-family-name-quotes';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (family) => `Expected quotes around \"${family}\"`,\n\trejected: (family) => `Unexpected quotes around \"${family}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/font-family-name-quotes',\n\tfixable: true,\n};\n\n/**\n * @param {string} font\n * @returns {boolean}\n */\nfunction isSystemFontKeyword(font) {\n\tif (prefixedSystemFonts.has(font)) {\n\t\treturn true;\n\t}\n\n\tif (font === 'BlinkMacSystemFont') {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * \"To avoid mistakes in escaping, it is recommended to quote font family names\n * that contain white space, digits, or punctuation characters other than hyphens\"\n * (https://www.w3.org/TR/CSS2/fonts.html#font-family-prop)\n *\n * @param {string} family\n * @returns {boolean}\n */\nfunction quotesRecommended(family) {\n\treturn !/^[-a-z]+$/i.test(family);\n}\n\n/**\n * Quotes are required if the family is not a valid CSS identifier\n * (regexes from https://mathiasbynens.be/notes/unquoted-font-family)\n *\n * @param {string} family\n * @returns {boolean}\n */\nfunction quotesRequired(family) {\n\treturn family\n\t\t.split(/\\s+/)\n\t\t.some((word) => /^(?:-?\\d|--)/.test(word) || !/^[-\\w\\u{00A0}-\\u{10FFFF}]+$/u.test(word));\n}\n\n/**\n * @typedef {{\n *   name: string,\n *   rawName: string,\n *   hasQuotes: boolean,\n *   sourceIndex: number,\n *   resetIndexes: (offset: number) => void,\n *   removeQuotes: () => void,\n *   addQuotes: () => void,\n * }} MutableNode\n */\n\n/**\n * @param {import('postcss-value-parser').Node[]} fontFamilies\n * @param {import('postcss').Declaration} decl\n * @returns {MutableNode[]}\n */\nconst makeMutableFontFamilies = (fontFamilies, decl) => {\n\t/**\n\t * @type {MutableNode[]}\n\t */\n\tconst mutableNodes = [];\n\n\tfontFamilies.forEach((fontFamily, idx) => {\n\t\tconst quote = 'quote' in fontFamily && fontFamily.quote;\n\t\tconst name = fontFamily.value;\n\n\t\t/** @type {MutableNode} */\n\t\tconst newNode = {\n\t\t\tname,\n\t\t\trawName: quote ? `${quote}${name}${quote}` : name,\n\t\t\tsourceIndex: fontFamily.sourceIndex,\n\t\t\thasQuotes: Boolean(quote),\n\t\t\tresetIndexes(offset) {\n\t\t\t\tmutableNodes.slice(idx + 1).forEach((n) => (n.sourceIndex += offset));\n\t\t\t},\n\t\t\tremoveQuotes() {\n\t\t\t\tif (this.hasQuotes === false) return;\n\n\t\t\t\tconst openIndex = this.sourceIndex;\n\t\t\t\tconst closeIndex = openIndex + this.name.length + 2;\n\n\t\t\t\tthis.hasQuotes = false;\n\t\t\t\tdecl.value = decl.value.slice(0, openIndex) + this.name + decl.value.substring(closeIndex);\n\t\t\t\tthis.resetIndexes(-2);\n\t\t\t},\n\t\t\taddQuotes() {\n\t\t\t\tif (this.hasQuotes === true) return;\n\n\t\t\t\tconst openIndex = this.sourceIndex;\n\t\t\t\tconst closeIndex = openIndex + this.name.length;\n\n\t\t\t\tthis.hasQuotes = true;\n\t\t\t\tconst fixedName = `\"${this.name}\"`;\n\n\t\t\t\tdecl.value = decl.value.slice(0, openIndex) + fixedName + decl.value.substring(closeIndex);\n\t\t\t\tthis.resetIndexes(2);\n\t\t\t},\n\t\t};\n\n\t\tmutableNodes.push(newNode);\n\t});\n\n\treturn mutableNodes;\n};\n\n/** @type {import('stylelint').CoreRules[ruleName]} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always-where-required', 'always-where-recommended', 'always-unless-keyword'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls(/^font(-family)?$/i, (decl) => {\n\t\t\tif (!isStandardSyntaxValue(decl.value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet fontFamilyNodes = makeMutableFontFamilies(findFontFamily(decl.value), decl);\n\n\t\t\tif (fontFamilyNodes.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const fontFamilyNode of fontFamilyNodes) {\n\t\t\t\tcheckFamilyName(fontFamilyNode, decl);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {MutableNode} fontFamilyNode\n\t\t * @param {import('postcss').Declaration} decl\n\t\t */\n\t\tfunction checkFamilyName(fontFamilyNode, decl) {\n\t\t\tconst { name: family, rawName: rawFamily, hasQuotes } = fontFamilyNode;\n\n\t\t\tif (isVariable(rawFamily)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Disallow quotes around (case-insensitive) keywords\n\t\t\t// and system font keywords in all cases\n\t\t\tif (fontFamilyKeywords.has(family.toLowerCase()) || isSystemFontKeyword(family)) {\n\t\t\t\tif (hasQuotes) {\n\t\t\t\t\treturn complain('rejected', fontFamilyNode, decl);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst required = quotesRequired(family);\n\t\t\tconst recommended = quotesRecommended(family);\n\n\t\t\tswitch (primary) {\n\t\t\t\tcase 'always-unless-keyword':\n\t\t\t\t\tif (!hasQuotes) {\n\t\t\t\t\t\treturn complain('expected', fontFamilyNode, decl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'always-where-recommended':\n\t\t\t\t\tif (!recommended && hasQuotes) {\n\t\t\t\t\t\treturn complain('rejected', fontFamilyNode, decl);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (recommended && !hasQuotes) {\n\t\t\t\t\t\treturn complain('expected', fontFamilyNode, decl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'always-where-required':\n\t\t\t\t\tif (!required && hasQuotes) {\n\t\t\t\t\t\treturn complain('rejected', fontFamilyNode, decl);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (required && !hasQuotes) {\n\t\t\t\t\t\treturn complain('expected', fontFamilyNode, decl);\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {keyof messages} messageType\n\t\t * @param {MutableNode} fontFamilyNode\n\t\t * @param {import('postcss').Declaration} decl\n\t\t */\n\t\tfunction complain(messageType, fontFamilyNode, decl) {\n\t\t\tconst { name, rawName } = fontFamilyNode;\n\t\t\tconst fix = () => {\n\t\t\t\treturn messageType === 'expected'\n\t\t\t\t\t? fontFamilyNode.addQuotes()\n\t\t\t\t\t: fontFamilyNode.removeQuotes();\n\t\t\t};\n\n\t\t\treport({\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tmessage: messages[messageType],\n\t\t\t\tmessageArgs: [name],\n\t\t\t\tnode: decl,\n\t\t\t\tword: rawName,\n\t\t\t\tfix: {\n\t\t\t\t\tapply: fix,\n\t\t\t\t\tnode: decl,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nexport default rule;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}