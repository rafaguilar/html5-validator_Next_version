module.exports = {

"[project]/node_modules/stylelint/lib/utils/uniteSets.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * Unite two or more sets
 *
 * @param {Iterable<string>[]} args
 * @see {@link https://github.com/microsoft/TypeScript/issues/57228|GitHub}
 */ __turbopack_context__.s({
    "default": (()=>uniteSets)
});
function uniteSets(...args) {
    return new Set([
        ...args
    ].reduce((result, set)=>[
            ...result,
            ...set
        ], []));
}
}}),
"[project]/node_modules/stylelint/lib/reference/keywords.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "animationNameKeywords": (()=>animationNameKeywords),
    "animationShorthandKeywords": (()=>animationShorthandKeywords),
    "basicKeywords": (()=>basicKeywords),
    "camelCaseKeywords": (()=>camelCaseKeywords),
    "counterIncrementKeywords": (()=>counterIncrementKeywords),
    "counterResetKeywords": (()=>counterResetKeywords),
    "deprecatedSystemColorKeywords": (()=>deprecatedSystemColorKeywords),
    "fontFamilyKeywords": (()=>fontFamilyKeywords),
    "fontShorthandKeywords": (()=>fontShorthandKeywords),
    "fontSizeKeywords": (()=>fontSizeKeywords),
    "fontWeightAbsoluteKeywords": (()=>fontWeightAbsoluteKeywords),
    "fontWeightKeywords": (()=>fontWeightKeywords),
    "fontWeightNonNumericKeywords": (()=>fontWeightNonNumericKeywords),
    "fontWeightRelativeKeywords": (()=>fontWeightRelativeKeywords),
    "gridAreaKeywords": (()=>gridAreaKeywords),
    "gridColumnKeywords": (()=>gridColumnKeywords),
    "gridRowKeywords": (()=>gridRowKeywords),
    "keyframeSelectorKeywords": (()=>keyframeSelectorKeywords),
    "listStyleImageKeywords": (()=>listStyleImageKeywords),
    "listStylePositionKeywords": (()=>listStylePositionKeywords),
    "listStyleShorthandKeywords": (()=>listStyleShorthandKeywords),
    "listStyleTypeKeywords": (()=>listStyleTypeKeywords),
    "namedColorsKeywords": (()=>namedColorsKeywords),
    "namedTimelineRangeKeywords": (()=>namedTimelineRangeKeywords),
    "prefixedSystemFonts": (()=>prefixedSystemFonts),
    "systemColorsKeywords": (()=>systemColorsKeywords),
    "systemFontKeywords": (()=>systemFontKeywords)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/uniteSets.mjs [app-route] (ecmascript)");
;
const basicKeywords = new Set([
    'initial',
    'inherit',
    'revert',
    'revert-layer',
    'unset'
]);
const systemFontKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'caption',
    'icon',
    'menu',
    'message-box',
    'small-caption',
    'status-bar'
]);
const fontFamilyKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'serif',
    'sans-serif',
    'cursive',
    'fantasy',
    'monospace',
    'system-ui',
    'ui-serif',
    'ui-sans-serif',
    'ui-monospace',
    'ui-rounded',
    'emoji',
    'math',
    'fangsong'
]);
/** @type {ReadonlySet<string>} */ const appleSystemFonts = new Set([
    '-apple-system',
    '-apple-system-headline',
    '-apple-system-body',
    '-apple-system-subheadline',
    '-apple-system-footnote',
    '-apple-system-caption1',
    '-apple-system-caption2',
    '-apple-system-short-headline',
    '-apple-system-short-body',
    '-apple-system-short-subheadline',
    '-apple-system-short-footnote',
    '-apple-system-short-caption1',
    '-apple-system-tall-body',
    '-apple-system-title0',
    '-apple-system-title1',
    '-apple-system-title2',
    '-apple-system-title3',
    '-apple-system-title4'
]);
/** @type {ReadonlySet<string>} */ const mozillaSystemFonts = new Set([
    '-moz-button',
    '-moz-desktop',
    '-moz-dialog',
    '-moz-document',
    '-moz-field',
    '-moz-fixed',
    '-moz-info',
    '-moz-list',
    '-moz-pull-down-menu',
    '-moz-window',
    '-moz-workspace'
]);
/** @type {ReadonlySet<string>} */ const webkitSystemFonts = new Set([
    '-webkit-body',
    '-webkit-control',
    '-webkit-mini-control',
    '-webkit-pictograph',
    '-webkit-small-control',
    '-webkit-standard'
]);
const prefixedSystemFonts = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(appleSystemFonts, mozillaSystemFonts, webkitSystemFonts);
const fontWeightRelativeKeywords = new Set([
    'bolder',
    'lighter'
]);
const fontWeightAbsoluteKeywords = new Set([
    'normal',
    'bold'
]);
const fontWeightNonNumericKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(fontWeightRelativeKeywords, fontWeightAbsoluteKeywords);
/** @type {ReadonlySet<string>} */ const fontWeightNumericKeywords = new Set([
    '100',
    '200',
    '300',
    '400',
    '500',
    '600',
    '700',
    '800',
    '900'
]);
const fontWeightKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, fontWeightNonNumericKeywords, fontWeightNumericKeywords);
/** @type {ReadonlySet<string>} */ const fontStyleKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'normal',
    'italic',
    'oblique'
]);
/** @type {ReadonlySet<string>} */ const fontVariantCSS2Keywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'normal',
    'none',
    'small-caps'
]);
/** @type {ReadonlySet<string>} */ const fontStretchKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'semi-condensed',
    'condensed',
    'extra-condensed',
    'ultra-condensed',
    'semi-expanded',
    'expanded',
    'extra-expanded',
    'ultra-expanded'
]);
const fontSizeKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'xx-small',
    'x-small',
    'small',
    'medium',
    'large',
    'x-large',
    'xx-large',
    'xxx-large',
    'larger',
    'smaller',
    'math',
    '-konq-xxx-large',
    '-webkit-xxx-large'
]);
/** @type {ReadonlySet<string>} */ const lineHeightKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'normal'
]);
const fontShorthandKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, fontStyleKeywords, fontVariantCSS2Keywords, fontWeightKeywords, fontStretchKeywords, fontSizeKeywords, lineHeightKeywords, fontFamilyKeywords);
const animationNameKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'none'
]);
/** @type {ReadonlySet<string>} */ const animationTimingFunctionKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'linear',
    'ease',
    'ease-in',
    'ease-in-out',
    'ease-out',
    'step-start',
    'step-end',
    'steps',
    'cubic-bezier'
]);
/** @type {ReadonlySet<string>} */ const animationIterationCountKeywords = new Set([
    'infinite'
]);
/** @type {ReadonlySet<string>} */ const animationDirectionKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'normal',
    'reverse',
    'alternate',
    'alternate-reverse'
]);
/** @type {ReadonlySet<string>} */ const animationFillModeKeywords = new Set([
    'none',
    'forwards',
    'backwards',
    'both'
]);
/** @type {ReadonlySet<string>} */ const animationPlayStateKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'running',
    'paused'
]);
const animationShorthandKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, animationNameKeywords, animationTimingFunctionKeywords, animationIterationCountKeywords, animationDirectionKeywords, animationFillModeKeywords, animationPlayStateKeywords);
const gridRowKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'auto',
    'span'
]);
const gridColumnKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'auto',
    'span'
]);
const gridAreaKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'auto',
    'span'
]);
const counterIncrementKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'none'
]);
const counterResetKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'none'
]);
const listStyleTypeKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'none',
    'disc',
    'circle',
    'square',
    'decimal',
    'decimal-leading-zero',
    'cjk-decimal',
    'cjk-earthly-branch',
    'cjk-heavenly-stem',
    'cjk-ideographic',
    'lower-alpha',
    'upper-alpha',
    'lower-armenian',
    'upper-armenian',
    'lower-greek',
    'upper-greek',
    'lower-hexadecimal',
    'upper-hexadecimal',
    'lower-latin',
    'upper-latin',
    'lower-norwegian',
    'upper-norwegian',
    'lower-roman',
    'upper-roman',
    'afar',
    'amharic',
    'amharic-abegede',
    'arabic-indic',
    'armenian',
    'bengali',
    'cambodian',
    'devanagari',
    'ethiopic-abegede',
    'ethiopic-abegede-am-et',
    'ethiopic-abegede-gez',
    'ethiopic-abegede-ti-er',
    'ethiopic-abegede-ti-et',
    'ethiopic-halehame',
    'ethiopic-halehame-aa-er',
    'ethiopic-halehame-aa-et',
    'ethiopic-halehame-am',
    'ethiopic-halehame-am-et',
    'ethiopic-halehame-gez',
    'ethiopic-halehame-om-et',
    'ethiopic-halehame-sid-et',
    'ethiopic-halehame-so-et',
    'ethiopic-halehame-ti-er',
    'ethiopic-halehame-ti-et',
    'ethiopic-halehame-tig',
    'ethiopic-numeric',
    'georgian',
    'gujarati',
    'gurmukhi',
    'hangul',
    'hangul-consonant',
    'hebrew',
    'hiragana',
    'hiragana-iroha',
    'japanese-formal',
    'japanese-informal',
    'kannada',
    'katakana',
    'katakana-iroha',
    'khmer',
    'korean-hangul-formal',
    'korean-hanja-formal',
    'korean-hanja-informal',
    'lao',
    'malayalam',
    'mongolian',
    'myanmar',
    'oriya',
    'oromo',
    'persian',
    'sidama',
    'somali',
    'simp-chinese-formal',
    'simp-chinese-informal',
    'tamil',
    'telugu',
    'thai',
    'tibetan',
    'tigre',
    'tigrinya-er',
    'tigrinya-er-abegede',
    'tigrinya-et',
    'tigrinya-et-abegede',
    'trad-chinese-formal',
    'trad-chinese-informal',
    'urdu',
    'disclosure-open',
    'disclosure-closed',
    'asterisks',
    'binary',
    'footnotes',
    'octal'
]);
const listStylePositionKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'inside',
    'outside'
]);
const listStyleImageKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, [
    'none'
]);
const listStyleShorthandKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(basicKeywords, listStyleTypeKeywords, listStylePositionKeywords, listStyleImageKeywords);
const camelCaseKeywords = new Set([
    'optimizeSpeed',
    'optimizeQuality',
    'optimizeLegibility',
    'geometricPrecision',
    'currentColor',
    'crispEdges',
    'visiblePainted',
    'visibleFill',
    'visibleStroke',
    'sRGB',
    'linearRGB'
]);
const keyframeSelectorKeywords = new Set([
    'from',
    'to'
]);
const namedTimelineRangeKeywords = new Set([
    'contain',
    'cover',
    'entry',
    'entry-crossing',
    'exit',
    'exit-crossing'
]);
/**
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Mozilla_Extensions#color_keywords
 * @type {ReadonlySet<string>}
 */ const prefixedSystemColorKeywords = new Set([
    '-moz-buttondefault',
    '-moz-buttonhoverface',
    '-moz-buttonhovertext',
    '-moz-cellhighlight',
    '-moz-cellhighlighttext',
    '-moz-combobox',
    '-moz-comboboxtext',
    '-moz-dialog',
    '-moz-dialogtext',
    '-moz-dragtargetzone',
    '-moz-eventreerow',
    '-moz-field',
    '-moz-fieldtext',
    '-moz-html-cellhighlight',
    '-moz-html-cellhighlighttext',
    '-moz-mac-accentdarkestshadow',
    '-moz-mac-accentdarkshadow',
    '-moz-mac-accentface',
    '-moz-mac-accentlightesthighlight',
    '-moz-mac-accentlightshadow',
    '-moz-mac-accentregularhighlight',
    '-moz-mac-accentregularshadow',
    '-moz-mac-chrome-active',
    '-moz-mac-chrome-inactive',
    '-moz-mac-focusring',
    '-moz-mac-menuselect',
    '-moz-mac-menushadow',
    '-moz-mac-menutextselect',
    '-moz-menubarhovertext',
    '-moz-menubartext',
    '-moz-menuhover',
    '-moz-menuhovertext',
    '-moz-nativehyperlinktext',
    '-moz-oddtreerow',
    '-moz-win-accentcolor',
    '-moz-win-accentcolortext',
    '-moz-win-communicationstext',
    '-moz-win-mediatext',
    '-ms-hotlight'
]);
const deprecatedSystemColorKeywords = new Set([
    'activeborder',
    'activecaption',
    'appworkspace',
    'background',
    'buttonhighlight',
    'buttonshadow',
    'captiontext',
    'inactiveborder',
    'inactivecaption',
    'inactivecaptiontext',
    'infobackground',
    'infotext',
    'menu',
    'menutext',
    'scrollbar',
    'threeddarkshadow',
    'threedface',
    'threedhighlight',
    'threedlightshadow',
    'threedshadow',
    'window',
    'windowframe',
    'windowtext'
]);
const systemColorsKeywords = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$uniteSets$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(prefixedSystemColorKeywords, deprecatedSystemColorKeywords, [
    // https://www.w3.org/TR/css-color-4/#css-system-colors
    'accentcolor',
    'accentcolortext',
    'activetext',
    'buttonborder',
    'buttonface',
    'buttontext',
    'canvas',
    'canvastext',
    'field',
    'fieldtext',
    'graytext',
    'highlight',
    'highlighttext',
    'linktext',
    'mark',
    'marktext',
    'selecteditem',
    'selecteditemtext',
    'visitedtext'
]);
const namedColorsKeywords = new Set([
    'aliceblue',
    'antiquewhite',
    'aqua',
    'aquamarine',
    'azure',
    'beige',
    'bisque',
    'black',
    'blanchedalmond',
    'blue',
    'blueviolet',
    'brown',
    'burlywood',
    'cadetblue',
    'chartreuse',
    'chocolate',
    'coral',
    'cornflowerblue',
    'cornsilk',
    'crimson',
    'cyan',
    'darkblue',
    'darkcyan',
    'darkgoldenrod',
    'darkgray',
    'darkgreen',
    'darkgrey',
    'darkkhaki',
    'darkmagenta',
    'darkolivegreen',
    'darkorange',
    'darkorchid',
    'darkred',
    'darksalmon',
    'darkseagreen',
    'darkslateblue',
    'darkslategray',
    'darkslategrey',
    'darkturquoise',
    'darkviolet',
    'deeppink',
    'deepskyblue',
    'dimgray',
    'dimgrey',
    'dodgerblue',
    'firebrick',
    'floralwhite',
    'forestgreen',
    'fuchsia',
    'gainsboro',
    'ghostwhite',
    'gold',
    'goldenrod',
    'gray',
    'green',
    'greenyellow',
    'grey',
    'honeydew',
    'hotpink',
    'indianred',
    'indigo',
    'ivory',
    'khaki',
    'lavender',
    'lavenderblush',
    'lawngreen',
    'lemonchiffon',
    'lightblue',
    'lightcoral',
    'lightcyan',
    'lightgoldenrodyellow',
    'lightgray',
    'lightgreen',
    'lightgrey',
    'lightpink',
    'lightsalmon',
    'lightseagreen',
    'lightskyblue',
    'lightslategray',
    'lightslategrey',
    'lightsteelblue',
    'lightyellow',
    'lime',
    'limegreen',
    'linen',
    'magenta',
    'maroon',
    'mediumaquamarine',
    'mediumblue',
    'mediumorchid',
    'mediumpurple',
    'mediumseagreen',
    'mediumslateblue',
    'mediumspringgreen',
    'mediumturquoise',
    'mediumvioletred',
    'midnightblue',
    'mintcream',
    'mistyrose',
    'moccasin',
    'navajowhite',
    'navy',
    'oldlace',
    'olive',
    'olivedrab',
    'orange',
    'orangered',
    'orchid',
    'palegoldenrod',
    'palegreen',
    'paleturquoise',
    'palevioletred',
    'papayawhip',
    'peachpuff',
    'peru',
    'pink',
    'plum',
    'powderblue',
    'purple',
    'rebeccapurple',
    'red',
    'rosybrown',
    'royalblue',
    'saddlebrown',
    'salmon',
    'sandybrown',
    'seagreen',
    'seashell',
    'sienna',
    'silver',
    'skyblue',
    'slateblue',
    'slategray',
    'slategrey',
    'snow',
    'springgreen',
    'steelblue',
    'tan',
    'teal',
    'thistle',
    'tomato',
    'turquoise',
    'violet',
    'wheat',
    'white',
    'whitesmoke',
    'yellow',
    'yellowgreen'
]);
}}),
"[project]/node_modules/stylelint/lib/utils/vendor.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * Contains helpers for working with vendor prefixes.
 *
 * Copied from https://github.com/postcss/postcss/commit/777c55b5d2a10605313a4972888f4f32005f5ac2
 *
 * @namespace vendor
 */ __turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
const __TURBOPACK__default__export__ = {
    /**
	 * Returns the vendor prefix extracted from an input string.
	 *
	 * @param {string} prop String with or without vendor prefix.
	 *
	 * @returns {string} vendor prefix or empty string
	 *
	 * @example
	 * vendor.prefix('-moz-tab-size') //=> '-moz-'
	 * vendor.prefix('tab-size')      //=> ''
	 */ prefix (prop) {
        const match = prop.match(/^(-\w+-)/);
        if (match) {
            return match[0] || '';
        }
        return '';
    },
    /**
	 * Returns the input string stripped of its vendor prefix.
	 *
	 * @param {string} prop String with or without vendor prefix.
	 *
	 * @returns {string} String name without vendor prefixes.
	 *
	 * @example
	 * vendor.unprefixed('-moz-tab-size') //=> 'tab-size'
	 */ unprefixed (prop) {
        return prop.replace(/^-\w+-/, '');
    }
};
}}),
"[project]/node_modules/stylelint/lib/utils/isAutoprefixable.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$vendor$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/vendor.mjs [app-route] (ecmascript)");
;
/**
 * Extract each list using the internal API of Autoprefixer 10.2.5.
 *
 * @see https://github.com/postcss/autoprefixer/tree/10.2.5
 *
 * @example
 * const autoprefixer = require('autoprefixer');
 * const Browsers = require('autoprefixer/lib/browsers');
 * const Prefixes = require('autoprefixer/lib/prefixes');
 * const utils = require('autoprefixer/lib/utils');
 *
 * const prefixes = new Prefixes(autoprefixer.data.prefixes, new Browsers(autoprefixer.data.browsers, []));
 */ /**
 * @example
 * Object.keys(prefixes.remove).filter((s) => s.startsWith('@'));
 */ const AT_RULES = new Set([
    '@-moz-keyframes',
    '@-moz-document',
    '@-ms-keyframes',
    '@-ms-viewport',
    '@-o-keyframes',
    '@-o-viewport',
    '@-webkit-keyframes',
    '@-webkit-viewport'
]);
/**
 * @example
 * prefixes.remove.selectors.map((s) => s.prefixed);
 */ const SELECTORS = new Set([
    ':-moz-any-link',
    ':-moz-full-screen',
    ':-moz-placeholder',
    ':-moz-placeholder-shown',
    ':-moz-read-only',
    ':-moz-read-write',
    ':-ms-fullscreen',
    ':-ms-input-placeholder',
    ':-webkit-any-link',
    ':-webkit-full-screen',
    '::-moz-placeholder',
    '::-moz-selection',
    '::-ms-input-placeholder',
    '::-webkit-backdrop',
    '::-webkit-input-placeholder'
]);
/**
 * @example
 * Object.entries(autoprefixer.data.prefixes)
 *   .filter(([key, value]) => !value.selector && !value.props && !key.startsWith('@'))
 *   .map(([key, value]) => key);
 */ const PROPERTIES = new Set([
    'align-content',
    'align-items',
    'align-self',
    'animation',
    'animation-delay',
    'animation-direction',
    'animation-duration',
    'animation-fill-mode',
    'animation-iteration-count',
    'animation-name',
    'animation-play-state',
    'animation-timing-function',
    'appearance',
    'backdrop-filter',
    'backface-visibility',
    'background-clip',
    'background-origin',
    'background-size',
    'border-block-end',
    'border-block-start',
    'border-bottom-left-radius',
    'border-bottom-right-radius',
    'border-image',
    'border-inline-end',
    'border-inline-start',
    'border-radius',
    'border-top-left-radius',
    'border-top-right-radius',
    'box-decoration-break',
    'box-shadow',
    'box-sizing',
    'break-after',
    'break-before',
    'break-inside',
    'clip-path',
    'color-adjust',
    'column-count',
    'column-fill',
    'column-gap',
    'column-rule',
    'column-rule-color',
    'column-rule-style',
    'column-rule-width',
    'column-span',
    'column-width',
    'columns',
    'filter',
    'flex',
    'flex-basis',
    'flex-direction',
    'flex-flow',
    'flex-grow',
    'flex-shrink',
    'flex-wrap',
    'flow-from',
    'flow-into',
    'font-feature-settings',
    'font-kerning',
    'font-language-override',
    'font-variant-ligatures',
    'grid-area',
    'grid-column',
    'grid-column-align',
    'grid-column-end',
    'grid-column-start',
    'grid-row',
    'grid-row-align',
    'grid-row-end',
    'grid-row-start',
    'grid-template',
    'grid-template-areas',
    'grid-template-columns',
    'grid-template-rows',
    'hyphens',
    'image-rendering',
    'justify-content',
    'margin-block-end',
    'margin-block-start',
    'margin-inline-end',
    'margin-inline-start',
    'mask',
    'mask-border',
    'mask-border-outset',
    'mask-border-repeat',
    'mask-border-slice',
    'mask-border-source',
    'mask-border-width',
    'mask-clip',
    'mask-composite',
    'mask-image',
    'mask-origin',
    'mask-position',
    'mask-repeat',
    'mask-size',
    'object-fit',
    'object-position',
    'order',
    'overscroll-behavior',
    'padding-block-end',
    'padding-block-start',
    'padding-inline-end',
    'padding-inline-start',
    'perspective',
    'perspective-origin',
    'place-self',
    'region-fragment',
    'scroll-snap-coordinate',
    'scroll-snap-destination',
    'scroll-snap-points-x',
    'scroll-snap-points-y',
    'scroll-snap-type',
    'shape-image-threshold',
    'shape-margin',
    'shape-outside',
    'tab-size',
    'text-align-last',
    'text-decoration',
    'text-decoration-color',
    'text-decoration-line',
    'text-decoration-skip',
    'text-decoration-skip-ink',
    'text-decoration-style',
    'text-emphasis',
    'text-emphasis-color',
    'text-emphasis-position',
    'text-emphasis-style',
    'text-orientation',
    'text-overflow',
    'text-size-adjust',
    'text-spacing',
    'touch-action',
    'transform',
    'transform-origin',
    'transform-style',
    'transition',
    'transition-delay',
    'transition-duration',
    'transition-property',
    'transition-timing-function',
    'user-select',
    'writing-mode'
]);
/**
 * This list is currently being used to compile all the prefixed values that can safely be unprefixed.
 * i.e. value-no-vendor-prefix autofix ought to be able to handle it appropriately
 * It was initially populated using the following example:
 * @example
 * Object.values(prefixes.remove)
 *   .filter((p) => Array.isArray(p.values))
 *   .flatMap((p) => p.values)
 *   .map((p) => utils.removeNote(p.prefixed)) // normalize '-webkit- old'
 *   .filter((p) => !p.endsWith('-'));         // remove '-webkit-' only
 *
 * @see https://github.com/stylelint/stylelint/pull/5312/files#r636018013
 */ const PROPERTY_VALUES = new Set([
    '-moz-all',
    '-moz-calc',
    '-moz-crisp-edges',
    '-moz-element',
    '-moz-fit-content',
    '-moz-grab',
    '-moz-grabbing',
    '-moz-initial',
    '-moz-isolate',
    '-moz-isolate-override',
    '-moz-linear-gradient',
    '-moz-max-content',
    '-moz-min-content',
    '-moz-pre-wrap',
    '-moz-plaintext',
    '-moz-radial-gradient',
    '-moz-repeating-linear-gradient',
    '-moz-repeating-radial-gradient',
    '-moz-zoom-in',
    '-moz-zoom-out',
    '-ms-flexbox',
    '-ms-grid',
    '-ms-inline-grid',
    '-ms-linear-gradient',
    '-ms-radial-gradient',
    '-ms-repeating-linear-gradient',
    '-ms-repeating-radial-gradient',
    '-o-crisp-edges',
    '-o-linear-gradient',
    '-o-pre-wrap',
    '-o-radial-gradient',
    '-o-repeating-linear-gradient',
    '-o-repeating-radial-gradient',
    '-webkit-calc',
    '-webkit-cross-fade',
    '-webkit-filter',
    '-webkit-fit-content',
    '-webkit-flex',
    '-webkit-grab',
    '-webkit-grabbing',
    '-webkit-image-set',
    '-webkit-inline-flex',
    '-webkit-isolate',
    '-webkit-linear-gradient',
    '-webkit-max-content',
    '-webkit-min-content',
    '-webkit-plaintext',
    '-webkit-radial-gradient',
    '-webkit-repeating-linear-gradient',
    '-webkit-repeating-radial-gradient',
    '-webkit-sticky',
    '-webkit-zoom-in',
    '-webkit-zoom-out',
    '-xv-digits',
    '-xv-literal-punctuation',
    '-xv-no-punctuation',
    // Firefox does not support
    // ethiopic-halehame, ethiopic-halehame-am, ethiopic-halehame-ti-er and ethiopic-halehame-ti-et
    // without a -moz- prefix
    // see https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type
    '-moz-arabic-indic',
    '-moz-bengali',
    '-moz-cjk-earthly-branch',
    '-moz-cjk-heavenly-stem',
    '-moz-devanagari',
    '-moz-ethiopic-numeric',
    '-moz-gujarati',
    '-moz-gurmukhi',
    '-moz-hangul',
    '-moz-hangul-consonant',
    '-moz-japanese-formal',
    '-moz-japanese-informal',
    '-moz-kannada',
    '-moz-khmer',
    '-moz-lao',
    '-moz-malayalam',
    '-moz-myanmar',
    '-moz-oriya',
    '-moz-persian',
    '-moz-simp-chinese-formal',
    '-moz-simp-chinese-informal',
    '-moz-tamil',
    '-moz-telugu',
    '-moz-thai',
    '-moz-trad-chinese-formal',
    '-moz-trad-chinese-informal'
]);
const __TURBOPACK__default__export__ = {
    /**
	 * @param {string} identifier
	 * @returns {boolean}
	 */ atRuleName (identifier) {
        return AT_RULES.has(`@${identifier.toLowerCase()}`);
    },
    /**
	 * @param {string} identifier
	 * @returns {boolean}
	 */ selector (identifier) {
        return SELECTORS.has(identifier.toLowerCase());
    },
    /**
	 * @param {string} identifier
	 * @returns {boolean}
	 */ mediaFeatureName (identifier) {
        return identifier.toLowerCase().includes('device-pixel-ratio');
    },
    /**
	 * @param {string} identifier
	 * @returns {boolean}
	 */ property (identifier) {
        const ident = identifier.toLowerCase();
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$vendor$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].prefix(ident).length === 0) {
            return false;
        }
        return PROPERTIES.has(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$vendor$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].unprefixed(ident));
    },
    /**
	 * @param {string} value
	 * @returns {boolean}
	 */ propertyValue (value) {
        return PROPERTY_VALUES.has(value.toLowerCase());
    },
    /**
	 * @param {string} value
	 * @returns {string}
	 */ unprefix (value) {
        return value.replace(/-\w+-/, '');
    }
};
}}),
"[project]/node_modules/stylelint/lib/rules/property-no-vendor-prefix/index.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/validateTypes.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$reference$2f$keywords$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/reference/keywords.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isAutoprefixable$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/isAutoprefixable.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$optionsMatches$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/optionsMatches.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$report$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/report.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$ruleMessages$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/ruleMessages.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateOptions$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/validateOptions.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$vendor$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/vendor.mjs [app-route] (ecmascript)");
;
;
;
;
;
;
;
;
const ruleName = 'property-no-vendor-prefix';
const messages = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$ruleMessages$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(ruleName, {
    rejected: (property)=>`Unexpected vendor-prefixed property "${property}"`
});
const meta = {
    url: 'https://stylelint.io/user-guide/rules/property-no-vendor-prefix',
    fixable: true
};
/** @type {import('stylelint').CoreRules[ruleName]} */ const rule = (primary, secondaryOptions)=>{
    return (root, result)=>{
        const validOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateOptions$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(result, ruleName, {
            actual: primary
        }, {
            optional: true,
            actual: secondaryOptions,
            possible: {
                ignoreProperties: [
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isString"],
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isRegExp"]
                ]
            }
        });
        if (!validOptions) {
            return;
        }
        root.walkDecls((decl)=>{
            const prop = decl.prop;
            const unprefixedProp = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$vendor$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].unprefixed(prop);
            //return early if property is to be ignored
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$optionsMatches$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(secondaryOptions, 'ignoreProperties', unprefixedProp)) {
                return;
            }
            // Make sure there's a vendor prefix,
            // but this isn't a custom property
            if (prop[0] !== '-' || prop[1] === '-') {
                return;
            }
            if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isAutoprefixable$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].property(prop)) {
                return;
            }
            // see whatwg/compat#28
            if (prop === '-webkit-background-size') {
                const backgrounds = decl.value.split(',');
                const isSafe = backgrounds.every((background)=>{
                    const values = background.trim().split(/\s+/);
                    const length = values.length;
                    const [first] = values;
                    switch(length){
                        case 2:
                            return true;
                        case 1:
                            return first && (first === 'auto' || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$reference$2f$keywords$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["basicKeywords"].has(first));
                        default:
                            return false;
                    }
                });
                if (!isSafe) return;
            }
            const fix = ()=>{
                decl.prop = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isAutoprefixable$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].unprefix(decl.prop);
            };
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$report$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])({
                message: messages.rejected,
                messageArgs: [
                    prop
                ],
                word: prop,
                node: decl,
                result,
                ruleName,
                fix: {
                    apply: fix,
                    node: decl
                }
            });
        });
    };
};
rule.ruleName = ruleName;
rule.messages = messages;
rule.meta = meta;
const __TURBOPACK__default__export__ = rule;
}}),

};

//# sourceMappingURL=node_modules_stylelint_lib_0d0f9ec6._.js.map