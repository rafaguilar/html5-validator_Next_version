{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/beforeBlockString.mjs"],"sourcesContent":["import { isAtRule, isRule } from './typeGuards.mjs';\n\n/**\n * @param {import('postcss').Container} statement\n * @param {{ noRawBefore: boolean }} options\n * @returns {string}\n */\nexport default function beforeBlockString(statement, { noRawBefore } = { noRawBefore: false }) {\n\tlet result = '';\n\n\tconst before = statement.raws.before || '';\n\n\tif (!noRawBefore) {\n\t\tresult += before;\n\t}\n\n\tif (isRule(statement)) {\n\t\tresult += statement.selector;\n\t} else if (isAtRule(statement)) {\n\t\tresult += `@${statement.name}${statement.raws.afterName || ''}${statement.params}`;\n\t} else {\n\t\treturn '';\n\t}\n\n\tresult += statement.raws.between || '';\n\n\treturn result;\n}\n"],"names":[],"mappings":";;;AAAA;;AAOe,SAAS,kBAAkB,SAAS,EAAE,EAAE,WAAW,EAAE,GAAG;IAAE,aAAa;AAAM,CAAC;IAC5F,IAAI,SAAS;IAEb,MAAM,SAAS,UAAU,IAAI,CAAC,MAAM,IAAI;IAExC,IAAI,CAAC,aAAa;QACjB,UAAU;IACX;IAEA,IAAI,CAAA,GAAA,0JAAA,CAAA,SAAM,AAAD,EAAE,YAAY;QACtB,UAAU,UAAU,QAAQ;IAC7B,OAAO,IAAI,CAAA,GAAA,0JAAA,CAAA,WAAQ,AAAD,EAAE,YAAY;QAC/B,UAAU,CAAC,CAAC,EAAE,UAAU,IAAI,GAAG,UAAU,IAAI,CAAC,SAAS,IAAI,KAAK,UAAU,MAAM,EAAE;IACnF,OAAO;QACN,OAAO;IACR;IAEA,UAAU,UAAU,IAAI,CAAC,OAAO,IAAI;IAEpC,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasBlock.mjs"],"sourcesContent":["/**\n * Check if a statement has an block (empty or otherwise).\n *\n * @param {import('postcss').Container} statement\n * @returns {boolean} True if `statement` has a block (empty or otherwise)\n */\nexport default function hasBlock(statement) {\n\treturn statement.nodes !== undefined;\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACc,SAAS,SAAS,SAAS;IACzC,OAAO,UAAU,KAAK,KAAK;AAC5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/rules/block-no-empty/index.mjs"],"sourcesContent":["import beforeBlockString from '../../utils/beforeBlockString.mjs';\nimport hasBlock from '../../utils/hasBlock.mjs';\nimport { isComment } from '../../utils/typeGuards.mjs';\nimport { isConfigurationComment } from '../../utils/configurationComment.mjs';\nimport optionsMatches from '../../utils/optionsMatches.mjs';\nimport report from '../../utils/report.mjs';\nimport ruleMessages from '../../utils/ruleMessages.mjs';\nimport validateOptions from '../../utils/validateOptions.mjs';\n\nconst ruleName = 'block-no-empty';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected empty block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/block-no-empty',\n};\n\n/** @type {import('stylelint').CoreRules[ruleName]} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [true],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['comments'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreComments = optionsMatches(secondaryOptions, 'ignore', 'comments');\n\n\t\t// Check both kinds of statements: rules and at-rules\n\t\troot.walkRules(check);\n\t\troot.walkAtRules(check);\n\n\t\t/** @typedef {import('postcss').Rule | import('postcss').AtRule} Statement */\n\n\t\t/**\n\t\t * @param {Statement} statement\n\t\t */\n\t\tfunction check(statement) {\n\t\t\tif (!hasBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hasNotableChild(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hasNonWhitespace(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet index = beforeBlockString(statement, { noRawBefore: true }).length;\n\n\t\t\t// For empty blocks when using SugarSS parser\n\t\t\tif (statement.raws.between === undefined) {\n\t\t\t\tindex--;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode: statement,\n\t\t\t\tstart: statement.positionBy({ index }),\n\t\t\t\tend: statement.rangeBy({}).end,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {Statement} statement\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction hasNotableChild(statement) {\n\t\t\treturn (statement.nodes ?? []).some((child) => {\n\t\t\t\tif (isComment(child)) {\n\t\t\t\t\tif (ignoreComments) return false;\n\n\t\t\t\t\tif (isConfigurationComment(child, context.configurationComment)) return false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {Statement} statement\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction hasNonWhitespace(statement) {\n\t\t\tconst { after } = statement.raws;\n\n\t\t\treturn typeof after === 'string' && /\\S/.test(after);\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nexport default rule;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEA,MAAM,WAAW;AAEjB,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,UAAY,AAAD,EAAE,UAAU;IACvC,UAAU;AACX;AAEA,MAAM,OAAO;IACZ,KAAK;AACN;AAEA,oDAAoD,GACpD,MAAM,OAAO,CAAC,SAAS,kBAAkB;IACxC,OAAO,CAAC,MAAM;QACb,MAAM,eAAe,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAClC,QACA,UACA;YACC,QAAQ;YACR,UAAU;gBAAC;aAAK;QACjB,GACA;YACC,QAAQ;YACR,UAAU;gBACT,QAAQ;oBAAC;iBAAW;YACrB;YACA,UAAU;QACX;QAGD,IAAI,CAAC,cAAc;YAClB;QACD;QAEA,MAAM,iBAAiB,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE,kBAAkB,UAAU;QAElE,qDAAqD;QACrD,KAAK,SAAS,CAAC;QACf,KAAK,WAAW,CAAC;QAEjB,2EAA2E,GAE3E;;GAEC,GACD,SAAS,MAAM,SAAS;YACvB,IAAI,CAAC,CAAA,GAAA,wJAAA,CAAA,UAAQ,AAAD,EAAE,YAAY;gBACzB;YACD;YAEA,IAAI,gBAAgB,YAAY;gBAC/B;YACD;YAEA,IAAI,iBAAiB,YAAY;gBAChC;YACD;YAEA,IAAI,QAAQ,CAAA,GAAA,iKAAA,CAAA,UAAiB,AAAD,EAAE,WAAW;gBAAE,aAAa;YAAK,GAAG,MAAM;YAEtE,6CAA6C;YAC7C,IAAI,UAAU,IAAI,CAAC,OAAO,KAAK,WAAW;gBACzC;YACD;YAEA,CAAA,GAAA,sJAAA,CAAA,UAAM,AAAD,EAAE;gBACN,SAAS,SAAS,QAAQ;gBAC1B,MAAM;gBACN,OAAO,UAAU,UAAU,CAAC;oBAAE;gBAAM;gBACpC,KAAK,UAAU,OAAO,CAAC,CAAC,GAAG,GAAG;gBAC9B;gBACA;YACD;QACD;QAEA;;;GAGC,GACD,SAAS,gBAAgB,SAAS;YACjC,OAAO,CAAC,UAAU,KAAK,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;gBACpC,IAAI,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,QAAQ;oBACrB,IAAI,gBAAgB,OAAO;oBAE3B,IAAI,CAAA,GAAA,oKAAA,CAAA,yBAAsB,AAAD,EAAE,OAAO,QAAQ,oBAAoB,GAAG,OAAO;gBACzE;gBAEA,OAAO;YACR;QACD;QAEA;;;GAGC,GACD,SAAS,iBAAiB,SAAS;YAClC,MAAM,EAAE,KAAK,EAAE,GAAG,UAAU,IAAI;YAEhC,OAAO,OAAO,UAAU,YAAY,KAAK,IAAI,CAAC;QAC/C;IACD;AACD;AAEA,KAAK,QAAQ,GAAG;AAChB,KAAK,QAAQ,GAAG;AAChB,KAAK,IAAI,GAAG;uCACG","ignoreList":[0],"debugId":null}}]
}