{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/uniteSets.mjs"],"sourcesContent":["/**\n * Unite two or more sets\n *\n * @param {Iterable<string>[]} args\n * @see {@link https://github.com/microsoft/TypeScript/issues/57228|GitHub}\n */\nexport default function uniteSets(...args) {\n\treturn new Set([...args].reduce((result, set) => [...result, ...set], []));\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACc,SAAS,UAAU,GAAG,IAAI;IACxC,OAAO,IAAI,IAAI;WAAI;KAAK,CAAC,MAAM,CAAC,CAAC,QAAQ,MAAQ;eAAI;eAAW;SAAI,EAAE,EAAE;AACzE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/reference/atKeywords.mjs"],"sourcesContent":["import uniteSets from '../utils/uniteSets.mjs';\n\n/** @type {ReadonlySet<string>} */\nexport const deprecatedAtKeywords = new Set(['apply', 'document', 'nest', 'viewport']);\n\n/**\n * @see https://www.w3.org/TR/css-nesting-1/#conditionals\n * @type {ReadonlySet<string>}\n */\nexport const nestingSupportedAtKeywords = new Set([\n\t'container',\n\t'layer',\n\t'media',\n\t'scope',\n\t'starting-style',\n\t'supports',\n]);\n\n/**\n * @see https://www.w3.org/TR/css-page-3/#syntax-page-selector\n * @type {ReadonlySet<string>}\n */\nexport const pageMarginAtKeywords = new Set([\n\t'top-left-corner',\n\t'top-left',\n\t'top-center',\n\t'top-right',\n\t'top-right-corner',\n\t'bottom-left-corner',\n\t'bottom-left',\n\t'bottom-center',\n\t'bottom-right',\n\t'bottom-right-corner',\n\t'left-top',\n\t'left-middle',\n\t'left-bottom',\n\t'right-top',\n\t'right-middle',\n\t'right-bottom',\n]);\n\n/**\n * @see https://www.w3.org/TR/css-fonts-4/#font-feature-values-font-feature-value-type\n * @type {ReadonlySet<string>}\n */\nconst fontFeatureValueTypes = new Set([\n\t'annotation',\n\t'character-variant',\n\t'historical-forms',\n\t'ornaments',\n\t'styleset',\n\t'stylistic',\n\t'swash',\n]);\n\n/**\n * @see https://developer.mozilla.org/en/docs/Web/CSS/At-rule\n * @type {ReadonlySet<string>}\n */\nexport const atKeywords = uniteSets(\n\tdeprecatedAtKeywords,\n\tnestingSupportedAtKeywords,\n\tpageMarginAtKeywords,\n\tfontFeatureValueTypes,\n\t[\n\t\t'counter-style',\n\t\t'custom-media',\n\t\t'custom-selector',\n\t\t'font-face',\n\t\t'font-feature-values',\n\t\t'font-palette-values',\n\t\t'import',\n\t\t'keyframes',\n\t\t'namespace',\n\t\t'page',\n\t\t'position-try',\n\t\t'property',\n\t\t'scroll-timeline',\n\t\t'view-transition',\n\t],\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AAGO,MAAM,uBAAuB,IAAI,IAAI;IAAC;IAAS;IAAY;IAAQ;CAAW;AAM9E,MAAM,6BAA6B,IAAI,IAAI;IACjD;IACA;IACA;IACA;IACA;IACA;CACA;AAMM,MAAM,uBAAuB,IAAI,IAAI;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAED;;;CAGC,GACD,MAAM,wBAAwB,IAAI,IAAI;IACrC;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAMM,MAAM,aAAa,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EACjC,sBACA,4BACA,sBACA,uBACA;IACC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/regexes.mjs"],"sourcesContent":["import { nestingSupportedAtKeywords } from '../reference/atKeywords.mjs';\n\nexport const atRuleRegexes = {\n\tmediaName: /^media$/i,\n\tkeyframesName: /^(-(o|moz|ms|webkit)-)?keyframes$/i,\n\tpropertyName: /^property$/i,\n\timportName: /^import$/i,\n\tunsupportedNestingNames: new RegExp(\n\t\t`^((?!${[...nestingSupportedAtKeywords.values()].join('|')}).)*$`,\n\t\t'i',\n\t),\n\tlayerName: /^layer$/i,\n\tcontainerName: /^container$/i,\n};\n\nexport const descriptorRegexes = {\n\tsyntaxName: /^syntax$/i,\n};\n\nexport const functionRegexes = {\n\tlayer: /layer\\((.*?)\\)/i,\n};\n\nexport const propertyRegexes = {\n\tcontainerNameAndShorthandName: /^container(-name)?$/i,\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,gBAAgB;IAC5B,WAAW;IACX,eAAe;IACf,cAAc;IACd,YAAY;IACZ,yBAAyB,IAAI,OAC5B,CAAC,KAAK,EAAE;WAAI,8JAAA,CAAA,6BAA0B,CAAC,MAAM;KAAG,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,EACjE;IAED,WAAW;IACX,eAAe;AAChB;AAEO,MAAM,oBAAoB;IAChC,YAAY;AACb;AAEO,MAAM,kBAAkB;IAC9B,OAAO;AACR;AAEO,MAAM,kBAAkB;IAC9B,+BAA+B;AAChC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getImportantPosition.mjs"],"sourcesContent":["/**\n * Returns a position of `!important` (or `! important` including whitespaces)\n * from the specified CSS source code. If not found, returns `undefined`.\n *\n * @param {string} source\n * @returns {{ index: number, endIndex: number } | undefined}\n */\nexport default function getImportantPosition(source) {\n\tconst pattern = /!\\s*important\\b/gi;\n\tconst match = pattern.exec(source);\n\n\tif (!match) return;\n\n\treturn { index: match.index, endIndex: pattern.lastIndex };\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACc,SAAS,qBAAqB,MAAM;IAClD,MAAM,UAAU;IAChB,MAAM,QAAQ,QAAQ,IAAI,CAAC;IAE3B,IAAI,CAAC,OAAO;IAEZ,OAAO;QAAE,OAAO,MAAM,KAAK;QAAE,UAAU,QAAQ,SAAS;IAAC;AAC1D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/rules/keyframe-declaration-no-important/index.mjs"],"sourcesContent":["import { assert } from '../../utils/validateTypes.mjs';\nimport { atRuleRegexes } from '../../utils/regexes.mjs';\nimport getImportantPosition from '../../utils/getImportantPosition.mjs';\nimport report from '../../utils/report.mjs';\nimport ruleMessages from '../../utils/ruleMessages.mjs';\nimport validateOptions from '../../utils/validateOptions.mjs';\n\nconst ruleName = 'keyframe-declaration-no-important';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected !important',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/keyframe-declaration-no-important',\n};\n\n/** @type {import('stylelint').CoreRules[ruleName]} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(atRuleRegexes.keyframesName, (atRuleKeyframes) => {\n\t\t\tatRuleKeyframes.walkDecls((decl) => {\n\t\t\t\tif (!decl.important) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst pos = getImportantPosition(decl.toString());\n\n\t\t\t\tassert(pos);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: pos.index,\n\t\t\t\t\tendIndex: pos.endIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nexport default rule;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA,MAAM,WAAW;AAEjB,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,UAAY,AAAD,EAAE,UAAU;IACvC,UAAU;AACX;AAEA,MAAM,OAAO;IACZ,KAAK;AACN;AAEA,oDAAoD,GACpD,MAAM,OAAO,CAAC;IACb,OAAO,CAAC,MAAM;QACb,MAAM,eAAe,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAAE,QAAQ,UAAU;YAAE,QAAQ;QAAQ;QAEzE,IAAI,CAAC,cAAc;YAClB;QACD;QAEA,KAAK,WAAW,CAAC,uJAAA,CAAA,gBAAa,CAAC,aAAa,EAAE,CAAC;YAC9C,gBAAgB,SAAS,CAAC,CAAC;gBAC1B,IAAI,CAAC,KAAK,SAAS,EAAE;oBACpB;gBACD;gBAEA,MAAM,MAAM,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE,KAAK,QAAQ;gBAE9C,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;gBAEP,CAAA,GAAA,sJAAA,CAAA,UAAM,AAAD,EAAE;oBACN,SAAS,SAAS,QAAQ;oBAC1B,MAAM;oBACN,OAAO,IAAI,KAAK;oBAChB,UAAU,IAAI,QAAQ;oBACtB;oBACA;gBACD;YACD;QACD;IACD;AACD;AAEA,KAAK,QAAQ,GAAG;AAChB,KAAK,QAAQ,GAAG;AAChB,KAAK,IAAI,GAAG;uCACG","ignoreList":[0],"debugId":null}}]
}