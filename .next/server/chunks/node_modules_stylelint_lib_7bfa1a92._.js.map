{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getRuleSelector.mjs"],"sourcesContent":["/**\n * @param {import('postcss').Rule} ruleNode\n * @returns {string}\n */\nexport default function getRuleSelector(ruleNode) {\n\tconst raws = ruleNode.raws;\n\n\treturn (raws.selector && raws.selector.raw) || ruleNode.selector;\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACc,SAAS,gBAAgB,QAAQ;IAC/C,MAAM,OAAO,SAAS,IAAI;IAE1B,OAAO,AAAC,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,GAAG,IAAK,SAAS,QAAQ;AACjE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/rules/no-invalid-double-slash-comments/index.mjs"],"sourcesContent":["import { assertString } from '../../utils/validateTypes.mjs';\nimport getRuleSelector from '../../utils/getRuleSelector.mjs';\nimport report from '../../utils/report.mjs';\nimport ruleMessages from '../../utils/ruleMessages.mjs';\nimport validateOptions from '../../utils/validateOptions.mjs';\n\nconst ruleName = 'no-invalid-double-slash-comments';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected double-slash CSS comment',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-invalid-double-slash-comments',\n};\n\n/** @type {import('stylelint').CoreRules[ruleName]} */\nconst rule = (primary, _, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (decl.prop.startsWith('//')) {\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tconst selectors = getRuleSelector(ruleNode).split(',');\n\n\t\t\tlet ruleStringified;\n\t\t\tlet index = 0;\n\n\t\t\tfor (const value of selectors) {\n\t\t\t\tconst selector = value.trimStart();\n\n\t\t\t\tif (selector.startsWith('//')) {\n\t\t\t\t\truleStringified ??= ruleNode.toString();\n\t\t\t\t\tassertString(context.newline);\n\n\t\t\t\t\tconst offset = value.length - selector.length;\n\t\t\t\t\tconst i = index + offset;\n\t\t\t\t\tconst lines = ruleStringified.slice(i).split(context.newline);\n\t\t\t\t\tconst comment = lines[0] ?? '';\n\t\t\t\t\tconst endIndex = i + comment.length;\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tendIndex,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tindex += value.length + 1;\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nexport default rule;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,MAAM,WAAW;AAEjB,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,UAAY,AAAD,EAAE,UAAU;IACvC,UAAU;AACX;AAEA,MAAM,OAAO;IACZ,KAAK;AACN;AAEA,oDAAoD,GACpD,MAAM,OAAO,CAAC,SAAS,GAAG;IACzB,OAAO,CAAC,MAAM;QACb,MAAM,eAAe,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAAE,QAAQ,UAAU;YAAE,QAAQ;QAAQ;QAEzE,IAAI,CAAC,cAAc;YAClB;QACD;QAEA,KAAK,SAAS,CAAC,CAAC;YACf,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC,OAAO;gBAC/B,CAAA,GAAA,sJAAA,CAAA,UAAM,AAAD,EAAE;oBACN,SAAS,SAAS,QAAQ;oBAC1B,MAAM;oBACN;oBACA;gBACD;YACD;QACD;QAEA,KAAK,SAAS,CAAC,CAAC;YACf,MAAM,YAAY,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAAE,UAAU,KAAK,CAAC;YAElD,IAAI;YACJ,IAAI,QAAQ;YAEZ,KAAK,MAAM,SAAS,UAAW;gBAC9B,MAAM,WAAW,MAAM,SAAS;gBAEhC,IAAI,SAAS,UAAU,CAAC,OAAO;oBAC9B,oBAAoB,SAAS,QAAQ;oBACrC,CAAA,GAAA,6JAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,OAAO;oBAE5B,MAAM,SAAS,MAAM,MAAM,GAAG,SAAS,MAAM;oBAC7C,MAAM,IAAI,QAAQ;oBAClB,MAAM,QAAQ,gBAAgB,KAAK,CAAC,GAAG,KAAK,CAAC,QAAQ,OAAO;oBAC5D,MAAM,UAAU,KAAK,CAAC,EAAE,IAAI;oBAC5B,MAAM,WAAW,IAAI,QAAQ,MAAM;oBAEnC,CAAA,GAAA,sJAAA,CAAA,UAAM,AAAD,EAAE;wBACN,SAAS,SAAS,QAAQ;wBAC1B,MAAM;wBACN;wBACA;wBACA,OAAO;wBACP;oBACD;gBACD;gBAEA,SAAS,MAAM,MAAM,GAAG;YACzB;QACD;IACD;AACD;AAEA,KAAK,QAAQ,GAAG;AAChB,KAAK,QAAQ,GAAG;AAChB,KAAK,IAAI,GAAG;uCACG","ignoreList":[0],"debugId":null}}]
}