module.exports = {

"[project]/node_modules/stylelint/lib/utils/pluralize.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * Returns the plural form of the given word.
 *
 * @param {string} singular
 * @param {number} count
 * @returns {string}
 */ __turbopack_context__.s({
    "default": (()=>pluralize)
});
function pluralize(singular, count) {
    return count === 1 ? singular : `${singular}s`;
}
}}),
"[project]/node_modules/stylelint/node_modules/ansi-regex/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
'use strict';
module.exports = ({ onlyFirst = false } = {})=>{
    const pattern = [
        '[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)',
        '(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))'
    ].join('|');
    return new RegExp(pattern, onlyFirst ? undefined : 'g');
};
}}),
"[project]/node_modules/stylelint/node_modules/strip-ansi/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
'use strict';
const ansiRegex = __turbopack_context__.r("[project]/node_modules/stylelint/node_modules/ansi-regex/index.js [app-route] (ecmascript)");
module.exports = (string)=>typeof string === 'string' ? string.replace(ansiRegex(), '') : string;
}}),
"[project]/node_modules/stylelint/node_modules/emoji-regex/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
module.exports = function() {
    // https://mths.be/emoji
    return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
};
}}),
"[project]/node_modules/stylelint/node_modules/string-width/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
'use strict';
const stripAnsi = __turbopack_context__.r("[project]/node_modules/stylelint/node_modules/strip-ansi/index.js [app-route] (ecmascript)");
const isFullwidthCodePoint = __turbopack_context__.r("[project]/node_modules/is-fullwidth-code-point/index.js [app-route] (ecmascript)");
const emojiRegex = __turbopack_context__.r("[project]/node_modules/stylelint/node_modules/emoji-regex/index.js [app-route] (ecmascript)");
const stringWidth = (string)=>{
    if (typeof string !== 'string' || string.length === 0) {
        return 0;
    }
    string = stripAnsi(string);
    if (string.length === 0) {
        return 0;
    }
    string = string.replace(emojiRegex(), '  ');
    let width = 0;
    for(let i = 0; i < string.length; i++){
        const code = string.codePointAt(i);
        // Ignore control characters
        if (code <= 0x1F || code >= 0x7F && code <= 0x9F) {
            continue;
        }
        // Ignore combining characters
        if (code >= 0x300 && code <= 0x36F) {
            continue;
        }
        // Surrogates
        if (code > 0xFFFF) {
            i++;
        }
        width += isFullwidthCodePoint(code) ? 2 : 1;
    }
    return width;
};
module.exports = stringWidth;
// TODO: remove this in the next major version
module.exports.default = stringWidth;
}}),
"[project]/node_modules/stylelint/lib/formatters/calcSeverityCounts.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>calcSeverityCounts)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$constants$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/constants.mjs [app-route] (ecmascript)");
;
function calcSeverityCounts(severity, counts) {
    switch(severity){
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$constants$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SEVERITY_ERROR"]:
            counts.error += 1;
            break;
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$constants$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SEVERITY_WARNING"]:
            counts.warning += 1;
            break;
        default:
            throw new Error(`Unknown severity: "${severity}"`);
    }
}
}}),
"[project]/node_modules/stylelint/lib/utils/isUnicodeSupported.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>isUnicodeSupported)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__ = __turbopack_context__.i("[externals]/node:process [external] (node:process, cjs)");
;
function isUnicodeSupported() {
    if (__TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].platform !== 'win32') {
        return __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].env.TERM !== 'linux'; // Linux console (kernel)
    }
    return Boolean(__TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].env.WT_SESSION) || // Windows Terminal
    Boolean(__TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].env.TERMINUS_SUBLIME) || // Terminus (<0.2.27)
    __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].env.ConEmuTask === '{cmd::Cmder}' || // ConEmu and cmder
    __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].env.TERM_PROGRAM === 'Terminus-Sublime' || __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].env.TERM_PROGRAM === 'vscode' || __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].env.TERM === 'xterm-256color' || __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].env.TERM === 'alacritty' || __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].env.TERMINAL_EMULATOR === 'JetBrains-JediTerm' || __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].env.TERM?.startsWith('rxvt-unicode') // fork of rxvt
    ;
}
}}),
"[project]/node_modules/stylelint/lib/formatters/preprocessWarnings.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>preprocessWarnings)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$constants$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/constants.mjs [app-route] (ecmascript)");
;
function preprocessWarnings(result) {
    for (const error of result.parseErrors || []){
        result.warnings.push(parseErrorToWarning(error));
    }
    for (const warning of result.warnings){
        warning.severity = normalizeSeverity(warning);
    }
    result.warnings.sort(byLocationOrder);
    return result;
}
/**
 * @param {ParseError} error
 * @returns {Warning}
 */ function parseErrorToWarning(error) {
    return {
        line: error.line,
        column: error.column,
        rule: error.stylelintType,
        severity: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$constants$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SEVERITY_ERROR"],
        text: `${error.text} (${error.stylelintType})`
    };
}
/**
 * @param {Warning} warning
 * @returns {Severity}
 */ function normalizeSeverity(warning) {
    // NOTE: Plugins may add a warning without severity, for example,
    // by directly using the PostCSS `Result#warn()` API.
    return warning.severity || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$constants$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_SEVERITY"];
}
/**
 * @param {Warning} a
 * @param {Warning} b
 * @returns {number}
 */ function byLocationOrder(a, b) {
    // positionless first
    if (!a.line && b.line) return -1;
    // positionless first
    if (a.line && !b.line) return 1;
    if (a.line < b.line) return -1;
    if (a.line > b.line) return 1;
    if (a.column < b.column) return -1;
    if (a.column > b.column) return 1;
    return 0;
}
}}),
"[project]/node_modules/supports-hyperlinks/index.js [app-route] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
'use strict';
const supportsColor = __turbopack_context__.r("[project]/node_modules/supports-color/index.js [app-route] (ecmascript)");
const hasFlag = __turbopack_context__.r("[project]/node_modules/has-flag/index.js [app-route] (ecmascript)");
/**
@param {string} versionString
@returns {{ major: number, minor: number, patch: number }}
*/ function parseVersion(versionString) {
    if (/^\d{3,4}$/.test(versionString)) {
        // Env var doesn't always use dots. example: 4601 => 46.1.0
        const m = /(\d{1,2})(\d{2})/.exec(versionString) || [];
        return {
            major: 0,
            minor: parseInt(m[1], 10),
            patch: parseInt(m[2], 10)
        };
    }
    const versions = (versionString || '').split('.').map((n)=>parseInt(n, 10));
    return {
        major: versions[0],
        minor: versions[1],
        patch: versions[2]
    };
}
/**
@param {{ isTTY?: boolean | undefined }} stream
@returns {boolean}
*/ // eslint-disable-next-line complexity
function supportsHyperlink(stream) {
    const { CI, FORCE_HYPERLINK, NETLIFY, TEAMCITY_VERSION, TERM_PROGRAM, TERM_PROGRAM_VERSION, VTE_VERSION, TERM } = process.env;
    if (FORCE_HYPERLINK) {
        return !(FORCE_HYPERLINK.length > 0 && parseInt(FORCE_HYPERLINK, 10) === 0);
    }
    if (hasFlag('no-hyperlink') || hasFlag('no-hyperlinks') || hasFlag('hyperlink=false') || hasFlag('hyperlink=never')) {
        return false;
    }
    if (hasFlag('hyperlink=true') || hasFlag('hyperlink=always')) {
        return true;
    }
    // Netlify does not run a TTY, it does not need `supportsColor` check
    if (NETLIFY) {
        return true;
    }
    // If they specify no colors, they probably don't want hyperlinks.
    if (!supportsColor.supportsColor(stream)) {
        return false;
    }
    if (stream && !stream.isTTY) {
        return false;
    }
    // Windows Terminal
    if ('WT_SESSION' in process.env) {
        return true;
    }
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    if (CI) {
        return false;
    }
    if (TEAMCITY_VERSION) {
        return false;
    }
    if (TERM_PROGRAM) {
        const version = parseVersion(TERM_PROGRAM_VERSION || '');
        switch(TERM_PROGRAM){
            case 'iTerm.app':
                if (version.major === 3) {
                    return version.minor >= 1;
                }
                return version.major > 3;
            case 'WezTerm':
                return version.major >= 20200620;
            case 'vscode':
                // eslint-disable-next-line no-mixed-operators
                return version.major > 1 || version.major === 1 && version.minor >= 72;
            case 'ghostty':
                return true;
        }
    }
    if (VTE_VERSION) {
        // 0.50.0 was supposed to support hyperlinks, but throws a segfault
        if (VTE_VERSION === '0.50.0') {
            return false;
        }
        const version = parseVersion(VTE_VERSION);
        return version.major > 0 || version.minor >= 50;
    }
    switch(TERM){
        case 'alacritty':
            // Support added in v0.11 (2022-10-13)
            return true;
    }
    return false;
}
module.exports = {
    supportsHyperlink,
    stdout: supportsHyperlink(process.stdout),
    stderr: supportsHyperlink(process.stderr)
};
}}),
"[project]/node_modules/stylelint/lib/formatters/terminalLink.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>terminalLink)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$supports$2d$hyperlinks$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/supports-hyperlinks/index.js [app-route] (ecmascript)");
;
// ANSI escapes
const OSC = '\u001B]';
const BEL = '\u0007';
const SEP = ';';
function terminalLink(text, url) {
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$supports$2d$hyperlinks$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].stdout) {
        return [
            OSC,
            '8',
            SEP,
            SEP,
            url,
            BEL,
            text,
            OSC,
            '8',
            SEP,
            SEP,
            BEL
        ].join('');
    }
    return text;
}
}}),
"[project]/node_modules/stylelint/lib/formatters/stringFormatter.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>stringFormatter)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$path__$5b$external$5d$__$28$node$3a$path$2c$__cjs$29$__ = __turbopack_context__.i("[externals]/node:path [external] (node:path, cjs)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__ = __turbopack_context__.i("[externals]/node:process [external] (node:process, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$table$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/table/dist/src/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$picocolors$2f$picocolors$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/picocolors/picocolors.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$node_modules$2f$string$2d$width$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/node_modules/string-width/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/validateTypes.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$calcSeverityCounts$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/formatters/calcSeverityCounts.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isUnicodeSupported$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/isUnicodeSupported.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$pluralize$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/pluralize.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$preprocessWarnings$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/formatters/preprocessWarnings.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$terminalLink$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/formatters/terminalLink.mjs [app-route] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
const { yellow, dim, underline, blue, red, green } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$picocolors$2f$picocolors$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"];
const NON_ASCII_PATTERN = /\P{ASCII}/u;
const MARGIN_WIDTHS = 9;
/**
 * @param {string} s
 * @returns {string}
 */ function identity(s) {
    return s;
}
const levelColors = {
    info: blue,
    warning: yellow,
    error: red,
    success: identity
};
const supportsUnicode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$isUnicodeSupported$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])();
const symbols = {
    info: blue(supportsUnicode ? 'ℹ' : 'i'),
    warning: yellow(supportsUnicode ? '⚠' : '‼'),
    error: red(supportsUnicode ? '✖' : '×'),
    success: green(supportsUnicode ? '✔' : '√')
};
/**
 * @param {import('stylelint').LintResult[]} results
 * @returns {string}
 */ function deprecationsFormatter(results) {
    const allDeprecationWarnings = results.flatMap((result)=>result.deprecations || []);
    if (allDeprecationWarnings.length === 0) {
        return '';
    }
    const seenText = new Set();
    const lines = [];
    for (const { text, reference } of allDeprecationWarnings){
        if (seenText.has(text)) continue;
        seenText.add(text);
        let line = ` ${dim('-')} ${text}`;
        if (reference) {
            line += dim(` See: ${underline(reference)}`);
        }
        lines.push(line);
    }
    return [
        '',
        yellow('Deprecation warnings:'),
        ...lines,
        ''
    ].join('\n');
}
/**
 * @param {import('stylelint').LintResult[]} results
 * @returns {string}
 */ function invalidOptionsFormatter(results) {
    const allInvalidOptionWarnings = results.flatMap((result)=>(result.invalidOptionWarnings || []).map((warning)=>warning.text));
    const uniqueInvalidOptionWarnings = [
        ...new Set(allInvalidOptionWarnings)
    ];
    return uniqueInvalidOptionWarnings.reduce((output, warning)=>{
        output += red('Invalid Option: ');
        output += warning;
        return `${output}\n`;
    }, '\n');
}
/**
 * @param {string} fromValue
 * @param {string} cwd
 * @returns {string}
 */ function logFrom(fromValue, cwd) {
    if (fromValue.startsWith('<')) {
        return underline(fromValue);
    }
    const filePath = (0, __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$path__$5b$external$5d$__$28$node$3a$path$2c$__cjs$29$__["relative"])(cwd, fromValue).split(__TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$path__$5b$external$5d$__$28$node$3a$path$2c$__cjs$29$__["sep"]).join('/');
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$terminalLink$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(filePath, `file://${fromValue}`);
}
/**
 * @param {{[k: number]: number}} columnWidths
 * @returns {number}
 */ function getMessageWidth(columnWidths) {
    const width = columnWidths[3];
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["assertNumber"])(width);
    if (!__TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].stdout.isTTY) {
        return width;
    }
    const availableWidth = __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].stdout.columns < 80 ? 80 : __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].stdout.columns;
    const fullWidth = Object.values(columnWidths).reduce((a, b)=>a + b);
    // If there is no reason to wrap the text, we won't align the last column to the right
    if (availableWidth > fullWidth + MARGIN_WIDTHS) {
        return width;
    }
    return availableWidth - (fullWidth - width + MARGIN_WIDTHS);
}
/**
 * @param {import('stylelint').Warning[]} messages
 * @param {string} source
 * @param {string} cwd
 * @returns {string}
 */ function formatter(messages, source, cwd) {
    if (messages.length === 0) return '';
    /**
	 * Create a list of column widths, needed to calculate
	 * the size of the message column and if needed wrap it.
	 * @type {{[k: string]: number}}
	 */ const columnWidths = {
        0: 1,
        1: 1,
        2: 1,
        3: 1,
        4: 1
    };
    /**
	 * @param {[string, string, string, string, string]} columns
	 * @returns {[string, string, string, string, string]}
	 */ function calculateWidths(columns) {
        for (const [key, value] of Object.entries(columns)){
            const normalisedValue = value ? value.toString() : value;
            const width = columnWidths[key];
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$validateTypes$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["assertNumber"])(width);
            columnWidths[key] = Math.max(width, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$node_modules$2f$string$2d$width$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(normalisedValue));
        }
        return columns;
    }
    let output = '\n';
    if (source) {
        output += `${logFrom(source, cwd)}\n`;
    }
    /**
	 * @param {import('stylelint').Warning} message
	 * @returns {string}
	 */ function formatMessageText(message) {
        let result = message.text;
        result = result// Remove all control characters (newline, tab and etc)
        .replace(/[\u0001-\u001A]+/g, ' ') // eslint-disable-line no-control-regex
        .replace(/\.$/, '');
        const ruleString = ` (${message.rule})`;
        if (result.endsWith(ruleString)) {
            result = result.slice(0, result.lastIndexOf(ruleString));
        }
        return result;
    }
    const cleanedMessages = messages.map((message)=>{
        const { line, column, severity } = message;
        /**
		 * @type {[string, string, string, string, string]}
		 */ const row = [
            line ? line.toString() : '',
            column ? column.toString() : '',
            symbols[severity] ? levelColors[severity](symbols[severity]) : severity,
            formatMessageText(message),
            dim(message.rule || '')
        ];
        calculateWidths(row);
        return row;
    });
    const messageWidth = getMessageWidth(columnWidths);
    const hasNonAsciiChar = messages.some((msg)=>NON_ASCII_PATTERN.test(msg.text));
    output += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$table$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["table"])(cleanedMessages, {
        border: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$table$2f$dist$2f$src$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getBorderCharacters"])('void'),
        columns: {
            0: {
                alignment: 'right',
                width: columnWidths[0],
                paddingRight: 0,
                paddingLeft: 2
            },
            1: {
                alignment: 'left',
                width: columnWidths[1]
            },
            2: {
                alignment: 'center',
                width: columnWidths[2]
            },
            3: {
                alignment: 'left',
                width: messageWidth,
                wrapWord: messageWidth > 1 && !hasNonAsciiChar
            },
            4: {
                alignment: 'left',
                width: columnWidths[4],
                paddingRight: 0
            }
        },
        drawHorizontalLine: ()=>false
    }).split('\n').map((el)=>el.replace(/(\d+)\s+(\d+)/, (_m, p1, p2)=>dim(`${p1}:${p2}`)).trimEnd()).join('\n');
    return output;
}
function stringFormatter(results, returnValue) {
    let output = invalidOptionsFormatter(results);
    output += deprecationsFormatter(results);
    const resultCounts = {
        error: 0,
        warning: 0
    };
    const fixableCounts = {
        error: 0,
        warning: 0
    };
    output = results.reduce((accum, result)=>{
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$preprocessWarnings$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(result);
        accum += formatter(result.warnings, result.source || '', returnValue && returnValue.cwd || __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$process__$5b$external$5d$__$28$node$3a$process$2c$__cjs$29$__["default"].cwd());
        for (const warning of result.warnings){
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$calcSeverityCounts$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(warning.severity, resultCounts);
            const fixable = returnValue.ruleMetadata?.[warning.rule]?.fixable;
            if (fixable === true) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$calcSeverityCounts$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(warning.severity, fixableCounts);
            }
        }
        return accum;
    }, output);
    // Ensure consistent padding
    output = output.trim();
    if (output !== '') {
        output = `\n${output}\n`;
        const errorCount = resultCounts.error;
        const warningCount = resultCounts.warning;
        const total = errorCount + warningCount;
        if (total > 0) {
            const error = red(`${errorCount} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$pluralize$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])('error', errorCount)}`);
            const warning = yellow(`${warningCount} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$pluralize$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])('warning', warningCount)}`);
            const symbol = errorCount > 0 ? symbols.error : symbols.warning;
            output += `\n${symbol} ${total} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$pluralize$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])('problem', total)} (${error}, ${warning})`;
        }
        const fixErrorCount = fixableCounts.error;
        const fixWarningCount = fixableCounts.warning;
        if (fixErrorCount > 0 || fixWarningCount > 0) {
            let fixErrorText;
            let fixWarningText;
            if (fixErrorCount > 0) {
                fixErrorText = `${fixErrorCount} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$pluralize$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])('error', fixErrorCount)}`;
            }
            if (fixWarningCount > 0) {
                fixWarningText = `${fixWarningCount} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$pluralize$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])('warning', fixWarningCount)}`;
            }
            const countText = [
                fixErrorText,
                fixWarningText
            ].filter(Boolean).join(' and ');
            output += `\n  ${countText} potentially fixable with the "--fix" option.`;
        }
        output += '\n\n';
    }
    return output;
}
}}),
"[project]/node_modules/stylelint/lib/formatters/verboseFormatter.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>verboseFormatter)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$picocolors$2f$picocolors$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/picocolors/picocolors.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$pluralize$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/utils/pluralize.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$stringFormatter$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/formatters/stringFormatter.mjs [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$terminalLink$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/formatters/terminalLink.mjs [app-route] (ecmascript)");
;
const { underline, red, yellow, dim, green } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$picocolors$2f$picocolors$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"];
;
;
;
function verboseFormatter(results, returnValue) {
    let output = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$stringFormatter$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(results, returnValue);
    if (output === '') {
        output = '\n';
    }
    const ignoredCount = results.filter((result)=>result.ignored).length;
    const checkedDisplay = ignoredCount ? `${results.length - ignoredCount} of ${results.length}` : results.length;
    output += underline(`${checkedDisplay} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$pluralize$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])('source', results.length)} checked\n`);
    for (const result of results){
        let formatting = green;
        if (result.errored) {
            formatting = red;
        } else if (result.warnings.length) {
            formatting = yellow;
        } else if (result.ignored) {
            formatting = dim;
        }
        let sourceText = fileLink(result.source);
        if (result.ignored) {
            sourceText += ' (ignored)';
        }
        output += formatting(`  ${sourceText}\n`);
    }
    const warnings = results.flatMap((r)=>r.warnings);
    if (warnings.length === 0) {
        output += '\n0 problems found\n';
    } else {
        const warningsBySeverity = groupBy(warnings, (w)=>w.severity);
        /**
		 * @param {Severity} severity
		 */ const printProblems = (severity)=>{
            const problems = warningsBySeverity[severity];
            if (problems === undefined) return;
            output += '\n';
            output += underline(`${problems.length} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$pluralize$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(severity, problems.length)} found\n`);
            const problemsByRule = groupBy(problems, (w)=>w.rule);
            const metadata = returnValue.ruleMetadata;
            for (const [rule, list] of Object.entries(problemsByRule)){
                const meta = metadata[rule] || {};
                let additional = [
                    meta.fixable ? 'maybe fixable' : '',
                    meta.deprecated ? 'deprecated' : ''
                ].filter(Boolean).join(', ');
                additional = additional ? ` (${additional})` : '';
                output += dim(`  ${ruleLink(rule, meta)}: ${list.length}${additional}\n`);
            }
        };
        printProblems('error');
        printProblems('warning');
    }
    const fixedRules = getFixedRules(results);
    if (fixedRules.size) {
        let lines = '\n';
        let total = 0;
        for (const [name, count] of fixedRules){
            const meta = returnValue.ruleMetadata[name];
            lines += dim(`  ${ruleLink(name, meta)}: ${count}\n`);
            total += count;
        }
        output += '\n';
        output += underline(`${total} ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$utils$2f$pluralize$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])('problem', total)} fixed`);
        output += lines;
    }
    return `${output}\n`;
}
/**
 * @template {string} K
 * @param {Warning[]} array
 * @param {(w: Warning) => K} keyFn
 * @returns {Record<K, Warning[]>}
 * @todo replace by Object.groupBy once support for Node.js version 20 is dropped
 */ function groupBy(array, keyFn) {
    /** @type {Record<string, Warning[]>} */ const result = {};
    for (const item of array){
        const key = keyFn(item);
        let warnings = result[key];
        if (warnings === undefined) {
            result[key] = warnings = [];
        }
        warnings.push(item);
    }
    return result;
}
/**
 * @param {string | undefined} source
 * @returns {string}
 */ function fileLink(source) {
    if (!source || source.startsWith('<')) {
        return `${source}`;
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$terminalLink$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(source, `file://${source}`);
}
/**
 * @param {string} rule
 * @param {Partial<RuleMeta> | undefined} metadata
 * @returns {string}
 */ function ruleLink(rule, metadata) {
    if (metadata && metadata.url) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$terminalLink$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(rule, metadata.url);
    }
    return rule;
}
/** @param {LintResult[]} results */ function getFixedRules(results) {
    /** @type {Map<string, number>} */ const rules = new Map();
    for (const { _postcssResult } of results){
        if (!_postcssResult) continue; // CSS syntax error
        const { stylelint: { fixersData } } = _postcssResult;
        const entries = Object.entries(fixersData);
        for (const [ruleName, count] of entries){
            if (count) rules.set(ruleName, count);
        }
    }
    return rules;
}
}}),

};

//# sourceMappingURL=node_modules_caa1fa76._.js.map