{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getAtRuleParams.mjs"],"sourcesContent":["/**\n * @param {import('postcss').AtRule} atRule\n * @returns {string}\n */\nexport default function getAtRuleParams(atRule) {\n\treturn atRule.raws.params?.raw ?? atRule.params;\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACc,SAAS,gBAAgB,MAAM;IAC7C,OAAO,OAAO,IAAI,CAAC,MAAM,EAAE,OAAO,OAAO,MAAM;AAChD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getRuleSelector.mjs"],"sourcesContent":["/**\n * @param {import('postcss').Rule} ruleNode\n * @returns {string}\n */\nexport default function getRuleSelector(ruleNode) {\n\tconst raws = ruleNode.raws;\n\n\treturn (raws.selector && raws.selector.raw) || ruleNode.selector;\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACc,SAAS,gBAAgB,QAAQ;IAC/C,MAAM,OAAO,SAAS,IAAI;IAE1B,OAAO,AAAC,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,GAAG,IAAK,SAAS,QAAQ;AACjE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/nodeFieldIndices.mjs"],"sourcesContent":["import getAtRuleParams from './getAtRuleParams.mjs';\nimport getRuleSelector from './getRuleSelector.mjs';\n\nimport { isObject, isString } from './validateTypes.mjs';\n\n/** @import {AtRule, Declaration, Rule} from 'postcss' */\n\n/**\n * @param {AtRule} atRule\n * @returns {number}\n */\nexport function atRuleParamIndex(atRule) {\n\tconst index = atRuleAfterNameIndex(atRule);\n\n\treturn index + (atRule.raws.afterName?.length ?? 0);\n}\n\n/**\n * @param {AtRule} atRule\n * @returns {number}\n */\nexport function atRuleAfterIndex(atRule) {\n\t// subtract 1 for `}`\n\n\tconst endOffset = atRule.source?.end?.offset;\n\n\tif (!endOffset) return atRule.toString().length - 1;\n\n\tconst afterLength = atRule.raws?.after?.length;\n\n\tif (!afterLength) return endOffset - 1;\n\n\treturn endOffset - (afterLength + 1);\n}\n\n/**\n * @param {AtRule} atRule\n * @returns {number}\n */\nexport function atRuleAfterNameIndex(atRule) {\n\t// Initial 1 is for the `@`\n\treturn 1 + atRule.name.length;\n}\n\n/**\n * @param {AtRule} atRule\n * @returns {number}\n */\nexport function atRuleBetweenIndex(atRule) {\n\treturn atRuleParamIndex(atRule) + getAtRuleParams(atRule).length;\n}\n\n/**\n * @param {Declaration} decl\n * @returns {number}\n */\nexport function declarationBetweenIndex(decl) {\n\tconst { prop } = decl.raws;\n\tconst propIsObject = isObject(prop);\n\n\treturn countChars([\n\t\tpropIsObject && 'prefix' in prop && prop.prefix,\n\t\t(propIsObject && 'raw' in prop && prop.raw) || decl.prop,\n\t\tpropIsObject && 'suffix' in prop && prop.suffix,\n\t]);\n}\n\n/**\n * Get the index of a declaration's value\n *\n * @param {Declaration} decl\n * @returns {number}\n */\nexport function declarationValueIndex(decl) {\n\tconst { between, value } = decl.raws;\n\n\treturn (\n\t\tdeclarationBetweenIndex(decl) +\n\t\tcountChars([between || ':', value && 'prefix' in value && value.prefix])\n\t);\n}\n\n/**\n * @param {Rule} rule\n * @returns {number}\n */\nexport function ruleBetweenIndex(rule) {\n\treturn getRuleSelector(rule).length;\n}\n\n/**\n * @param {Rule} rule\n * @returns {number}\n */\nexport function ruleAfterIndex(rule) {\n\t// subtract 1 for `}`\n\n\tconst endOffset = rule.source?.end?.offset;\n\n\tif (!endOffset) return rule.toString().length - 1;\n\n\tconst afterLength = rule.raws?.after?.length;\n\n\tif (!afterLength) return endOffset - 1;\n\n\treturn endOffset - (afterLength + 1);\n}\n\n/**\n * @param {unknown[]} values\n * @returns {number}\n */\nfunction countChars(values) {\n\treturn values.reduce((/** @type {number} */ count, value) => {\n\t\tif (isString(value)) return count + value.length;\n\n\t\treturn count;\n\t}, 0);\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AAEA;;;;AAQO,SAAS,iBAAiB,MAAM;IACtC,MAAM,QAAQ,qBAAqB;IAEnC,OAAO,QAAQ,CAAC,OAAO,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC;AACnD;AAMO,SAAS,iBAAiB,MAAM;IACtC,qBAAqB;IAErB,MAAM,YAAY,OAAO,MAAM,EAAE,KAAK;IAEtC,IAAI,CAAC,WAAW,OAAO,OAAO,QAAQ,GAAG,MAAM,GAAG;IAElD,MAAM,cAAc,OAAO,IAAI,EAAE,OAAO;IAExC,IAAI,CAAC,aAAa,OAAO,YAAY;IAErC,OAAO,YAAY,CAAC,cAAc,CAAC;AACpC;AAMO,SAAS,qBAAqB,MAAM;IAC1C,2BAA2B;IAC3B,OAAO,IAAI,OAAO,IAAI,CAAC,MAAM;AAC9B;AAMO,SAAS,mBAAmB,MAAM;IACxC,OAAO,iBAAiB,UAAU,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAAE,QAAQ,MAAM;AACjE;AAMO,SAAS,wBAAwB,IAAI;IAC3C,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,IAAI;IAC1B,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE9B,OAAO,WAAW;QACjB,gBAAgB,YAAY,QAAQ,KAAK,MAAM;QAC9C,gBAAgB,SAAS,QAAQ,KAAK,GAAG,IAAK,KAAK,IAAI;QACxD,gBAAgB,YAAY,QAAQ,KAAK,MAAM;KAC/C;AACF;AAQO,SAAS,sBAAsB,IAAI;IACzC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,KAAK,IAAI;IAEpC,OACC,wBAAwB,QACxB,WAAW;QAAC,WAAW;QAAK,SAAS,YAAY,SAAS,MAAM,MAAM;KAAC;AAEzE;AAMO,SAAS,iBAAiB,IAAI;IACpC,OAAO,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAAE,MAAM,MAAM;AACpC;AAMO,SAAS,eAAe,IAAI;IAClC,qBAAqB;IAErB,MAAM,YAAY,KAAK,MAAM,EAAE,KAAK;IAEpC,IAAI,CAAC,WAAW,OAAO,KAAK,QAAQ,GAAG,MAAM,GAAG;IAEhD,MAAM,cAAc,KAAK,IAAI,EAAE,OAAO;IAEtC,IAAI,CAAC,aAAa,OAAO,YAAY;IAErC,OAAO,YAAY,CAAC,cAAc,CAAC;AACpC;AAEA;;;CAGC,GACD,SAAS,WAAW,MAAM;IACzB,OAAO,OAAO,MAAM,CAAC,CAAC,mBAAmB,GAAG,OAAO;QAClD,IAAI,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,OAAO,QAAQ,MAAM,MAAM;QAEhD,OAAO;IACR,GAAG;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getDeclarationValue.mjs"],"sourcesContent":["/**\n * @param {import('postcss').Declaration} decl\n * @returns {string}\n */\nexport default function getDeclarationValue(decl) {\n\tconst raws = decl.raws;\n\n\treturn (raws.value && raws.value.raw) || decl.value;\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACc,SAAS,oBAAoB,IAAI;IAC/C,MAAM,OAAO,KAAK,IAAI;IAEtB,OAAO,AAAC,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,IAAK,KAAK,KAAK;AACpD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/rules/no-irregular-whitespace/index.mjs"],"sourcesContent":["import {\n\tatRuleAfterIndex,\n\tatRuleAfterNameIndex,\n\tatRuleBetweenIndex,\n\tatRuleParamIndex,\n\tdeclarationBetweenIndex,\n\tdeclarationValueIndex,\n\truleAfterIndex,\n\truleBetweenIndex,\n} from '../../utils/nodeFieldIndices.mjs';\n\nimport getAtRuleParams from '../../utils/getAtRuleParams.mjs';\nimport getDeclarationValue from '../../utils/getDeclarationValue.mjs';\nimport getRuleSelector from '../../utils/getRuleSelector.mjs';\nimport report from '../../utils/report.mjs';\nimport ruleMessages from '../../utils/ruleMessages.mjs';\nimport validateOptions from '../../utils/validateOptions.mjs';\n\nconst ruleName = 'no-irregular-whitespace';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected irregular whitespace',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-irregular-whitespace',\n};\n\nconst IRREGULAR_WHITESPACES = [\n\t'\\u000B', // Line Tabulation (\\v) - <VT>\n\t'\\u000C', // Form Feed (\\f) - <FF>\n\t'\\u00A0', // No-Break Space - <NBSP>\n\t'\\u0085', // Next Line\n\t'\\u1680', // Ogham Space Mark\n\t'\\u180E', // Mongolian Vowel Separator - <MVS>\n\t'\\uFEFF', // Zero Width No-Break Space - <BOM>\n\t'\\u2000', // En Quad\n\t'\\u2001', // Em Quad\n\t'\\u2002', // En Space - <ENSP>\n\t'\\u2003', // Em Space - <EMSP>\n\t'\\u2004', // Tree-Per-Em\n\t'\\u2005', // Four-Per-Em\n\t'\\u2006', // Six-Per-Em\n\t'\\u2007', // Figure Space\n\t'\\u2008', // Punctuation Space - <PUNCSP>\n\t'\\u2009', // Thin Space\n\t'\\u200A', // Hair Space\n\t'\\u200B', // Zero Width Space - <ZWSP>\n\t'\\u2028', // Line Separator\n\t'\\u2029', // Paragraph Separator\n\t'\\u202F', // Narrow No-Break Space\n\t'\\u205F', // Medium Mathematical Space\n\t'\\u3000', // Ideographic Space\n];\n\nconst IRREGULAR_WHITESPACES_PATTERN = new RegExp(`([${IRREGULAR_WHITESPACES.join('')}]+)`, 'g');\n\n/**\n * @param {string} str\n * @returns {Array<{index: number, length: number}>}\n */\nconst findIrregularWhitespace = (str) => {\n\treturn Array.from(str.matchAll(IRREGULAR_WHITESPACES_PATTERN)).map((match) => {\n\t\treturn {\n\t\t\tindex: match.index,\n\t\t\tlength: match[0].length,\n\t\t};\n\t});\n};\n\n/** @type {import('stylelint').CoreRules[ruleName]} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * @template {import('postcss').Node} T\n\t\t * @param {T} node\n\t\t * @param {string | undefined} value\n\t\t * @param {(node: T) => number} getIndex\n\t\t */\n\t\tconst validate = (node, value, getIndex) => {\n\t\t\tif (!value) return;\n\n\t\t\tconst issues = findIrregularWhitespace(value);\n\n\t\t\tif (!issues.length) return;\n\n\t\t\tconst startIndex = getIndex(node);\n\n\t\t\tissues.forEach(({ index, length }) => {\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex: startIndex + index,\n\t\t\t\t\tendIndex: startIndex + index + length,\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tvalidate(atRule, atRule.raws.before, zeroIndex);\n\t\t\tvalidate(atRule, atRule.name, oneIndex);\n\t\t\tvalidate(atRule, atRule.raws.afterName, atRuleAfterNameIndex);\n\t\t\tvalidate(atRule, getAtRuleParams(atRule), atRuleParamIndex);\n\t\t\tvalidate(atRule, atRule.raws.between, atRuleBetweenIndex);\n\t\t\tvalidate(atRule, atRule.raws.after, atRuleAfterIndex);\n\t\t});\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tvalidate(ruleNode, ruleNode.raws.before, zeroIndex);\n\t\t\tvalidate(ruleNode, getRuleSelector(ruleNode), zeroIndex);\n\t\t\tvalidate(ruleNode, ruleNode.raws.between, ruleBetweenIndex);\n\t\t\tvalidate(ruleNode, ruleNode.raws.after, ruleAfterIndex);\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tvalidate(decl, decl.raws.before, zeroIndex);\n\t\t\tvalidate(decl, decl.prop, zeroIndex);\n\t\t\tvalidate(decl, decl.raws.between, declarationBetweenIndex);\n\t\t\tvalidate(decl, getDeclarationValue(decl), declarationValueIndex);\n\t\t});\n\t};\n};\n\nfunction zeroIndex() {\n\treturn 0;\n}\n\nfunction oneIndex() {\n\treturn 1;\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nexport default rule;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}