module.exports = {

"[project]/node_modules/stylelint/lib/formatters/preprocessWarnings.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>preprocessWarnings)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$constants$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/constants.mjs [app-route] (ecmascript)");
;
function preprocessWarnings(result) {
    for (const error of result.parseErrors || []){
        result.warnings.push(parseErrorToWarning(error));
    }
    for (const warning of result.warnings){
        warning.severity = normalizeSeverity(warning);
    }
    result.warnings.sort(byLocationOrder);
    return result;
}
/**
 * @param {ParseError} error
 * @returns {Warning}
 */ function parseErrorToWarning(error) {
    return {
        line: error.line,
        column: error.column,
        rule: error.stylelintType,
        severity: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$constants$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SEVERITY_ERROR"],
        text: `${error.text} (${error.stylelintType})`
    };
}
/**
 * @param {Warning} warning
 * @returns {Severity}
 */ function normalizeSeverity(warning) {
    // NOTE: Plugins may add a warning without severity, for example,
    // by directly using the PostCSS `Result#warn()` API.
    return warning.severity || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$constants$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_SEVERITY"];
}
/**
 * @param {Warning} a
 * @param {Warning} b
 * @returns {number}
 */ function byLocationOrder(a, b) {
    // positionless first
    if (!a.line && b.line) return -1;
    // positionless first
    if (a.line && !b.line) return 1;
    if (a.line < b.line) return -1;
    if (a.line > b.line) return 1;
    if (a.column < b.column) return -1;
    if (a.column > b.column) return 1;
    return 0;
}
}}),
"[project]/node_modules/stylelint/lib/formatters/compactFormatter.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>compactFormatter)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$preprocessWarnings$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stylelint/lib/formatters/preprocessWarnings.mjs [app-route] (ecmascript)");
;
function compactFormatter(results) {
    const lines = results.flatMap((result)=>{
        const { warnings } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stylelint$2f$lib$2f$formatters$2f$preprocessWarnings$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(result);
        return warnings.map((warning)=>`${result.source}: ` + `line ${warning.line}, ` + `col ${warning.column}, ` + `${warning.severity} - ` + `${warning.text}`);
    });
    lines.push('');
    return lines.join('\n');
}
}}),

};

//# sourceMappingURL=node_modules_stylelint_lib_formatters_98d7b7ff._.js.map