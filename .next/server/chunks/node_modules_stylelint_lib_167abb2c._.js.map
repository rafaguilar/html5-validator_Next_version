{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isStandardSyntaxAtRule.mjs"],"sourcesContent":["/**\n * Check whether a at-rule is standard\n *\n * @param {import('postcss').AtRule | import('postcss-less').AtRule} atRule postcss at-rule node\n * @returns {boolean} If `true`, the declaration is standard\n */\nexport default function isStandardSyntaxAtRule(atRule) {\n\t// Ignore `@charset` css rule (is parsed as at-rule)\n\tif (atRule.name.toLowerCase() === 'charset') {\n\t\treturn false;\n\t}\n\n\t// Ignore scss `@content` inside mixins\n\tif (!atRule.nodes && atRule.params === '') {\n\t\treturn false;\n\t}\n\n\t// Ignore Less mixins\n\tif ('mixin' in atRule && atRule.mixin) {\n\t\treturn false;\n\t}\n\n\t// Ignore Less detached ruleset `@detached-ruleset: { background: red; }; .top { @detached-ruleset(); }`\n\tif (\n\t\t('variable' in atRule && atRule.variable) ||\n\t\t(!atRule.nodes && atRule.raws.afterName === '' && atRule.params[0] === '(')\n\t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACc,SAAS,uBAAuB,MAAM;IACpD,oDAAoD;IACpD,IAAI,OAAO,IAAI,CAAC,WAAW,OAAO,WAAW;QAC5C,OAAO;IACR;IAEA,uCAAuC;IACvC,IAAI,CAAC,OAAO,KAAK,IAAI,OAAO,MAAM,KAAK,IAAI;QAC1C,OAAO;IACR;IAEA,qBAAqB;IACrB,IAAI,WAAW,UAAU,OAAO,KAAK,EAAE;QACtC,OAAO;IACR;IAEA,wGAAwG;IACxG,IACC,AAAC,cAAc,UAAU,OAAO,QAAQ,IACvC,CAAC,OAAO,KAAK,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,MAAM,OAAO,MAAM,CAAC,EAAE,KAAK,KACtE;QACD,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasLessInterpolation.mjs"],"sourcesContent":["const HAS_LESS_INTERPOLATION = /@\\{.+?\\}/;\n\n/**\n * Check whether a string has less interpolation\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has less interpolation\n */\nexport default function hasLessInterpolation(string) {\n\treturn HAS_LESS_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,yBAAyB;AAQhB,SAAS,qBAAqB,MAAM;IAClD,OAAO,uBAAuB,IAAI,CAAC;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasPsvInterpolation.mjs"],"sourcesContent":["const HAS_PSV_INTERPOLATION = /\\$\\(.+?\\)/;\n\n/**\n * Check whether a string has postcss-simple-vars interpolation\n *\n * @param {string} string\n * @returns {boolean}\n */\nexport default function hasPsvInterpolation(string) {\n\treturn HAS_PSV_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,wBAAwB;AAQf,SAAS,oBAAoB,MAAM;IACjD,OAAO,sBAAsB,IAAI,CAAC;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasScssInterpolation.mjs"],"sourcesContent":["const HAS_SCSS_INTERPOLATION = /#\\{.+?\\}/s;\n\n/**\n * Check whether a string has scss interpolation\n *\n * @param {string} string\n * @returns {boolean}\n */\nexport default function hasScssInterpolation(string) {\n\treturn HAS_SCSS_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,yBAAyB;AAQhB,SAAS,qBAAqB,MAAM;IAClD,OAAO,uBAAuB,IAAI,CAAC;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasTplInterpolation.mjs"],"sourcesContent":["const HAS_TPL_INTERPOLATION = /\\{.+?\\}/s;\n\n/**\n * Check whether a string has JS template literal interpolation or HTML-like template\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has template literal interpolation\n */\nexport default function hasTplInterpolation(string) {\n\treturn HAS_TPL_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,wBAAwB;AAQf,SAAS,oBAAoB,MAAM;IACjD,OAAO,sBAAsB,IAAI,CAAC;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasInterpolation.mjs"],"sourcesContent":["import hasLessInterpolation from './hasLessInterpolation.mjs';\nimport hasPsvInterpolation from './hasPsvInterpolation.mjs';\nimport hasScssInterpolation from './hasScssInterpolation.mjs';\nimport hasTplInterpolation from './hasTplInterpolation.mjs';\n\n/**\n * Check whether a string has interpolation\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has interpolation\n */\nexport default function hasInterpolation(string) {\n\t// SCSS or Less interpolation\n\tif (\n\t\thasLessInterpolation(string) ||\n\t\thasScssInterpolation(string) ||\n\t\thasTplInterpolation(string) ||\n\t\thasPsvInterpolation(string)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAQe,SAAS,iBAAiB,MAAM;IAC9C,6BAA6B;IAC7B,IACC,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE,WACrB,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE,WACrB,CAAA,GAAA,mKAAA,CAAA,UAAmB,AAAD,EAAE,WACpB,CAAA,GAAA,mKAAA,CAAA,UAAmB,AAAD,EAAE,SACnB;QACD,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isStandardSyntaxSelector.mjs"],"sourcesContent":["import hasInterpolation from './hasInterpolation.mjs';\n\n/**\n * Check whether a selector is standard\n *\n * @param {string} selector\n * @returns {boolean}\n */\nexport default function isStandardSyntaxSelector(selector) {\n\t// SCSS or Less interpolation\n\tif (hasInterpolation(selector)) {\n\t\treturn false;\n\t}\n\n\t// SCSS placeholder selectors\n\tif (selector.startsWith('%')) {\n\t\treturn false;\n\t}\n\n\t// SCSS nested properties\n\tif (selector.endsWith(':')) {\n\t\treturn false;\n\t}\n\n\t// Less :extend()\n\tif (/:extend(?:\\(.*?\\))?/.test(selector)) {\n\t\treturn false;\n\t}\n\n\t// Less mixin with resolved nested selectors (e.g. .foo().bar or .foo(@a, @b)[bar])\n\tif (/\\.[\\w-]+\\(.*\\).+/.test(selector)) {\n\t\treturn false;\n\t}\n\n\t// Less non-outputting mixin definition (e.g. .mixin() {})\n\tif (selector.endsWith(')') && !selector.includes(':')) {\n\t\treturn false;\n\t}\n\n\t// Less Parametric mixins (e.g. .mixin(@variable: x) {})\n\tif (/\\(@.*\\)$/.test(selector)) {\n\t\treturn false;\n\t}\n\n\t// ERB template tags\n\tif (selector.includes('<%') || selector.includes('%>')) {\n\t\treturn false;\n\t}\n\n\t//  SCSS and Less comments\n\tif (selector.includes('//')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"],"names":[],"mappings":";;;AAAA;;AAQe,SAAS,yBAAyB,QAAQ;IACxD,6BAA6B;IAC7B,IAAI,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,WAAW;QAC/B,OAAO;IACR;IAEA,6BAA6B;IAC7B,IAAI,SAAS,UAAU,CAAC,MAAM;QAC7B,OAAO;IACR;IAEA,yBAAyB;IACzB,IAAI,SAAS,QAAQ,CAAC,MAAM;QAC3B,OAAO;IACR;IAEA,iBAAiB;IACjB,IAAI,sBAAsB,IAAI,CAAC,WAAW;QACzC,OAAO;IACR;IAEA,mFAAmF;IACnF,IAAI,mBAAmB,IAAI,CAAC,WAAW;QACtC,OAAO;IACR;IAEA,0DAA0D;IAC1D,IAAI,SAAS,QAAQ,CAAC,QAAQ,CAAC,SAAS,QAAQ,CAAC,MAAM;QACtD,OAAO;IACR;IAEA,wDAAwD;IACxD,IAAI,WAAW,IAAI,CAAC,WAAW;QAC9B,OAAO;IACR;IAEA,oBAAoB;IACpB,IAAI,SAAS,QAAQ,CAAC,SAAS,SAAS,QAAQ,CAAC,OAAO;QACvD,OAAO;IACR;IAEA,0BAA0B;IAC1B,IAAI,SAAS,QAAQ,CAAC,OAAO;QAC5B,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isStandardSyntaxRule.mjs"],"sourcesContent":["import isStandardSyntaxSelector from './isStandardSyntaxSelector.mjs';\n\n/**\n * Check whether a Node is a standard rule\n *\n * @param {import('postcss').Rule | import('postcss-less').Rule} rule\n * @returns {boolean}\n */\nexport default function isStandardSyntaxRule(rule) {\n\tif (rule.type !== 'rule') {\n\t\treturn false;\n\t}\n\n\t// Ignore Less &:extend rule\n\tif ('extend' in rule && rule.extend) {\n\t\treturn false;\n\t}\n\n\tif (!isStandardSyntaxSelector(rule.selector)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"],"names":[],"mappings":";;;AAAA;;AAQe,SAAS,qBAAqB,IAAI;IAChD,IAAI,KAAK,IAAI,KAAK,QAAQ;QACzB,OAAO;IACR;IAEA,4BAA4B;IAC5B,IAAI,YAAY,QAAQ,KAAK,MAAM,EAAE;QACpC,OAAO;IACR;IAEA,IAAI,CAAC,CAAA,GAAA,wKAAA,CAAA,UAAwB,AAAD,EAAE,KAAK,QAAQ,GAAG;QAC7C,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/rules/no-invalid-position-at-import-rule/index.mjs"],"sourcesContent":["import { isRegExp, isString } from '../../utils/validateTypes.mjs';\nimport { isAtRule } from '../../utils/typeGuards.mjs';\nimport isStandardSyntaxAtRule from '../../utils/isStandardSyntaxAtRule.mjs';\nimport isStandardSyntaxRule from '../../utils/isStandardSyntaxRule.mjs';\nimport optionsMatches from '../../utils/optionsMatches.mjs';\nimport report from '../../utils/report.mjs';\nimport ruleMessages from '../../utils/ruleMessages.mjs';\nimport validateOptions from '../../utils/validateOptions.mjs';\n\nconst ruleName = 'no-invalid-position-at-import-rule';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected invalid position @import rule',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-invalid-position-at-import-rule',\n};\n\n/** @type {import('stylelint').CoreRules[ruleName]} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreAtRules: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet invalidPosition = false;\n\n\t\troot.walk((node) => {\n\t\t\tconst nodeName = ('name' in node && node.name && node.name.toLowerCase()) || '';\n\n\t\t\tif (\n\t\t\t\t(isAtRule(node) &&\n\t\t\t\t\tnodeName !== 'charset' &&\n\t\t\t\t\tnodeName !== 'import' &&\n\t\t\t\t\tnodeName !== 'layer' &&\n\t\t\t\t\t!optionsMatches(secondaryOptions, 'ignoreAtRules', node.name) &&\n\t\t\t\t\tisStandardSyntaxAtRule(node)) ||\n\t\t\t\t(node.type === 'rule' && isStandardSyntaxRule(node))\n\t\t\t) {\n\t\t\t\tinvalidPosition = true;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isAtRule(node) && nodeName === 'import' && invalidPosition) {\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tword: node.toString(),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nexport default rule;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEA,MAAM,WAAW;AAEjB,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,UAAY,AAAD,EAAE,UAAU;IACvC,UAAU;AACX;AAEA,MAAM,OAAO;IACZ,KAAK;AACN;AAEA,oDAAoD,GACpD,MAAM,OAAO,CAAC,SAAS;IACtB,OAAO,CAAC,MAAM;QACb,MAAM,eAAe,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAClC,QACA,UACA;YAAE,QAAQ;QAAQ,GAClB;YACC,QAAQ;YACR,UAAU;gBACT,eAAe;oBAAC,6JAAA,CAAA,WAAQ;oBAAE,6JAAA,CAAA,WAAQ;iBAAC;YACpC;YACA,UAAU;QACX;QAGD,IAAI,CAAC,cAAc;YAClB;QACD;QAEA,IAAI,kBAAkB;QAEtB,KAAK,IAAI,CAAC,CAAC;YACV,MAAM,WAAW,AAAC,UAAU,QAAQ,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,MAAO;YAE7E,IACC,AAAC,CAAA,GAAA,0JAAA,CAAA,WAAQ,AAAD,EAAE,SACT,aAAa,aACb,aAAa,YACb,aAAa,WACb,CAAC,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE,kBAAkB,iBAAiB,KAAK,IAAI,KAC5D,CAAA,GAAA,sKAAA,CAAA,UAAsB,AAAD,EAAE,SACvB,KAAK,IAAI,KAAK,UAAU,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE,OAC7C;gBACD,kBAAkB;gBAElB;YACD;YAEA,IAAI,CAAA,GAAA,0JAAA,CAAA,WAAQ,AAAD,EAAE,SAAS,aAAa,YAAY,iBAAiB;gBAC/D,CAAA,GAAA,sJAAA,CAAA,UAAM,AAAD,EAAE;oBACN,SAAS,SAAS,QAAQ;oBAC1B;oBACA;oBACA;oBACA,MAAM,KAAK,QAAQ;gBACpB;YACD;QACD;IACD;AACD;AAEA,KAAK,QAAQ,GAAG;AAChB,KAAK,QAAQ,GAAG;AAChB,KAAK,IAAI,GAAG;uCACG","ignoreList":[0],"debugId":null}}]
}