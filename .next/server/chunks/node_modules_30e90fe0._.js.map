{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/uniteSets.mjs"],"sourcesContent":["/**\n * Unite two or more sets\n *\n * @param {Iterable<string>[]} args\n * @see {@link https://github.com/microsoft/TypeScript/issues/57228|GitHub}\n */\nexport default function uniteSets(...args) {\n\treturn new Set([...args].reduce((result, set) => [...result, ...set], []));\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACc,SAAS,UAAU,GAAG,IAAI;IACxC,OAAO,IAAI,IAAI;WAAI;KAAK,CAAC,MAAM,CAAC,CAAC,QAAQ,MAAQ;eAAI;eAAW;SAAI,EAAE,EAAE;AACzE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/reference/atKeywords.mjs"],"sourcesContent":["import uniteSets from '../utils/uniteSets.mjs';\n\n/** @type {ReadonlySet<string>} */\nexport const deprecatedAtKeywords = new Set(['apply', 'document', 'nest', 'viewport']);\n\n/**\n * @see https://www.w3.org/TR/css-nesting-1/#conditionals\n * @type {ReadonlySet<string>}\n */\nexport const nestingSupportedAtKeywords = new Set([\n\t'container',\n\t'layer',\n\t'media',\n\t'scope',\n\t'starting-style',\n\t'supports',\n]);\n\n/**\n * @see https://www.w3.org/TR/css-page-3/#syntax-page-selector\n * @type {ReadonlySet<string>}\n */\nexport const pageMarginAtKeywords = new Set([\n\t'top-left-corner',\n\t'top-left',\n\t'top-center',\n\t'top-right',\n\t'top-right-corner',\n\t'bottom-left-corner',\n\t'bottom-left',\n\t'bottom-center',\n\t'bottom-right',\n\t'bottom-right-corner',\n\t'left-top',\n\t'left-middle',\n\t'left-bottom',\n\t'right-top',\n\t'right-middle',\n\t'right-bottom',\n]);\n\n/**\n * @see https://www.w3.org/TR/css-fonts-4/#font-feature-values-font-feature-value-type\n * @type {ReadonlySet<string>}\n */\nconst fontFeatureValueTypes = new Set([\n\t'annotation',\n\t'character-variant',\n\t'historical-forms',\n\t'ornaments',\n\t'styleset',\n\t'stylistic',\n\t'swash',\n]);\n\n/**\n * @see https://developer.mozilla.org/en/docs/Web/CSS/At-rule\n * @type {ReadonlySet<string>}\n */\nexport const atKeywords = uniteSets(\n\tdeprecatedAtKeywords,\n\tnestingSupportedAtKeywords,\n\tpageMarginAtKeywords,\n\tfontFeatureValueTypes,\n\t[\n\t\t'counter-style',\n\t\t'custom-media',\n\t\t'custom-selector',\n\t\t'font-face',\n\t\t'font-feature-values',\n\t\t'font-palette-values',\n\t\t'import',\n\t\t'keyframes',\n\t\t'namespace',\n\t\t'page',\n\t\t'position-try',\n\t\t'property',\n\t\t'scroll-timeline',\n\t\t'view-transition',\n\t],\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AAGO,MAAM,uBAAuB,IAAI,IAAI;IAAC;IAAS;IAAY;IAAQ;CAAW;AAM9E,MAAM,6BAA6B,IAAI,IAAI;IACjD;IACA;IACA;IACA;IACA;IACA;CACA;AAMM,MAAM,uBAAuB,IAAI,IAAI;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAED;;;CAGC,GACD,MAAM,wBAAwB,IAAI,IAAI;IACrC;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAMM,MAAM,aAAa,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EACjC,sBACA,4BACA,sBACA,uBACA;IACC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/regexes.mjs"],"sourcesContent":["import { nestingSupportedAtKeywords } from '../reference/atKeywords.mjs';\n\nexport const atRuleRegexes = {\n\tmediaName: /^media$/i,\n\tkeyframesName: /^(-(o|moz|ms|webkit)-)?keyframes$/i,\n\tpropertyName: /^property$/i,\n\timportName: /^import$/i,\n\tunsupportedNestingNames: new RegExp(\n\t\t`^((?!${[...nestingSupportedAtKeywords.values()].join('|')}).)*$`,\n\t\t'i',\n\t),\n\tlayerName: /^layer$/i,\n\tcontainerName: /^container$/i,\n};\n\nexport const descriptorRegexes = {\n\tsyntaxName: /^syntax$/i,\n};\n\nexport const functionRegexes = {\n\tlayer: /layer\\((.*?)\\)/i,\n};\n\nexport const propertyRegexes = {\n\tcontainerNameAndShorthandName: /^container(-name)?$/i,\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,gBAAgB;IAC5B,WAAW;IACX,eAAe;IACf,cAAc;IACd,YAAY;IACZ,yBAAyB,IAAI,OAC5B,CAAC,KAAK,EAAE;WAAI,8JAAA,CAAA,6BAA0B,CAAC,MAAM;KAAG,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,EACjE;IAED,WAAW;IACX,eAAe;AAChB;AAEO,MAAM,oBAAoB;IAChC,YAAY;AACb;AAEO,MAAM,kBAAkB;IAC9B,OAAO;AACR;AAEO,MAAM,kBAAkB;IAC9B,+BAA+B;AAChC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getAtRuleParams.mjs"],"sourcesContent":["/**\n * @param {import('postcss').AtRule} atRule\n * @returns {string}\n */\nexport default function getAtRuleParams(atRule) {\n\treturn atRule.raws.params?.raw ?? atRule.params;\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACc,SAAS,gBAAgB,MAAM;IAC7C,OAAO,OAAO,IAAI,CAAC,MAAM,EAAE,OAAO,OAAO,MAAM;AAChD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getRuleSelector.mjs"],"sourcesContent":["/**\n * @param {import('postcss').Rule} ruleNode\n * @returns {string}\n */\nexport default function getRuleSelector(ruleNode) {\n\tconst raws = ruleNode.raws;\n\n\treturn (raws.selector && raws.selector.raw) || ruleNode.selector;\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACc,SAAS,gBAAgB,QAAQ;IAC/C,MAAM,OAAO,SAAS,IAAI;IAE1B,OAAO,AAAC,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,GAAG,IAAK,SAAS,QAAQ;AACjE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/nodeFieldIndices.mjs"],"sourcesContent":["import getAtRuleParams from './getAtRuleParams.mjs';\nimport getRuleSelector from './getRuleSelector.mjs';\n\nimport { isObject, isString } from './validateTypes.mjs';\n\n/** @import {AtRule, Declaration, Rule} from 'postcss' */\n\n/**\n * @param {AtRule} atRule\n * @returns {number}\n */\nexport function atRuleParamIndex(atRule) {\n\tconst index = atRuleAfterNameIndex(atRule);\n\n\treturn index + (atRule.raws.afterName?.length ?? 0);\n}\n\n/**\n * @param {AtRule} atRule\n * @returns {number}\n */\nexport function atRuleAfterIndex(atRule) {\n\t// subtract 1 for `}`\n\n\tconst endOffset = atRule.source?.end?.offset;\n\n\tif (!endOffset) return atRule.toString().length - 1;\n\n\tconst afterLength = atRule.raws?.after?.length;\n\n\tif (!afterLength) return endOffset - 1;\n\n\treturn endOffset - (afterLength + 1);\n}\n\n/**\n * @param {AtRule} atRule\n * @returns {number}\n */\nexport function atRuleAfterNameIndex(atRule) {\n\t// Initial 1 is for the `@`\n\treturn 1 + atRule.name.length;\n}\n\n/**\n * @param {AtRule} atRule\n * @returns {number}\n */\nexport function atRuleBetweenIndex(atRule) {\n\treturn atRuleParamIndex(atRule) + getAtRuleParams(atRule).length;\n}\n\n/**\n * @param {Declaration} decl\n * @returns {number}\n */\nexport function declarationBetweenIndex(decl) {\n\tconst { prop } = decl.raws;\n\tconst propIsObject = isObject(prop);\n\n\treturn countChars([\n\t\tpropIsObject && 'prefix' in prop && prop.prefix,\n\t\t(propIsObject && 'raw' in prop && prop.raw) || decl.prop,\n\t\tpropIsObject && 'suffix' in prop && prop.suffix,\n\t]);\n}\n\n/**\n * Get the index of a declaration's value\n *\n * @param {Declaration} decl\n * @returns {number}\n */\nexport function declarationValueIndex(decl) {\n\tconst { between, value } = decl.raws;\n\n\treturn (\n\t\tdeclarationBetweenIndex(decl) +\n\t\tcountChars([between || ':', value && 'prefix' in value && value.prefix])\n\t);\n}\n\n/**\n * @param {Rule} rule\n * @returns {number}\n */\nexport function ruleBetweenIndex(rule) {\n\treturn getRuleSelector(rule).length;\n}\n\n/**\n * @param {Rule} rule\n * @returns {number}\n */\nexport function ruleAfterIndex(rule) {\n\t// subtract 1 for `}`\n\n\tconst endOffset = rule.source?.end?.offset;\n\n\tif (!endOffset) return rule.toString().length - 1;\n\n\tconst afterLength = rule.raws?.after?.length;\n\n\tif (!afterLength) return endOffset - 1;\n\n\treturn endOffset - (afterLength + 1);\n}\n\n/**\n * @param {unknown[]} values\n * @returns {number}\n */\nfunction countChars(values) {\n\treturn values.reduce((/** @type {number} */ count, value) => {\n\t\tif (isString(value)) return count + value.length;\n\n\t\treturn count;\n\t}, 0);\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AAEA;;;;AAQO,SAAS,iBAAiB,MAAM;IACtC,MAAM,QAAQ,qBAAqB;IAEnC,OAAO,QAAQ,CAAC,OAAO,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC;AACnD;AAMO,SAAS,iBAAiB,MAAM;IACtC,qBAAqB;IAErB,MAAM,YAAY,OAAO,MAAM,EAAE,KAAK;IAEtC,IAAI,CAAC,WAAW,OAAO,OAAO,QAAQ,GAAG,MAAM,GAAG;IAElD,MAAM,cAAc,OAAO,IAAI,EAAE,OAAO;IAExC,IAAI,CAAC,aAAa,OAAO,YAAY;IAErC,OAAO,YAAY,CAAC,cAAc,CAAC;AACpC;AAMO,SAAS,qBAAqB,MAAM;IAC1C,2BAA2B;IAC3B,OAAO,IAAI,OAAO,IAAI,CAAC,MAAM;AAC9B;AAMO,SAAS,mBAAmB,MAAM;IACxC,OAAO,iBAAiB,UAAU,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAAE,QAAQ,MAAM;AACjE;AAMO,SAAS,wBAAwB,IAAI;IAC3C,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,IAAI;IAC1B,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE9B,OAAO,WAAW;QACjB,gBAAgB,YAAY,QAAQ,KAAK,MAAM;QAC9C,gBAAgB,SAAS,QAAQ,KAAK,GAAG,IAAK,KAAK,IAAI;QACxD,gBAAgB,YAAY,QAAQ,KAAK,MAAM;KAC/C;AACF;AAQO,SAAS,sBAAsB,IAAI;IACzC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,KAAK,IAAI;IAEpC,OACC,wBAAwB,QACxB,WAAW;QAAC,WAAW;QAAK,SAAS,YAAY,SAAS,MAAM,MAAM;KAAC;AAEzE;AAMO,SAAS,iBAAiB,IAAI;IACpC,OAAO,CAAA,GAAA,+JAAA,CAAA,UAAe,AAAD,EAAE,MAAM,MAAM;AACpC;AAMO,SAAS,eAAe,IAAI;IAClC,qBAAqB;IAErB,MAAM,YAAY,KAAK,MAAM,EAAE,KAAK;IAEpC,IAAI,CAAC,WAAW,OAAO,KAAK,QAAQ,GAAG,MAAM,GAAG;IAEhD,MAAM,cAAc,KAAK,IAAI,EAAE,OAAO;IAEtC,IAAI,CAAC,aAAa,OAAO,YAAY;IAErC,OAAO,YAAY,CAAC,cAAc,CAAC;AACpC;AAEA;;;CAGC,GACD,SAAS,WAAW,MAAM;IACzB,OAAO,OAAO,MAAM,CAAC,CAAC,mBAAmB,GAAG,OAAO;QAClD,IAAI,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,OAAO,QAAQ,MAAM,MAAM;QAEhD,OAAO;IACR,GAAG;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/getDeclarationValue.mjs"],"sourcesContent":["/**\n * @param {import('postcss').Declaration} decl\n * @returns {string}\n */\nexport default function getDeclarationValue(decl) {\n\tconst raws = decl.raws;\n\n\treturn (raws.value && raws.value.raw) || decl.value;\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACc,SAAS,oBAAoB,IAAI;IAC/C,MAAM,OAAO,KAAK,IAAI;IAEtB,OAAO,AAAC,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,IAAK,KAAK,KAAK;AACpD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isCustomProperty.mjs"],"sourcesContent":["/**\n * Check whether a property is a custom one\n * @param {string} property\n * @returns {boolean}\n */\nexport default function isCustomProperty(property) {\n\treturn property.startsWith('--');\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACc,SAAS,iBAAiB,QAAQ;IAChD,OAAO,SAAS,UAAU,CAAC;AAC5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/eachNodeUpToRoot.mjs"],"sourcesContent":["import { isRoot } from './typeGuards.mjs';\n\n/** @import { Node } from 'postcss' */\n\nexport const STOP = 'STOP';\n\n/**\n * Iterates over each node up to the root node.\n *\n * @param {Node} node\n * @param {(node: Node) => void | STOP} callback\n * @returns {void}\n */\nexport default function eachNodeUpToRoot(node, callback) {\n\tlet currentNode = node.parent;\n\n\twhile (currentNode && !isRoot(currentNode)) {\n\t\tif (callback(currentNode) === STOP) break;\n\n\t\tcurrentNode = currentNode.parent;\n\t}\n}\n"],"names":[],"mappings":";;;;AAAA;;AAIO,MAAM,OAAO;AASL,SAAS,iBAAiB,IAAI,EAAE,QAAQ;IACtD,IAAI,cAAc,KAAK,MAAM;IAE7B,MAAO,eAAe,CAAC,CAAA,GAAA,0JAAA,CAAA,SAAM,AAAD,EAAE,aAAc;QAC3C,IAAI,SAAS,iBAAiB,MAAM;QAEpC,cAAc,YAAY,MAAM;IACjC;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/findNodeUpToRoot.mjs"],"sourcesContent":["import eachNodeUpToRoot, { STOP } from './eachNodeUpToRoot.mjs';\n\n/** @import { Node } from 'postcss' */\n\n/**\n * Finds the node satisfying the specified predicate up to the root node.\n *\n * @param {Node} node\n * @param {(node: Node) => boolean} predicate\n * @returns {Node | undefined}\n */\nexport default function findNodeUpToRoot(node, predicate) {\n\t/** @type {Node | undefined} */\n\tlet found;\n\n\teachNodeUpToRoot(node, (current) => {\n\t\tif (predicate(current)) {\n\t\t\tfound = current;\n\n\t\t\treturn STOP;\n\t\t}\n\t});\n\n\treturn found;\n}\n"],"names":[],"mappings":";;;AAAA;;AAWe,SAAS,iBAAiB,IAAI,EAAE,SAAS;IACvD,6BAA6B,GAC7B,IAAI;IAEJ,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,MAAM,CAAC;QACvB,IAAI,UAAU,UAAU;YACvB,QAAQ;YAER,OAAO,gKAAA,CAAA,OAAI;QACZ;IACD;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isDescriptorDeclaration.mjs"],"sourcesContent":["import findNodeUpToRoot from './findNodeUpToRoot.mjs';\nimport { isAtRule } from './typeGuards.mjs';\nimport { nestingSupportedAtKeywords } from '../reference/atKeywords.mjs';\n\n/** @import { Declaration, Node } from 'postcss' */\n\n/**\n * Check whether a declaration is a descriptor one\n *\n * @param {Declaration} decl\n * @returns {boolean}\n */\nexport default function isDescriptorDeclaration(decl) {\n\treturn Boolean(findNodeUpToRoot(decl, isAtRuleSupportingDescriptors));\n}\n\n/**\n * @param {Node} node\n */\nfunction isAtRuleSupportingDescriptors(node) {\n\treturn isAtRule(node) && !nestingSupportedAtKeywords.has(node.name.toLowerCase());\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAUe,SAAS,wBAAwB,IAAI;IACnD,OAAO,QAAQ,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,MAAM;AACvC;AAEA;;CAEC,GACD,SAAS,8BAA8B,IAAI;IAC1C,OAAO,CAAA,GAAA,0JAAA,CAAA,WAAQ,AAAD,EAAE,SAAS,CAAC,8JAAA,CAAA,6BAA0B,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,WAAW;AAC/E","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isScssVariable.mjs"],"sourcesContent":["/**\n * Check whether a property is SCSS variable\n *\n * @param {string} property\n * @returns {boolean}\n */\nexport default function isScssVariable(property) {\n\t// SCSS var (e.g. $var: x), list (e.g. $list: (x)) or map (e.g. $map: (key:value))\n\tif (property.startsWith('$')) {\n\t\treturn true;\n\t}\n\n\t// SCSS var within a namespace (e.g. namespace.$var: x)\n\tif (property.includes('.$')) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACc,SAAS,eAAe,QAAQ;IAC9C,kFAAkF;IAClF,IAAI,SAAS,UAAU,CAAC,MAAM;QAC7B,OAAO;IACR;IAEA,uDAAuD;IACvD,IAAI,SAAS,QAAQ,CAAC,OAAO;QAC5B,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isStandardSyntaxDeclaration.mjs"],"sourcesContent":["import { isRule } from './typeGuards.mjs';\nimport isScssVariable from './isScssVariable.mjs';\n\n/**\n * Check whether a declaration is standard\n *\n * @param {import('postcss').Declaration | import('postcss-less').Declaration} decl\n * @returns {boolean}\n */\nexport default function isStandardSyntaxDeclaration(decl) {\n\tconst prop = decl.prop;\n\tconst parent = decl.parent;\n\n\t// SCSS var; covers map and list declarations\n\tif (isScssVariable(prop)) {\n\t\treturn false;\n\t}\n\n\t// Less var (e.g. @var: x), but exclude variable interpolation (e.g. @{var})\n\tif (prop[0] === '@' && prop[1] !== '{') {\n\t\treturn false;\n\t}\n\n\t// Less map declaration\n\tif (parent && parent.type === 'atrule' && parent.raws.afterName === ':') {\n\t\treturn false;\n\t}\n\n\t// Less map (e.g. #my-map() { myprop: red; })\n\tif (\n\t\tparent &&\n\t\tisRule(parent) &&\n\t\tparent.selector &&\n\t\tparent.selector.startsWith('#') &&\n\t\tparent.selector.endsWith('()')\n\t) {\n\t\treturn false;\n\t}\n\n\t// Sass nested properties (e.g. border: { style: solid; color: red; })\n\tif (\n\t\tparent &&\n\t\tisRule(parent) &&\n\t\tparent.selector &&\n\t\tparent.selector[parent.selector.length - 1] === ':' &&\n\t\tparent.selector.substring(0, 2) !== '--'\n\t) {\n\t\treturn false;\n\t}\n\n\t// Less &:extend\n\tif ('extend' in decl && decl.extend) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAQe,SAAS,4BAA4B,IAAI;IACvD,MAAM,OAAO,KAAK,IAAI;IACtB,MAAM,SAAS,KAAK,MAAM;IAE1B,6CAA6C;IAC7C,IAAI,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE,OAAO;QACzB,OAAO;IACR;IAEA,4EAA4E;IAC5E,IAAI,IAAI,CAAC,EAAE,KAAK,OAAO,IAAI,CAAC,EAAE,KAAK,KAAK;QACvC,OAAO;IACR;IAEA,uBAAuB;IACvB,IAAI,UAAU,OAAO,IAAI,KAAK,YAAY,OAAO,IAAI,CAAC,SAAS,KAAK,KAAK;QACxE,OAAO;IACR;IAEA,6CAA6C;IAC7C,IACC,UACA,CAAA,GAAA,0JAAA,CAAA,SAAM,AAAD,EAAE,WACP,OAAO,QAAQ,IACf,OAAO,QAAQ,CAAC,UAAU,CAAC,QAC3B,OAAO,QAAQ,CAAC,QAAQ,CAAC,OACxB;QACD,OAAO;IACR;IAEA,sEAAsE;IACtE,IACC,UACA,CAAA,GAAA,0JAAA,CAAA,SAAM,AAAD,EAAE,WACP,OAAO,QAAQ,IACf,OAAO,QAAQ,CAAC,OAAO,QAAQ,CAAC,MAAM,GAAG,EAAE,KAAK,OAChD,OAAO,QAAQ,CAAC,SAAS,CAAC,GAAG,OAAO,MACnC;QACD,OAAO;IACR;IAEA,gBAAgB;IAChB,IAAI,YAAY,QAAQ,KAAK,MAAM,EAAE;QACpC,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasLessInterpolation.mjs"],"sourcesContent":["const HAS_LESS_INTERPOLATION = /@\\{.+?\\}/;\n\n/**\n * Check whether a string has less interpolation\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has less interpolation\n */\nexport default function hasLessInterpolation(string) {\n\treturn HAS_LESS_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,yBAAyB;AAQhB,SAAS,qBAAqB,MAAM;IAClD,OAAO,uBAAuB,IAAI,CAAC;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasPsvInterpolation.mjs"],"sourcesContent":["const HAS_PSV_INTERPOLATION = /\\$\\(.+?\\)/;\n\n/**\n * Check whether a string has postcss-simple-vars interpolation\n *\n * @param {string} string\n * @returns {boolean}\n */\nexport default function hasPsvInterpolation(string) {\n\treturn HAS_PSV_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,wBAAwB;AAQf,SAAS,oBAAoB,MAAM;IACjD,OAAO,sBAAsB,IAAI,CAAC;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasScssInterpolation.mjs"],"sourcesContent":["const HAS_SCSS_INTERPOLATION = /#\\{.+?\\}/s;\n\n/**\n * Check whether a string has scss interpolation\n *\n * @param {string} string\n * @returns {boolean}\n */\nexport default function hasScssInterpolation(string) {\n\treturn HAS_SCSS_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,yBAAyB;AAQhB,SAAS,qBAAqB,MAAM;IAClD,OAAO,uBAAuB,IAAI,CAAC;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasTplInterpolation.mjs"],"sourcesContent":["const HAS_TPL_INTERPOLATION = /\\{.+?\\}/s;\n\n/**\n * Check whether a string has JS template literal interpolation or HTML-like template\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has template literal interpolation\n */\nexport default function hasTplInterpolation(string) {\n\treturn HAS_TPL_INTERPOLATION.test(string);\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,wBAAwB;AAQf,SAAS,oBAAoB,MAAM;IACjD,OAAO,sBAAsB,IAAI,CAAC;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/hasInterpolation.mjs"],"sourcesContent":["import hasLessInterpolation from './hasLessInterpolation.mjs';\nimport hasPsvInterpolation from './hasPsvInterpolation.mjs';\nimport hasScssInterpolation from './hasScssInterpolation.mjs';\nimport hasTplInterpolation from './hasTplInterpolation.mjs';\n\n/**\n * Check whether a string has interpolation\n *\n * @param {string} string\n * @returns {boolean} If `true`, a string has interpolation\n */\nexport default function hasInterpolation(string) {\n\t// SCSS or Less interpolation\n\tif (\n\t\thasLessInterpolation(string) ||\n\t\thasScssInterpolation(string) ||\n\t\thasTplInterpolation(string) ||\n\t\thasPsvInterpolation(string)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAQe,SAAS,iBAAiB,MAAM;IAC9C,6BAA6B;IAC7B,IACC,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE,WACrB,CAAA,GAAA,oKAAA,CAAA,UAAoB,AAAD,EAAE,WACrB,CAAA,GAAA,mKAAA,CAAA,UAAmB,AAAD,EAAE,WACpB,CAAA,GAAA,mKAAA,CAAA,UAAmB,AAAD,EAAE,SACnB;QACD,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isStandardSyntaxProperty.mjs"],"sourcesContent":["import hasInterpolation from './hasInterpolation.mjs';\nimport isScssVariable from './isScssVariable.mjs';\n\n/**\n * Check whether a property is standard\n *\n * @param {string} property\n * @returns {boolean}\n */\nexport default function isStandardSyntaxProperty(property) {\n\t// SCSS var\n\tif (isScssVariable(property)) {\n\t\treturn false;\n\t}\n\n\t// Less var (e.g. @var: x)\n\tif (property.startsWith('@')) {\n\t\treturn false;\n\t}\n\n\t// Less append property value with space (e.g. transform+_: scale(2))\n\tif (property.endsWith('+') || property.endsWith('+_')) {\n\t\treturn false;\n\t}\n\n\t// SCSS or Less interpolation\n\tif (hasInterpolation(property)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAQe,SAAS,yBAAyB,QAAQ;IACxD,WAAW;IACX,IAAI,CAAA,GAAA,8JAAA,CAAA,UAAc,AAAD,EAAE,WAAW;QAC7B,OAAO;IACR;IAEA,0BAA0B;IAC1B,IAAI,SAAS,UAAU,CAAC,MAAM;QAC7B,OAAO;IACR;IAEA,qEAAqE;IACrE,IAAI,SAAS,QAAQ,CAAC,QAAQ,SAAS,QAAQ,CAAC,OAAO;QACtD,OAAO;IACR;IAEA,6BAA6B;IAC7B,IAAI,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,WAAW;QAC/B,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/isStandardSyntaxValue.mjs"],"sourcesContent":["import hasInterpolation from './hasInterpolation.mjs';\n\n/**\n * Check whether a value is standard\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport default function isStandardSyntaxValue(value) {\n\tlet normalizedValue = value;\n\n\t// Ignore operators before variables (example -$variable)\n\tif (/^[-+*/]/.test(value.charAt(0))) {\n\t\tnormalizedValue = normalizedValue.slice(1);\n\t}\n\n\t// SCSS variable (example $variable)\n\t// styled component interpolation (example ${foo => foo.bar})\n\tif (normalizedValue.startsWith('$')) {\n\t\treturn false;\n\t}\n\n\t// SCSS namespace (example namespace.$variable)\n\tif (/^.+\\.\\$/.test(value)) {\n\t\treturn false;\n\t}\n\n\t// SCSS namespace (example namespace.function-name())\n\tif (/^.+\\.[-\\w]+\\(/.test(value)) {\n\t\treturn false;\n\t}\n\n\t// Less variable\n\tif (normalizedValue.startsWith('@')) {\n\t\treturn false;\n\t}\n\n\t// SCSS or Less interpolation\n\tif (hasInterpolation(normalizedValue)) {\n\t\treturn false;\n\t}\n\n\t// WebExtension replacement keyword used by Chrome/Firefox\n\t// more information: https://developer.chrome.com/extensions/i18n\n\t// and https://github.com/stylelint/stylelint/issues/4707\n\tif (/__MSG_\\S+__/.test(value)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"],"names":[],"mappings":";;;AAAA;;AAQe,SAAS,sBAAsB,KAAK;IAClD,IAAI,kBAAkB;IAEtB,yDAAyD;IACzD,IAAI,UAAU,IAAI,CAAC,MAAM,MAAM,CAAC,KAAK;QACpC,kBAAkB,gBAAgB,KAAK,CAAC;IACzC;IAEA,oCAAoC;IACpC,6DAA6D;IAC7D,IAAI,gBAAgB,UAAU,CAAC,MAAM;QACpC,OAAO;IACR;IAEA,+CAA+C;IAC/C,IAAI,UAAU,IAAI,CAAC,QAAQ;QAC1B,OAAO;IACR;IAEA,qDAAqD;IACrD,IAAI,gBAAgB,IAAI,CAAC,QAAQ;QAChC,OAAO;IACR;IAEA,gBAAgB;IAChB,IAAI,gBAAgB,UAAU,CAAC,MAAM;QACpC,OAAO;IACR;IAEA,6BAA6B;IAC7B,IAAI,CAAA,GAAA,gKAAA,CAAA,UAAgB,AAAD,EAAE,kBAAkB;QACtC,OAAO;IACR;IAEA,0DAA0D;IAC1D,iEAAiE;IACjE,yDAAyD;IACzD,IAAI,cAAc,IAAI,CAAC,QAAQ;QAC9B,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/validateObjectWithArrayProps.mjs"],"sourcesContent":["import { isPlainObject } from './validateTypes.mjs';\n\n/**\n * Check whether the variable is an object and all its properties are one or more values\n * that satisfy the specified validator(s):\n *\n * @example\n * ignoreProperties = {\n *   value1: [\"item11\", \"item12\", \"item13\"],\n *   value2: \"item2\",\n * };\n * validateObjectWithArrayProps(isString)(ignoreProperties);\n * //=> true\n *\n * @typedef {(value: unknown) => boolean} Validator\n * @param {...Validator} validators\n * @returns {Validator}\n */\nexport default function validateObjectWithArrayProps(...validators) {\n\treturn (value) => {\n\t\tif (!isPlainObject(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Object.values(value)\n\t\t\t.flat()\n\t\t\t.every((item) => validators.some((v) => v(item)));\n\t};\n}\n"],"names":[],"mappings":";;;AAAA;;AAkBe,SAAS,6BAA6B,GAAG,UAAU;IACjE,OAAO,CAAC;QACP,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ;YAC1B,OAAO;QACR;QAEA,OAAO,OAAO,MAAM,CAAC,OACnB,IAAI,GACJ,KAAK,CAAC,CAAC,OAAS,WAAW,IAAI,CAAC,CAAC,IAAM,EAAE;IAC5C;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/utils/validateObjectWithProps.mjs"],"sourcesContent":["import { isPlainObject } from './validateTypes.mjs';\n\n/**\n * Check whether the variable is an object and all its properties agree with the provided validator.\n *\n * @example\n * config = {\n *   value1: 1,\n *   value2: 2,\n *   value3: 3,\n * };\n * validateObjectWithProps(isNumber)(config);\n * //=> true\n *\n * @param {(value: unknown) => boolean} validator\n * @returns {(value: unknown) => boolean}\n */\nexport default function validateObjectWithProps(validator) {\n\treturn (value) => {\n\t\tif (!isPlainObject(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Object.values(value).every((item) => {\n\t\t\treturn validator(item);\n\t\t});\n\t};\n}\n"],"names":[],"mappings":";;;AAAA;;AAiBe,SAAS,wBAAwB,SAAS;IACxD,OAAO,CAAC;QACP,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ;YAC1B,OAAO;QACR;QAEA,OAAO,OAAO,MAAM,CAAC,OAAO,KAAK,CAAC,CAAC;YAClC,OAAO,UAAU;QAClB;IACD;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/BACK-UP%20II/Desktop/PGD/PGD%20-%20Labs/html5-validator_Next_version/node_modules/stylelint/lib/rules/declaration-property-value-no-unknown/index.mjs"],"sourcesContent":["import { find, fork, parse, string } from 'css-tree';\n\nimport { isRegExp, isString } from '../../utils/validateTypes.mjs';\nimport { atRuleRegexes } from '../../utils/regexes.mjs';\nimport { declarationValueIndex } from '../../utils/nodeFieldIndices.mjs';\nimport { isDeclaration } from '../../utils/typeGuards.mjs';\n\nimport getDeclarationValue from '../../utils/getDeclarationValue.mjs';\nimport isCustomProperty from '../../utils/isCustomProperty.mjs';\nimport isDescriptorDeclaration from '../../utils/isDescriptorDeclaration.mjs';\nimport isStandardSyntaxDeclaration from '../../utils/isStandardSyntaxDeclaration.mjs';\nimport isStandardSyntaxProperty from '../../utils/isStandardSyntaxProperty.mjs';\nimport isStandardSyntaxValue from '../../utils/isStandardSyntaxValue.mjs';\nimport matchesStringOrRegExp from '../../utils/matchesStringOrRegExp.mjs';\nimport report from '../../utils/report.mjs';\nimport ruleMessages from '../../utils/ruleMessages.mjs';\nimport validateObjectWithArrayProps from '../../utils/validateObjectWithArrayProps.mjs';\nimport validateObjectWithProps from '../../utils/validateObjectWithProps.mjs';\nimport validateOptions from '../../utils/validateOptions.mjs';\n\nconst ruleName = 'declaration-property-value-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property, value) => `Unexpected unknown value \"${value}\" for property \"${property}\"`,\n\trejectedParseError: (property, value) =>\n\t\t`Cannot parse property value \"${value}\" for property \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-property-value-no-unknown',\n};\n\nconst SYNTAX_DESCRIPTOR = /^syntax$/i;\n\n/** @typedef {import('stylelint').CoreRules[ruleName]} Rule */\n/** @typedef {Parameters<Rule>[1]} SecondaryOptions */\n\n/** @type {Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreProperties: [validateObjectWithArrayProps(isString, isRegExp)],\n\t\t\t\t\tpropertiesSyntax: [validateObjectWithProps(isString)],\n\t\t\t\t\ttypesSyntax: [validateObjectWithProps(isString)],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreProperties = Array.from(Object.entries(secondaryOptions?.ignoreProperties ?? {}));\n\n\t\t/** @type {(name: string, propValue: string) => boolean} */\n\t\tconst isPropIgnored = (name, value) => {\n\t\t\tconst [, valuePattern] =\n\t\t\t\tignoreProperties.find(([namePattern]) => matchesStringOrRegExp(name, namePattern)) || [];\n\n\t\t\treturn Boolean(valuePattern && matchesStringOrRegExp(value, valuePattern));\n\t\t};\n\n\t\t/** @type {SecondaryOptions['propertiesSyntax']} */\n\t\tconst propertiesSyntax = {\n\t\t\t'text-box-edge':\n\t\t\t\t'auto | [ text | cap | ex | ideographic | ideographic-ink ] [ text | alphabetic | ideographic | ideographic-ink ]?',\n\t\t\t'text-box-trim': 'none | trim-start | trim-end | trim-both',\n\t\t\t'view-timeline':\n\t\t\t\t\"[ <'view-timeline-name'> [ <'view-timeline-axis'> || <'view-timeline-inset'> ]? ]#\",\n\t\t\t'font-size': '| math',\n\t\t\t...secondaryOptions?.propertiesSyntax,\n\t\t};\n\n\t\t/**\n\t\t * @todo add support for oklab(), oklch(), color(), color-mix(), light-dark(), etc.\n\t\t * @see https://drafts.csswg.org/css-color-5/\n\t\t */\n\t\tconst typesSyntax = { ...secondaryOptions?.typesSyntax };\n\n\t\t/** @type {Map<string, string>} */\n\t\tconst typedCustomPropertyNames = new Map();\n\n\t\troot.walkAtRules(atRuleRegexes.propertyName, (atRule) => {\n\t\t\tconst propName = atRule.params.trim();\n\n\t\t\tif (!propName || !atRule.nodes || !isCustomProperty(propName)) return;\n\n\t\t\tfor (const node of atRule.nodes) {\n\t\t\t\tif (isDeclaration(node) && SYNTAX_DESCRIPTOR.test(node.prop)) {\n\t\t\t\t\tconst value = node.value.trim();\n\t\t\t\t\tconst unquoted = string.decode(value);\n\n\t\t\t\t\t// Only string values are valid.\n\t\t\t\t\t// We can not check the syntax of this property.\n\t\t\t\t\tif (unquoted === value) continue;\n\n\t\t\t\t\t// Any value is allowed in this custom property.\n\t\t\t\t\t// We don't need to check this property.\n\t\t\t\t\tif (unquoted === '*') continue;\n\n\t\t\t\t\t// https://github.com/csstree/csstree/pull/256\n\t\t\t\t\t// We can circumvent this issue by prefixing the property name,\n\t\t\t\t\t// making it a vendor-prefixed property instead of a custom property.\n\t\t\t\t\t// No one should be using `-stylelint--` as a property prefix.\n\t\t\t\t\t//\n\t\t\t\t\t// When this is resolved `typedCustomPropertyNames` can become a `Set<string>`\n\t\t\t\t\t// and the prefix can be removed.\n\t\t\t\t\tconst prefixedPropName = `-stylelint${propName}`;\n\n\t\t\t\t\ttypedCustomPropertyNames.set(propName, prefixedPropName);\n\t\t\t\t\tpropertiesSyntax[prefixedPropName] = unquoted;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst languageOptions = result.stylelint.config?.languageOptions;\n\t\tconst forkedLexer = fork({\n\t\t\tatrules: languageOptions?.syntax?.atRules || {},\n\t\t\tproperties: { ...(languageOptions?.syntax?.properties || {}), ...propertiesSyntax },\n\t\t\ttypes: { ...(languageOptions?.syntax?.types || {}), ...typesSyntax },\n\t\t\tcssWideKeywords: languageOptions?.syntax?.cssWideKeywords || [],\n\t\t}).lexer;\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst { prop } = decl;\n\t\t\tconst value = getDeclarationValue(decl);\n\n\t\t\t// csstree/csstree#243\n\t\t\t// NOTE: CSSTree's `fork()` doesn't support `-moz-initial`, but it may be possible in the future.\n\t\t\tif (/^-moz-initial$/i.test(value)) return;\n\n\t\t\tif (!isStandardSyntaxDeclaration(decl)) return;\n\n\t\t\tif (isDescriptorDeclaration(decl)) return;\n\n\t\t\tif (!isStandardSyntaxProperty(prop)) return;\n\n\t\t\tif (!isStandardSyntaxValue(value)) return;\n\n\t\t\tif (isCustomProperty(prop) && !typedCustomPropertyNames.has(prop)) return;\n\n\t\t\tif (isPropIgnored(prop, value)) return;\n\n\t\t\t/** @type {import('css-tree').CssNode} */\n\t\t\tlet cssTreeValueNode;\n\n\t\t\ttry {\n\t\t\t\tcssTreeValueNode = parse(value, { context: 'value', positions: true });\n\n\t\t\t\tif (containsUnsupportedFunction(cssTreeValueNode)) return;\n\t\t\t} catch {\n\t\t\t\tconst index = declarationValueIndex(decl);\n\t\t\t\tconst endIndex = index + value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejectedParseError,\n\t\t\t\t\tmessageArgs: [prop, value],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { error } = forkedLexer.matchProperty(\n\t\t\t\ttypedCustomPropertyNames.get(prop) ?? prop,\n\t\t\t\tcssTreeValueNode,\n\t\t\t);\n\n\t\t\tif (!error) return;\n\n\t\t\tif (!('mismatchLength' in error)) return;\n\n\t\t\tconst { name, rawMessage, loc } = error;\n\n\t\t\tif (name !== 'SyntaxMatchError') return;\n\n\t\t\tif (rawMessage !== 'Mismatch') return;\n\n\t\t\tconst valueIndex = declarationValueIndex(decl);\n\t\t\tconst mismatchValue = value.slice(loc.start.offset, loc.end.offset);\n\n\t\t\tconst functionNode = find(\n\t\t\t\tcssTreeValueNode,\n\t\t\t\t(node) =>\n\t\t\t\t\tnode.type === 'Function' &&\n\t\t\t\t\tnode.loc !== undefined &&\n\t\t\t\t\tloc.start.offset >= node.loc.start.offset &&\n\t\t\t\t\tloc.end.offset <= node.loc.end.offset,\n\t\t\t);\n\n\t\t\tif (functionNode?.loc) {\n\t\t\t\tconst valueFunction = value.slice(\n\t\t\t\t\tfunctionNode.loc.start.offset,\n\t\t\t\t\tfunctionNode.loc.end.offset,\n\t\t\t\t);\n\n\t\t\t\tconst index = valueIndex + functionNode.loc.start.offset;\n\t\t\t\tconst endIndex = index + valueFunction.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [prop, valueFunction],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [prop, mismatchValue],\n\t\t\t\tnode: decl,\n\t\t\t\tindex: valueIndex + loc.start.offset,\n\t\t\t\tendIndex: valueIndex + loc.end.offset,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\n/**\n * @see csstree/csstree#164 min, max, clamp\n * @see csstree/csstree#245 env\n * @param {import('css-tree').CssNode} cssTreeNode\n * @returns {boolean}\n */\nfunction containsUnsupportedFunction(cssTreeNode) {\n\treturn Boolean(\n\t\tfind(\n\t\t\tcssTreeNode,\n\t\t\t(node) => node.type === 'Function' && ['clamp', 'min', 'max', 'env'].includes(node.name),\n\t\t),\n\t);\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nexport default rule;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}